{"version":3,"sources":["components/SideBar/resposive.js","components/base.js","components/header/Header.js","reducers/types.js","components/budget/multistepsform/StepOne.js","components/budget/multistepsform/StepTwo.js","components/budget/multistepsform/StepThree.js","components/budget/multistepsform/StepFour.js","components/budget/multistepsform/steps.js","components/budget/CashFlow.js","components/common/Duration.js","graphql/mutation/savings/SavingsMutation.js","graphql/queries/savings/SavingsQuery.js","components/common/EditableContext.js","components/common/EditableFormRow.js","components/common/EditableTableRow.js","graphql/queries/income/IncomeQuery.js","graphql/mutation/fixedexpenses/FixedExpensesMutation.js","graphql/mutation/variableexpenses/VariableExpensesMutation.js","graphql/mutation/bills/BillsMutation.js","graphql/queries/spending/SpendingQuery.js","components/budget/savings/SavingsChart.js","components/budget/savings/SavingsTypeChart.js","components/budget/savings/SavingsPaiChart.js","graphql/mutation/extraretirementsavings/ExtraRetirementSavingsMutation.js","graphql/queries/extraretirementsavings/ExtraRetirementSavingsQuery.js","components/budget/savings/SavingsEditableTable.js","components/budget/savings/Saving.js","components/budget/income/IncomeChart.js","graphql/mutation/salary/SalaryMutation.js","graphql/mutation/salary/BenefitsMutation.js","components/budget/income/IncomePaiChart.js","graphql/queries/salary/BenefitsQuery.js","components/budget/income/IncomeEditableTable.js","components/budget/income/Income.js","components/budget/EditableCell.js","components/budget/Tracker.js","components/footer/Footer.js","graphql/queries/fixedexpenses/FixedExpensesQuery.js","components/budget/budgetplanner/fixedexpenses/FixedExpancesEditableTable.js","components/paystub/manual/manualfntryforms/AddAttributeForm.js","components/budget/budgetplanner/fixedexpenses/FixedExpance.js","graphql/queries/bills/BillsQuery.js","components/budget/budgetplanner/bill/BillsEditableTable.js","components/budget/budgetplanner/bill/Bills.js","graphql/queries/variableexpenses/VariableExpensesQuery.js","components/budget/budgetplanner/variableexpance/VariableExpancesEditableTable.js","components/budget/budgetplanner/variableexpance/VariableExpance.js","components/budget/budgetplanner/savings/SavingsEditableTable.js","components/budget/budgetplanner/savings/Savings.js","components/budget/budgetplanner/extraretirementsavings/ExtraRetirementSavingEditableTable.js","components/budget/budgetplanner/extraretirementsavings/ExtraRetirementSavings.js","components/budget/budgetplanner/BudgetPlannerEntry.js","components/budget/spending/SpendingChart.js","components/budget/spending/SpendingPaiChart.js","components/budget/spending/SpendingTypeChart.js","components/budget/spending/SpendingEditableTable.js","components/budget/spending/Spending.js","components/budget/BudgetSideBar.js","graphql/queries/salary/SalaryQuery.js","components/paystub/manual/manualfntryforms/salary/SalaryEditableTable.js","components/paystub/manual/manualfntryforms/salary/Salary.js","components/paystub/manual/manualfntryforms/benefits/BenefitsEditableTable.js","components/paystub/manual/manualfntryforms/benefits/Benefits.js","graphql/mutation/pretax/PreTaxMutation.js","graphql/queries/pretax/PreTaxQuery.js","components/paystub/manual/manualfntryforms/pretax/PreTaxDeductionEditableTable.js","components/paystub/manual/manualfntryforms/pretax/PreTaxDeduction.js","graphql/mutation/tax/TaxMutation.js","graphql/queries/tax/TaxQuery.js","components/paystub/manual/manualfntryforms/tax/TaxesEditableTable.js","components/paystub/manual/manualfntryforms/tax/Taxes.js","graphql/mutation/posttax/PostTaxMutation.js","graphql/queries/posttax/PostTaxQuery.js","components/paystub/manual/manualfntryforms/posttax/PostTaxDeductionEditableTable.js","components/paystub/manual/manualfntryforms/posttax/PostTaxDeductions.js","components/paystub/manual/ManualPayEntry.js","components/paystub/scanpdf/ScanPDF.js","components/paystub/PayStubSideBar.js","components/advice/AdviceSideBar.js","components/goals/CreateNewGoalForm.js","components/SideBar/MultiChart.js","components/goals/GoalsSideBar.js","components/calculators/CalculatorSideBar.js","components/accounts/Cash.js","components/accounts/AccountsSideBar.js","graphql/mutation/user/UserMutation.js","components/login/Login.js","components/PrivateRoute.js","components/dashboard/DashBoard.js","components/dashboard/SavingDataForChart.js","components/common/PrepareData.js","components/App.js","reducers/currentComponent.js","reducers/index.js","reducers/store.js","index.js"],"names":["Mobile","props","maxWidth","Default","minWidth","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","Layout","withRouter","useState","visible","setVisible","sideBarMenuKey","useHistory","useSelector","state","currentComponetReducer","sideBarMenuItemKey","content","style","width","height","background","src","user","photoURL","alt","className","borderRadius","align","color","displayName","email","Item","key","to","type","onClick","auth","signOut","then","menu","theme","mode","defaultSelectedKeys","selectedKeys","lineHeight","hidden","placement","trigger","size","title","closable","onClose","CURRENT_COMPONENT","StepOne","firstName","lastName","handleFirstNameChanged","bind","handleLastNameChanged","event","this","setState","target","value","placeholder","onChange","autoFocus","React","Component","StepTwo","emailConfirm","handleEmailChanged","handleEmailConfirmChanged","StepThree","password","passwordConfirm","handlePasswordChanged","handlePasswordConfirmChanged","StepFour","checked","handleCheckedChanged","href","steps","name","component","CashFlow","selectedDate","moment","startDate","_d","getFullYear","getMonth","format","daysInMonth","daysInYear","dayOfYear","yearStartDate","add","endDate","yearEndDate","subtract","durationType","mapView","0","1","2","3","4","CREATE_SAVING","gql","UPDATE_SAVING","DELETE_SAVING","USER_MONTEHLY_SAVING","USER_ALL_MONTHELY_SAVINGS","EditableContext","createContext","undefined","EditableFormRow","Form","create","form","index","Provider","EditableCell","editing","toggleEdit","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","margin","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","paddingRight","editable","restProps","Consumer","USER_MONTEHLY_INCOME","CREATE_FIXED_EXPENSES","UPDATE_FIXED_EXPENSES","DELETE_FIXED_EXPENSES","CREATE_VARIABLE_EXPENSES","UPDATE_VARIABLE_EXPENSES","DELETE_VARIABLE_EXPENSES","CREATE_BILLS","UPDATE_BILL","DELETE_BILL","USER_MONTEHLY_SPENDING","SavingsChart","chartData","options","chart","stacked","stackType","responsive","breakpoint","legend","position","offsetX","offsetY","xaxis","categories","month","fill","opacity","tooltip","fontSize","series","SavingTypeChart","labels","spendingTypeChartLavel","spendingTypeChartSeries","SavingPaiChart","paiChartData","paiChartLabels","CREATE_EXTRA_RET_SAVING","UPDATE_EXTRA_RET_SAVING","DELETE_EXTRA_RET_SAVING","USER_MONTEHLY_EXTRA_RETIREMENT_SAVING","SavingsEditableTable","Select","Option","handleResize","columns","nextColumns","handleChange","pagination","filters","sorter","filteredInfo","sortedInfo","handleDelete","deleteSavingMutation","variables","refetchQueries","query","user_id","tranaction_start_date","transaction_end_date","row","newData","salaryData","findIndex","item","splice","primaryDuration","primaryduration","defaultValue","spouseDuration","spouseduration","updateSavingMutation","duration","saving_amount","parseFloat","primaryamount","saving_type","saving_type_id","spouse_amount","spouseamount","spouse_duration","updateExtraSavingMutation","extra_retirement_saving_amount","extra_retirement_saving_type","extra_retirement_saving_type_id","handlePrimaryDurationChange","slId","handleSpouseDurationChange","durationView","onRef","newProps","render","text","filteredValue","onFilter","includes","a","b","length","sortOrder","columnKey","order","address","onConfirm","components","body","cell","header","columns2","map","col","onCell","onHeaderCell","column","onResize","rowClassName","dataSource","pageSize","scroll","y","bordered","useFixedHeader","span","primaryTotalSalary","spouseTotalSalary","child","compose","graphql","withApollo","Saving","showModal","handleCancel","saveFormRef","formRef","select","disabled","chartColors","primaryBenefit","spouseBenefit","primarySalary","spouseSalary","Group","buttonStyle","Button","fetchPolicy","loading","data","array1","graphData1","savings","extraRetirementSavingses","i","push","topic","transactionDate","primarySavings","Math","round","spouseSavings","primaryExtraRetirementSavingses","spouseExtraRetirementSavingses","salary_benefit","showSearch","optionFilterProp","filterOption","option","toLowerCase","indexOf","primaryDurationAmount","spouseDurationAmount","chartData12","result1","_","groupBy","items","j","temp12","Array","x","reduce","filter","console","log","IncomeChart","CREATE_SALARY","UPDATE_SALARY","DELETE_SALARY","CREATE_BENEFITS","UPDATE_BENEFITS","DELETE_BENEFIT","IncomePaiChart","incomePaiChartLavels","USER_MONTEHLY_BENEFITS","IncomeEditableTable","updateSalaryMutation","salary_amount","salary_category_id","spouse_salary","updateBenefitsMutation","benefit_type","benefit_type_id","Income","salaries","benefitses","salary_type_name","primarySalaryPai","spouseSalaryPai","primaryBenfitsPai","spouseBenfitsPai","EditableTable","handleAdd","count","age","tags","description","tag","toUpperCase","marginBottom","expandedRowRender","TabPane","Tabs","temp","Tracket","gutter","defaultActiveKey","tabPosition","tab","Footer","BudgetFooter","textAlign","USER_MONTEHLY_FIXED_EXPENSESG","FixedExpancesEditableTable","deleteFixedExpansesMutation","updateFixedExpansesMutation","fixed_expense_amount","fixed_expense_type","fixed_expense_type_id","AddAttributeForm","primary","spouse","primaryAmount","spouseAmount","onCancel","onCreate","okText","onOk","layout","label","FixedExpance","intialData","salary_type","wrappedComponentRef","preventDefault","err","createFixedExpenseMutation","currentDate","resetFields","notifyOnNetworkStatusChange","tempData","fixedExpenseses","USER_MONTEHLY_BILLS","BillsEditableTable","deleteBillMutation","updateBillMutation","bill_amount","bill_type","bill_type_id","Bills","createBillsMutation","bills_type","billsAmounts","USER_MONTEHLY_VARIABLE_EXPENSES","VariableExpancesEditableTable","deleteVariableExpansesMutation","updateVariableExpansesMutation","variable_expense_amount","variable_expense_type","variable_expense_type_id","VariableExpance","createVariableExpenseMutation","variableExpenseses","Savings","createSavingsMutation","ExtraRetirementSavingEditableTable","deleteExtraSavingMutation","ExtraRetirementSavings","createExtraRetSavingsMutation","MonthPicker","DatePicker","BudgetPlannerEntry","date","current","dateString","nextButtonCls","backButtonCls","SpendingChart","SpendingPaiChart","SpendingTypeChart","SpendingEditableTable","Spending","bills","primaryFixedExpenseses","spouseFixedExpenseses","primaryBills","spouseBills","primaryVariableExpenseses","spouseVriableExpenseses","Content","Sider","BudgetSideBar","collapsed","onCollapse","dispatch","useDispatch","useEffect","payload","padding","collapsible","onBreakpoint","broken","inlineCollapsed","spin","SubMenu","from","exact","path","USER_MONTEHLY_SALARY","SalaryEditableTable","deleteSalaryMutation","Salary","createSalaryMutation","BenefitsEditableTable","deleteBenefitMutation","updateBenefitMutation","Benefits","createBenifitsMutation","benfeit_type","CREATE_PRETAXDEUCTION","UPDATE_PRETAXDEUCTIO","DELETE_PRETAXDEUCTIO","USER_PRETAXDEDUCTION","USER_MONTEHLY_PRETAXDEDUCTION","PreTaxDeductionEditableTable","deletePreTaxDeductionMutation","updatePreTaxDeductionMutation","pre_tax_amount","pre_tax_type","pre_tax_type_id","PreTaxDeduction","createPreTaxDeductionMutation","preTaxAmounts","CREATE_TAX","UPDATE_TAX","DELETE_TAX","USER_MONTEHLY_TAXES","TaxesEditableTable","deleteTaxMutation","updateTaxMutation","tax_amount","tax_type","tax_type_id","Taxes","createTaxMutation","taxesAmounts","CREATE_POSTTAXDEUCTION","UPDATE_POSTTAXDEUCTIO","DELETE_POSTTAXDEUCTIO","USER_MONTEHLY_POSTTAXDEDUCTION","PostTaxDeductionEditableTable","deletePostTaxDeductionMutation","updatePostTaxDeductionMutation","post_tax_amount","post_tax_type","post_tax_type_id","PostTaxDeduction","createPostTaxDeductionMutation","postTaxAmounts","ManualPayEntry","readyForSubmit","abc","PostTaxDeductions","UPLOAD_MUTATION","ScanPDF","fileList","uploading","onRemove","file","newFileList","slice","beforeUpload","Dragger","mutation","marginTop","PayStubSideBar","AdviceSideBar","border","CreateNewGoalForm","MultiChart","updateCharts","optionsMixedChart","toolbar","show","plotOptions","bar","columnWidth","endingShape","stroke","markers","strokeWidth","fillOpacity","strokeOpacity","hover","yaxis","tickAmount","min","max","seriesMixedChart","optionsRadial","radialBar","startAngle","endAngle","hollow","image","imageOffsetX","imageOffsetY","dropShadow","enabled","top","left","blur","track","dataLabels","showOn","formatter","val","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","lineCap","seriesRadial","optionsBar","horizontal","axisBorder","axisTicks","horizontalAlign","seriesBar","newMixedSeries","newBarSeries","s","floor","random","GoalsSideBar","setMessage","reptile","goal","CalculatorSideBar","Cash","handleSubmit","normFile","isArray","onSubmit","valuePropName","getValueFromEvent","htmlType","AccountsSideBar","CREATE_USER","Login","handleSignUp","async","provider","GoogleAuthProvider","history","signInWithPopup","result","createUserMutation","screen_user_name","alert","handleFbSignUp","FacebookAuthProvider","catch","code","credential","action","method","data-validate","aria-hidden","PrivateRoute","authenticated","rest","DashBoard","useRef","headStyle","primaryTotalSaving","precision","valueStyle","suffix","spouseTotalSaving","primaryExtraTotalSaving","spouseExtraTotalSaving","SavingDataForChart","savingChartData","createHashHistory","App","onAuthStateChanged","exatc","initialState","currentComponent","sideBarMenuOptionKey","combineReducers","store","createStore","rootReducer","link","createUploadLink","uri","cache","InMemoryCache","client","ApolloClient","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.42489970.chunk.js","sourcesContent":["import React from 'react';\r\nimport Responsive from 'react-responsive';\r\n\r\nconst XXL = props => <Responsive {...props} minWidth={1601} />;\r\nconst XL = props => <Responsive {...props} minWidth={1200} maxWidth={1600} />;\r\nconst Desktop = props => <Responsive {...props} minWidth={992} />;\r\nconst Tablet = props => <Responsive {...props} minWidth={768} maxWidth={991} />;\r\nconst Mobile = props => <Responsive {...props}  maxWidth={780} />;\r\nconst Default = props => <Responsive {...props} minWidth={790} />;\r\n\r\nexport {\r\n    XXL,\r\n    XL,\r\n    Desktop,\r\n    Tablet,\r\n    Mobile,\r\n    Default\r\n};","import firebase from 'firebase'\r\nlet config = {\r\n    apiKey: \"AIzaSyDYO5FfdKiE6zp2Bt1rdYUnhL3xxNt3uBI\",\r\n    authDomain: \"react-firebase-auth-272e9.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-auth-272e9.firebaseio.com\",\r\n    projectId: \"react-firebase-auth-272e9\",\r\n    storageBucket: \"react-firebase-auth-272e9.appspot.com\",\r\n    messagingSenderId: \"922542910301\",\r\n    appId: \"1:922542910301:web:7d9383dd9b746ba41816b4\",\r\n    measurementId: \"G-7LTMHK4P84\"\r\n};\r\nconst app=firebase.initializeApp(config);\r\nexport default app;","import React, { useState } from \"react\";\r\nimport {Button, Divider, Drawer, Icon, Layout, Menu, Modal, Popover} from \"antd\";\r\nimport \"antd/es/date-picker/style/css\";\r\nimport { Default, Mobile } from \"../SideBar/resposive\";\r\nimport \"../../styles/index.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport \"../login/login1.css\";\r\nimport app from \"../base\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as firebase from \"firebase\";\r\nconst { Header } = Layout;\r\n\r\n\r\nconst HeaderRes = props => {\r\n  const [visible, setVisible] = useState(false\r\n  );\r\n\r\n  let history = useHistory();\r\n\r\n  const sideBarMenuKey = useSelector(\r\n      state => state.currentComponetReducer.sideBarMenuItemKey\r\n  );\r\n\r\n  const handleSignOut=()=>\r\n  {\r\n\r\n     app.auth().signOut()\r\n        .then(() => {\r\n\r\n        });\r\n  };\r\n\r\n  const content = (\r\n      <div >\r\n        <div  style={{ width: 250,\r\n          height: 250,background:\"skyblue\"}}>\r\n          <div style={{height:\"20px\"}}/>\r\n          <img src={props.user.photoURL} alt=\"Logo\"  className=\"profileImage\" style={{ borderRadius: 200 / 2}}/>\r\n          <div style={{height:\"20px\"}}/>\r\n          <div   align=\"center\" style={{color:\"black\",height:\"20px\"}}>{props.user.displayName}</div>\r\n          <div style={{height:\"20px\"}}/>\r\n          <div   align=\"center\" style={{color:\"black\",height:\"80px\"}}>{props.user.email}</div>\r\n        </div>\r\n        <Divider/>\r\n        <div >\r\n\r\n          <Menu.Item key=\"profile\" >\r\n            <NavLink to=\"\"><Icon type=\"profile\" /> Profile</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"help\" >\r\n            <NavLink to=\"\"><Icon type=\"question-circle\"  /> Help</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"settings\" >\r\n            <NavLink to=\"\"><Icon type=\"setting\" /> Help</NavLink>\r\n          </Menu.Item>\r\n        <Menu.Item key=\"logOut\"  onClick={handleSignOut}>\r\n          <NavLink to=\"\"><Icon type=\"logout\"  /> Log Out</NavLink>\r\n        </Menu.Item>\r\n        </div>\r\n      </div>\r\n  );\r\n\r\n\r\n  const menu = (\r\n      <Menu\r\n          theme=\"dark\"\r\n          mode={visible ? \"vertical\" : \"horizontal\"}\r\n          defaultSelectedKeys={\"/\"}\r\n          selectedKeys={[sideBarMenuKey]}\r\n          style={{ lineHeight: \"64px\" }}\r\n      >\r\n          <Menu.Item key=\"dashboard\" >\r\n              <NavLink to=\"/\"> Dash Board</NavLink>\r\n          </Menu.Item>\r\n        <Menu.Item key=\"paystub\" >\r\n          <NavLink to=\"/paystub/manualentry\"> Pay Stub</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"budget\" >\r\n          <NavLink to=\"/budget/budgetEntry\">Budget</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"advice\" >\r\n          <NavLink to=\"/advice\"> Advice</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"goals\" >\r\n          <NavLink to=\"/goals\"> Goals</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"calculator\" >\r\n          <NavLink to=\"/calculator\">Calculators</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"accounts\" >\r\n          <NavLink to=\"/accounts/cash\">Accounts</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"user\" hidden={visible}>\r\n          <span>\r\n           <Popover placement=\"bottom\" content={content} trigger=\"click\" >\r\n               {props.user.photoURL?<img src={props.user.photoURL} alt=\"Logo\"  style={{ width: 50,\r\n                   height: 50,\r\n                   borderRadius: 100 / 2}}/>:<Icon type=\"user\"/>\r\n               }\r\n          </Popover>\r\n          </span>\r\n        </Menu.Item>\r\n\r\n      </Menu>\r\n\r\n  );\r\n\r\n  return (\r\n      <Header className=\"app-header\">\r\n        <div className=\"logo\">\r\n          <Icon type=\"dollar\" />\r\n          mart Money\r\n        </div>\r\n        <Default>{menu}</Default>\r\n        <Mobile>\r\n          <Icon\r\n              type=\"bars\"\r\n              size=\"large\"\r\n              className=\"nav-icon\"\r\n              onClick={() => setVisible(true)}\r\n          />\r\n          <Drawer\r\n              title=\"\"\r\n              placement=\"right\"\r\n              closable\r\n              onClose={() => setVisible(false)}\r\n              visible={visible}\r\n              className=\"nav-drawer\"\r\n          >\r\n            <div className=\"logo\">\r\n              <Icon type=\"dollar\" />\r\n              mart Money\r\n            </div>\r\n            {menu}\r\n          </Drawer>\r\n        </Mobile>\r\n\r\n\r\n      </Header>\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderRes);","const CURRENT_COMPONENT = \"CURRENT_COMPONENT\";\r\nexport default  CURRENT_COMPONENT ;\r\n","'use strict';\r\nimport React from 'react'\r\n\r\nexport class StepOne extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = { \r\n      firstName: '', \r\n      lastName: ''\r\n    };\r\n    this.handleFirstNameChanged = this.handleFirstNameChanged.bind(this);\r\n    this.handleLastNameChanged = this.handleLastNameChanged.bind(this);\r\n  }\r\n\r\n  handleFirstNameChanged (event) {\r\n    this.setState({firstName: event.target.value})\r\n  }\r\n\r\n  handleLastNameChanged (event) {\r\n    this.setState({lastName: event.target.value})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='six columns'>\r\n            <label>First Name</label>\r\n            <input\r\n              className='u-full-width'\r\n              placeholder='First Name'\r\n              type='text'\r\n              onChange={this.handleFirstNameChanged}\r\n              value={this.state.firstName}\r\n              autoFocus\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='six columns'>\r\n            <label>Last Name</label>\r\n            <input\r\n              className='u-full-width'\r\n              placeholder='Last Name'\r\n              type='text'\r\n              onChange={this.handleLastNameChanged}\r\n              value={this.state.lastName}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","'use strict';\r\nimport React from 'react'\r\n\r\nexport class StepTwo extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      emailConfirm: ''\r\n    };\r\n    this.handleEmailChanged = this.handleEmailChanged.bind(this);\r\n    this.handleEmailConfirmChanged = this.handleEmailConfirmChanged.bind(this);\r\n  }\r\n\r\n  handleEmailChanged (event) {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  handleEmailConfirmChanged (event) {\r\n    this.setState({emailConfirm: event.target.value})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='six columns'>\r\n            <label>Your email</label>\r\n            <input\r\n              className='u-full-width required'\r\n              placeholder='test@mailbox.com'\r\n              type='email'\r\n              onChange={this.handleEmailChanged}\r\n              value={this.state.email}\r\n              autoFocus\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='six columns'>\r\n            <label>Confirm email</label>\r\n            <input\r\n              className='u-full-width'\r\n              placeholder='Confirm email'\r\n              type='email'\r\n              onChange={this.handleEmailConfirmChanged}\r\n              value={this.state.emailConfirm}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class StepThree extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = { \r\n      password: '', \r\n      passwordConfirm: '' \r\n    };\r\n    this.handlePasswordChanged = this.handlePasswordChanged.bind(this);\r\n    this.handlePasswordConfirmChanged = this.handlePasswordConfirmChanged.bind(this);\r\n  }\r\n\r\n  handlePasswordChanged (event) {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  handlePasswordConfirmChanged (event) {\r\n    this.setState({passwordConfirm: event.target.value})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='six columns'>\r\n            <label>Password</label>\r\n            <input\r\n              className='u-full-width required'\r\n              placeholder='Password'\r\n              type='password'\r\n              onChange={this.handlePasswordChanged}\r\n              value={this.state.password}\r\n              autoFocus\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='six columns'>\r\n            <label>Confirm password</label>\r\n            <input\r\n              className='u-full-width'\r\n              placeholder='Confirm Password'\r\n              type='password'\r\n              onChange={this.handlePasswordConfirmChanged}\r\n              value={this.state.passwordConfirm}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","'use strict';\r\nimport React from 'react'\r\n\r\nexport class StepFour extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = { \r\n      checked: '' \r\n    };\r\n    this.handleCheckedChanged = this.handleCheckedChanged.bind(this);\r\n  }\r\n\r\n  handleCheckedChanged (event) {\r\n    this.setState({checked: event.target.checked})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div className='ten columns terms'>\r\n            <span>By clicking \"Accept\" I agree that:</span>\r\n            <ul className='docs-terms'>\r\n              <li>\r\n                I have read and accepted the <a href='#'>User Agreement</a>\r\n              </li>\r\n              <li>\r\n                I have read and accepted the <a href='#'>Privacy Policy</a>\r\n              </li>\r\n              <li>I am at least 18 years old</li>\r\n            </ul>\r\n            <label>\r\n              <input\r\n                type='checkbox'\r\n                //   defaultChecked={this.state.checked}\r\n                checked={this.state.checked}\r\n                onChange={this.handleCheckedChanged}\r\n                autoFocus\r\n              />\r\n              <span> Accept </span>{' '}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { StepOne } from './StepOne'\r\nimport { StepTwo } from './StepTwo'\r\nimport { StepThree } from './StepThree'\r\nimport { StepFour } from './StepFour'\r\n\r\nconst steps = \r\n    [\r\n      {name: 'Name', component: <StepOne/>},\r\n      {name: 'Email', component: <StepTwo/>},\r\n      {name: 'Password', component: <StepThree/>},\r\n      {name: 'Agreement', component: <StepFour/>}\r\n    ];\r\n\r\nexport { steps }","import React from 'react';\r\nimport MultiStep from \"react-multistep\";\r\nimport {steps} from \"./multistepsform/steps\";\r\nimport \"./css/custom.css\";\r\nimport \"./css/normalize.css\";\r\nimport \"./css/prog-tracker.css\";\r\nimport \"./css/skeleton.css\";\r\n\r\n\r\n\r\nconst CashFlow = props => {\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div>\r\n                <MultiStep steps={steps} />\r\n            </div>\r\n        </div>\r\n     );\r\n};\r\n\r\nexport default CashFlow;","import moment from \"moment\";\r\nimport React from \"react\";\r\nexport const monthFormat = \"YYYY/MMMM\";\r\nexport const selectedDate = new moment();\r\nexport const startDate = moment([\r\n  selectedDate._d.getFullYear(),\r\n  selectedDate._d.getMonth(),\r\n  1\r\n]).format(\"YYYY-MM-DD\");\r\nconst daysInMonth = moment(startDate).daysInMonth();\r\nconst daysInYear = moment(startDate).dayOfYear();\r\nexport const yearStartDate = moment(startDate)\r\n  .add(daysInMonth - 1, \"days\")\r\n  .format(\"YYYY-MM-DD\");\r\nexport const endDate = moment(startDate)\r\n  .add(daysInMonth - 1, \"days\")\r\n  .format(\"YYYY-MM-DD\");\r\nexport const yearEndDate = moment(startDate)\r\n  .subtract(daysInYear - 1, \"days\")\r\n  .format(\"YYYY-MM-DD\");\r\nexport const durationType = [\r\n  \"Annually\",\r\n  \"Quarterly\",\r\n  \"Monthly\",\r\n  \"Weekly\",\r\n  \"Fortnightly\"\r\n];\r\nexport const mapView = [{ 0: 1 }, { 1: 4 }, { 2: 12 }, { 3: 54 }, { 4: 26 }];\r\n\r\n","import gql from \"graphql-tag\";\r\nexport const CREATE_SAVING = gql`\r\n    mutation createSaving($user_id: String!, $saving_type: String!,$transactionDate:DateTime!) {\r\n        createSaving(\r\n            data: {\r\n                user_id: $user_id\r\n                saving_type: {\r\n                    create: { saving_type: $saving_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                saving_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_SAVING = gql`\r\n    mutation updateSaving(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $saving_amount: Float\r\n        $saving_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateSaving(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                saving_amount: $saving_amount\r\n                saving_type: $saving_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_SAVING = gql`\r\n    mutation deleteSaving($id: ID!) {\r\n        deleteSaving(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const USER_SAVNGS = gql`\r\n    query getAllSavings {\r\n        savings {\r\n            id\r\n            user_id\r\n            duration\r\n            saving_amount\r\n            saving_type {\r\n                id\r\n                saving_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n    \r\n`;\r\n\r\nexport const USER_MONTEHLY_SAVING=gql`\r\nquery getAllMonthelySavings($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n    savings(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n        id\r\n        user_id\r\n        duration\r\n        saving_amount\r\n        saving_type {\r\n            id\r\n            saving_type\r\n            status\r\n        }\r\n        spouse_amount\r\n        spouse_duration   \r\n    }\r\n}\r\n`;\r\n\r\nexport const USER_ALL_MONTHELY_SAVINGS=gql`\r\nquery getAllMonthelySavings($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n    savings(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n        id\r\n        user_id\r\n        duration\r\n        saving_amount\r\n        saving_type {\r\n            id\r\n            saving_type\r\n            status\r\n        }\r\n        spouse_amount\r\n        spouse_duration\r\n         transactionDate\r\n    },\r\n    extraRetirementSavingses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n        id\r\n        user_id\r\n        duration\r\n        extra_retirement_saving_amount\r\n        extra_retirement_saving_type {\r\n            id\r\n            extra_retirement_saving_type\r\n            status\r\n        }\r\n        spouse_amount\r\n        spouse_duration\r\n        transactionDate\r\n    }\r\n    \r\n}\r\n\r\n`;","import React from \"react\";\r\n\r\nconst EditableContext = React.createContext(undefined, undefined);\r\n\r\nexport default EditableContext;","import {Form} from \"antd\";\r\nimport React from \"react\";\r\nimport EditableContext from \"./EditableContext\";\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst  EditableFormRow = Form.create()(EditableRow);\r\n\r\nexport default EditableFormRow;","import React from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport EditableContext from \"./EditableContext\";\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(\r\n                    <Input\r\n                        ref={node => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>\r\n                        {this.renderCell}\r\n                    </EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableCell;","import gql from \"graphql-tag\";\r\n\r\nexport const USER_MONTEHLY_INCOME=gql`\r\n    query getAllIncome($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        salaries(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            salary_amount\r\n            salary_category_id {\r\n                id\r\n                salary_type_name\r\n                status\r\n            }\r\n            spouse_salary\r\n            spouse_duration\r\n            transactionDate\r\n        },\r\n        benefitses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            salary_amount\r\n            benefit_type {\r\n                id\r\n                benefit_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n            transactionDate\r\n        }\r\n        \r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const CREATE_FIXED_EXPENSES = gql`\r\n    mutation createFixedExpenses($user_id: String!, $fixed_expense_type: String!,$transactionDate:DateTime!) {\r\n        createFixedExpenses(\r\n            data: {\r\n                user_id: $user_id\r\n                fixed_expense_type: {\r\n                    create: { fixed_expense_type: $fixed_expense_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                fixed_expense_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_FIXED_EXPENSES = gql`\r\n    mutation updateFixedExpenses(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $fixed_expense_amount: Float\r\n        $fixed_expense_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateFixedExpenses(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                fixed_expense_amount: $fixed_expense_amount\r\n                fixed_expense_type: $fixed_expense_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_FIXED_EXPENSES = gql`\r\n    mutation deleteFixedExpenses($id: ID!) {\r\n        deleteFixedExpenses(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const CREATE_VARIABLE_EXPENSES = gql`\r\n    mutation createVariableExpenses($user_id: String!, $variable_expense_type: String!,$transactionDate:DateTime!) {\r\n        createVariableExpenses(\r\n            data: {\r\n                user_id: $user_id\r\n                variable_expense_type: {\r\n                    create: { variable_expense_type: $variable_expense_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                variable_expense_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_VARIABLE_EXPENSES = gql`\r\n    mutation updateVariableExpenses(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $variable_expense_amount: Float\r\n        $variable_expense_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateVariableExpenses(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                variable_expense_amount: $variable_expense_amount\r\n                variable_expense_type: $variable_expense_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_VARIABLE_EXPENSES = gql`\r\n    mutation deleteVariableExpenses($id: ID!) {\r\n        deleteVariableExpenses(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const CREATE_BILLS = gql`\r\n    mutation createBillsAmount($user_id: String!, $bills_type: String!,$transactionDate:DateTime!) {\r\n        createBillsAmount(\r\n            data: {\r\n                user_id: $user_id\r\n                bill_type: {\r\n                    create: { bills_type: $bills_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                bill_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_BILL = gql`\r\n    mutation updateBillsAmount(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $bill_amount: Float\r\n        $bill_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateBillsAmount(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                bill_amount: $bill_amount\r\n                bill_type: $bill_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_BILL = gql`\r\n    mutation deleteBillsAmount($id: ID!) {\r\n        deleteBillsAmount(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\n\r\nexport const USER_MONTEHLY_SPENDING=gql`\r\n    query getAllSpending($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        billsAmounts(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            bill_amount\r\n            bill_type {\r\n                id\r\n                bills_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n            transactionDate\r\n        },\r\n        variableExpenseses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            variable_expense_amount\r\n            variable_expense_type {\r\n                id\r\n                variable_expense_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n            transactionDate\r\n        },\r\n        fixedExpenseses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            fixed_expense_amount\r\n            fixed_expense_type {\r\n                id\r\n                fixed_expense_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n            transactionDate\r\n        }\r\n\r\n    }\r\n`;","import React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nclass SavingsChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData:[],\r\n            options: {\r\n                chart: {\r\n                    stacked: true,\r\n                    stackType: '100%'\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom',\r\n                            offsetX: -10,\r\n                            offsetY: 0\r\n                        }\r\n                    }\r\n                }],\r\n                xaxis: {\r\n                    categories: this.props.month,\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                legend: {\r\n                    position: 'bottom',\r\n                    offsetX:1\r\n\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        background: \"#00a0e9\"\r\n\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ chartData: this.props.chartData });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Chart options={this.state.options} series={this.props.chartData} type=\"bar\" height=\"270\"  width=\"350\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SavingsChart;","\r\nimport React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass SavingTypeChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: {\r\n                legend: {\r\n                    position: 'bottom',\r\n                },\r\n                labels: this.props.spendingTypeChartLavel,\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'top'\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ chartData: this.props.spendingTypeChartSeries });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Chart options={this.state.options} series={this.props.spendingTypeChartSeries} type=\"pie\"  height=\"240\"  width=\"350\" />\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SavingTypeChart;","\r\nimport React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass SavingPaiChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            paiChartData:[],\r\n            options: {\r\n                labels: this.props.paiChartLabels,\r\n                legend: {\r\n                    position: 'bottom',\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'top'\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ chartData: this.props.chartData });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Chart options={this.state.options} series={this.props.paiChartData} type=\"pie\"  height=\"284\" width=\"350\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SavingPaiChart;","import gql from \"graphql-tag\";\r\nexport const CREATE_EXTRA_RET_SAVING = gql`\r\n    mutation createExtraRetirementSavings($user_id: String!, $extra_retirement_saving_type: String!,$transactionDate:DateTime!) {\r\n        createExtraRetirementSavings(\r\n            data: {\r\n                user_id: $user_id\r\n                extra_retirement_saving_type: {\r\n                    create: { extra_retirement_saving_type: $extra_retirement_saving_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                extra_retirement_saving_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_EXTRA_RET_SAVING = gql`\r\n    mutation updateExtraRetirementSavings(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $extra_retirement_saving_amount: Float\r\n        $extra_retirement_saving_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateExtraRetirementSavings(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                extra_retirement_saving_amount: $extra_retirement_saving_amount\r\n                extra_retirement_saving_type: $extra_retirement_saving_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_EXTRA_RET_SAVING = gql`\r\n    mutation deleteExtraRetirementSavings($id: ID!) {\r\n        deleteExtraRetirementSavings(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const USER_EXTRA_RETIREMENT_SAVING = gql`\r\n    query getAllExtraRetirementSavings {\r\n        extraRetirementSavingses {\r\n            id\r\n            user_id\r\n            duration\r\n            extra_retirement_saving_amount\r\n            extra_retirement_saving_type {\r\n                id\r\n                extra_retirement_saving_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USER_MONTEHLY_EXTRA_RETIREMENT_SAVING=gql`\r\n    query getAllExtraRetirementSavings($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        extraRetirementSavingses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            extra_retirement_saving_amount\r\n            extra_retirement_saving_type {\r\n                id\r\n                extra_retirement_saving_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col, Divider\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport { USER_MONTEHLY_SAVING } from \"../../../graphql/queries/savings/SavingsQuery\";\r\nimport EditableFormRow from \"../../common/EditableFormRow\";\r\nimport EditableCell from \"../../common/EditableTableRow\";\r\nimport {USER_MONTEHLY_INCOME} from \"../../../graphql/queries/income/IncomeQuery\";\r\nimport {durationType, mapView} from \"../../common/Duration\";\r\nimport {\r\n    DELETE_FIXED_EXPENSES,\r\n    UPDATE_FIXED_EXPENSES\r\n} from \"../../../graphql/mutation/fixedexpenses/FixedExpensesMutation\";\r\nimport {\r\n    DELETE_VARIABLE_EXPENSES,\r\n    UPDATE_VARIABLE_EXPENSES\r\n} from \"../../../graphql/mutation/variableexpenses/VariableExpensesMutation\";\r\nimport {DELETE_BILL, UPDATE_BILL} from \"../../../graphql/mutation/bills/BillsMutation\";\r\nimport {USER_MONTEHLY_SPENDING} from \"../../../graphql/queries/spending/SpendingQuery\";\r\nimport SavingsChart from \"./SavingsChart\";\r\nimport SavingTypeChart from \"./SavingsTypeChart\";\r\nimport SavingPaiChart from \"./SavingsPaiChart\";\r\nimport {DELETE_SAVING, UPDATE_SAVING} from \"../../../graphql/mutation/savings/SavingsMutation\";\r\nimport {\r\n    DELETE_EXTRA_RET_SAVING,\r\n    UPDATE_EXTRA_RET_SAVING\r\n} from \"../../../graphql/mutation/extraretirementsavings/ExtraRetirementSavingsMutation\";\r\nimport {USER_MONTEHLY_EXTRA_RETIREMENT_SAVING} from \"../../../graphql/queries/extraretirementsavings/ExtraRetirementSavingsQuery\";\r\nconst { Option } = Select;\r\n\r\nclass SavingsEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            durationView:0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n        this.setState({durationView:this.props.durationView})\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({ salaryData: newProps.salaryData });\r\n    }\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteSavingMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_SAVING,\r\n                    variables: {\r\n                        user_id: this.props.user.email,\r\n                        tranaction_start_date: this.props.startDate,\r\n                        transaction_end_date: this.props.endDate\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        //const salaryData = [...this.state.salaryData];\r\n        //this.setState({ salaryData: salaryData.filter(item => item.key !== key) });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n\r\n        if (row.type === \"savings\") {\r\n            this.props.updateSavingMutation({\r\n                variables: {\r\n                    user_id: row.user_id,\r\n                    duration: primaryDuration,\r\n                    saving_amount: parseFloat(row.primaryamount),\r\n                    saving_type: row.saving_type_id,\r\n                    id: row.key,\r\n                    spouse_amount: parseFloat(row.spouseamount),\r\n                    spouse_duration: spouseDuration\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SAVING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        } else if(row.type === \"extraRetirementSavingses\") {\r\n            this.props.updateExtraSavingMutation({\r\n                variables: {\r\n                    user_id: row.user_id,\r\n                    duration: primaryDuration,\r\n                    extra_retirement_saving_amount: parseFloat(row.primaryamount),\r\n                    extra_retirement_saving_type: row.extra_retirement_saving_type_id,\r\n                    id: row.key,\r\n                    spouse_amount: parseFloat(row.spouseamount),\r\n                    spouse_duration: spouseDuration\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId,type) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        if (type === \"savings\"){\r\n            this.props.updateSavingMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    duration: primaryDuration,\r\n                    saving_type: slId.saving_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SAVING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n       else if(type === \"extraRetirementSavingses\") {\r\n            this.props.updateExtraSavingMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    duration: primaryDuration,\r\n                    extra_retirement_saving_type: slId.extra_retirement_saving_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId,type) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        if (type === \"savings\"){\r\n            this.props.updateSavingMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    spouse_duration: spouseDuration,\r\n                    saving_type: slId.saving_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SAVING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else if(type === \"extraRetirementSavingses\") {\r\n            this.props.updateExtraSavingMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    spouse_duration: spouseDuration,\r\n                    extra_retirement_saving_type: slId.extra_retirement_saving_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo,durationView } = this.state;\r\n        const { salaryData } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 300\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 200\r\n            },\r\n            {\r\n                title: durationType[this.props.durationView],\r\n                dataIndex: \"primaryDurationAmount\",\r\n                key: \"primaryDurationAmount\",\r\n                editable: false,\r\n                width: 200\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 200\r\n            },\r\n            {\r\n                title: durationType[this.props.durationView],\r\n                dataIndex: \"spouseDurationAmount\",\r\n                key: \"spouseDurationAmount\",\r\n                editable: false,\r\n                width: 200\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-income-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={{pageSize: 5}  }\r\n                        scroll={{ y: 230 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                        useFixedHeader={true}\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={3} />\r\n                    <Col span={4}>\r\n                        <div className=\"incomeFont\">Total  {durationType[this.props.durationView]}</div>\r\n                    </Col>\r\n                    <Col span={4} />\r\n                    <Col span={6}>\r\n                        <Statistic className=\"incomeFont\"\r\n                                   title=\"Primary Savings\"\r\n                                   value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={2} />\r\n                    <Col span={3}>\r\n                        <Statistic className=\"incomeFont\"\r\n                                   title=\"Spouse  Savings\"\r\n                                   value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider style={{height:1}}/>\r\n                <div className=\"flex-row\">\r\n                    <div className=\"flex-col\"><SavingsChart\r\n                        onRef={ref => (this.child = ref)}\r\n                        chartData={this.props.chartData}\r\n                        month={this.props.month}/>\r\n                    </div>\r\n                    <div className=\"flex-col\"> <SavingTypeChart\r\n                        onRef={ref => (this.child = ref)}\r\n                        spendingTypeChartLavel={this.props.spendingTypeChartLavel}\r\n                        spendingTypeChartSeries={this.props.spendingTypeChartSeries}\r\n                    /></div>\r\n                    <div className=\"flex-col\"> <SavingPaiChart\r\n                        onRef={ref => (this.child = ref)}\r\n                        paiChartData={this.props.paiChartData}\r\n                        paiChartLabels={this.props.paiChartLabels}/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_SAVING, { name: \"updateSavingMutation\" }),\r\n    graphql(UPDATE_EXTRA_RET_SAVING,{name:\"updateExtraSavingMutation\"}),\r\n    graphql(DELETE_SAVING, { name: \"deleteSavingMutation\" }),\r\n    graphql(DELETE_EXTRA_RET_SAVING,{name:\"deleteExtraSavingMutation\"}),\r\n)(withApollo(SavingsEditableTable));\r\n","import React from \"react\";\r\nimport { Radio, Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../styles/index.css\";\r\nimport { compose, graphql, Mutation, Query, withApollo } from \"react-apollo\";\r\nimport { yearEndDate, yearStartDate, durationType,mapView} from \"../../common/Duration\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport {CREATE_SAVING} from \"../../../graphql/mutation/savings/SavingsMutation\";\r\nimport {USER_ALL_MONTHELY_SAVINGS} from \"../../../graphql/queries/savings/SavingsQuery\";\r\nimport SavingsEditableTable from \"./SavingsEditableTable\";\r\nconst { Option } = Select;\r\n\r\nclass Saving extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            durationView:0,\r\n            startDate: yearStartDate,\r\n            endDate: yearEndDate,\r\n            disabled: [],\r\n            chartColors: {\r\n                primaryBenefit: \"#e96d8d\",\r\n                spouseBenefit: \"#40ee86\",\r\n                primarySalary: \"#67d6c0\",\r\n                spouseSalary: \"#127197\"\r\n            }\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId,type) => {\r\n        this.child.handlePrimaryDurationChange(select, slId,type);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId,type) => {\r\n        this.child.handleSpouseDurationChange(select, slId,type);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const durationView=this.state.durationView;\r\n        return (\r\n            <div className=\"ant-layout\">\r\n\r\n\r\n\r\n\r\n                <Radio.Group defaultValue=\"0\" buttonStyle=\"solid\" onChange={e=>{\r\n                    this.setState({durationView:e.target.value})\r\n                }}>\r\n                    <Radio.Button value=\"0\">Annually</Radio.Button>\r\n                    <Radio.Button value=\"1\">Quarterly</Radio.Button>\r\n                    <Radio.Button value=\"2\">Monthly</Radio.Button>\r\n                    <Radio.Button value=\"3\">Weekly</Radio.Button>\r\n                    <Radio.Button value=\"4\">Fortnightly</Radio.Button>\r\n                </Radio.Group>\r\n                {\r\n                    <Query\r\n                        query={USER_ALL_MONTHELY_SAVINGS}\r\n                        variables={{\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.state.endDate,\r\n                            transaction_end_date: this.state.startDate\r\n                        }}\r\n                        fetchPolicy={\"network-only\"}\r\n                    >\r\n                        {({ loading, error, data }) => {\r\n                            if (loading)\r\n                                return (\r\n                                    <div style={{ align: \"center\" }}>\r\n                                        <Icon type=\"loading\" />\r\n                                    </div>\r\n                                );\r\n                            if (error) return <div>Error</div>;\r\n                            const array1 = [];\r\n                            let graphData1 = [];\r\n\r\n                            if (data != null) {\r\n                                const savings = data.savings;\r\n                                const extraRetirementSavingses = data.extraRetirementSavingses;\r\n                                let primaryTotalSalary = 0;\r\n                                let spouseTotalSalary = 0;\r\n                                for (let i in savings) {\r\n                                    graphData1.push({\r\n                                        topic: savings[i].saving_type.saving_type,\r\n                                        month: moment(savings[i].transactionDate).format(\"MMMM\"),\r\n                                        primarySavings: Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView])),\r\n                                        spouseSavings: Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                        primaryExtraRetirementSavingses:0,\r\n                                        spouseExtraRetirementSavingses:0,\r\n                                        salary_benefit:Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView]))+Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                    });\r\n\r\n                                    array1.push({\r\n                                        key: savings[i].id,\r\n                                        topic: savings[i].saving_type.saving_type,\r\n                                        type: \"savings\",\r\n                                        saving_type_id: savings[i].saving_type.id,\r\n                                        user_id: savings[i].user_id,\r\n                                        primaryduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[savings[i].duration]}\r\n                                                onChange={e =>\r\n                                                    this.handlePrimaryDurationChange(e, savings[i],\"savings\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        primaryamount: savings[i].saving_amount,\r\n                                        primaryDurationAmount:Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView])),\r\n\r\n                                        spouseduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[savings[i].spouse_duration]}\r\n                                                onChange={e =>\r\n                                                    this.handleSpouseDurationChange(e, savings[i],\"savings\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        spouseamount: savings[i].spouse_amount,\r\n                                        spouseDurationAmount:Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView]))\r\n                                    });\r\n                                    primaryTotalSalary =\r\n                                        primaryTotalSalary + Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView]));\r\n                                    spouseTotalSalary =\r\n                                        spouseTotalSalary + Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView]));\r\n                                }\r\n                                for (let i in extraRetirementSavingses) {\r\n                                    graphData1.push({\r\n                                        topic: extraRetirementSavingses[i].extra_retirement_saving_type.extra_retirement_saving_type,\r\n                                        month: moment(extraRetirementSavingses[i].transactionDate).format(\"MMMM\"),\r\n                                        primaryExtraRetirementSavingses: Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView])),\r\n                                        spouseExtraRetirementSavingses: Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                        primarySavings:0,\r\n                                        spouseSavings:0,\r\n                                        salary_benefit:Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView]))+Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                    });\r\n\r\n                                    array1.push({\r\n                                        key: extraRetirementSavingses[i].id,\r\n                                        topic: extraRetirementSavingses[i].extra_retirement_saving_type.extra_retirement_saving_type,\r\n                                        type: \"extraRetirementSavingses\",\r\n                                        extra_retirement_saving_type_id: extraRetirementSavingses[i].extra_retirement_saving_type.id,\r\n                                        user_id: extraRetirementSavingses[i].user_id,\r\n                                        primaryduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[extraRetirementSavingses[i].duration]}\r\n                                                onChange={e =>\r\n                                                    this.handlePrimaryDurationChange(e, extraRetirementSavingses[i],\"extraRetirementSavingses\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        primaryamount: extraRetirementSavingses[i].extra_retirement_saving_amount,\r\n                                        primaryDurationAmount:Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView])),\r\n\r\n                                        spouseduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[extraRetirementSavingses[i].spouse_duration]}\r\n                                                onChange={e =>\r\n                                                    this.handleSpouseDurationChange(e, extraRetirementSavingses[i],\"extraRetirementSavingses\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        spouseamount: extraRetirementSavingses[i].spouse_amount,\r\n                                        spouseDurationAmount:Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView]))\r\n                                    });\r\n                                    primaryTotalSalary =\r\n                                        primaryTotalSalary + Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView]));\r\n                                    spouseTotalSalary =\r\n                                        spouseTotalSalary + Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView]));\r\n                                }\r\n                                const month = [];\r\n                                let chartData12=[];\r\n                                const result1 = _(graphData1)\r\n                                    .groupBy('month')\r\n                                    .map(function(items, month) {\r\n                                        return {\r\n                                            month: month,\r\n                                            name:_.map(items, 'topic'),\r\n                                            data: _.map(items, 'salary_benefit')\r\n                                        };\r\n                                    }).value();\r\n                                for(let i in result1){\r\n                                    month.push(result1[i].month);\r\n                                    for(let j in result1[i].name){\r\n                                        let temp12=[...Array(result1.length)].map(x=>0);\r\n                                        temp12.splice(i,1,result1[i].data[j]);\r\n                                        chartData12.push({\r\n                                            name:result1[i].name[j],\r\n                                            data:temp12\r\n                                        })\r\n                                    }\r\n                                }\r\n                                const labels=[];\r\n                                const series=[];\r\n                                _(chartData12).groupBy('name').map(function(item,name){\r\n                                    labels.push(name);\r\n                                    series.push(item[0].data.reduce((a, b) => a + b, 0));\r\n                                }).value();\r\n                                let primarySavings = 0;\r\n                                let spouseSavings = 0;\r\n                                let primaryExtraRetirementSavingses = 0;\r\n                                let spouseExtraRetirementSavingses = 0;\r\n\r\n                                graphData1.filter(value => {\r\n                                    primarySavings = primarySavings + value.primarySavings;\r\n                                    spouseSavings = spouseSavings + value.spouseSavings;\r\n                                    primaryExtraRetirementSavingses = primaryExtraRetirementSavingses + value.primaryExtraRetirementSavingses;\r\n                                    spouseExtraRetirementSavingses = spouseExtraRetirementSavingses + value.spouseExtraRetirementSavingses;\r\n\r\n                                });\r\n\r\n                                let paiChartData = [\r\n                                    primarySavings,\r\n                                    spouseSavings,\r\n                                    primaryExtraRetirementSavingses,\r\n                                    spouseExtraRetirementSavingses\r\n                                ];\r\n                                console.log(paiChartData);\r\n                                const  paiChartLabels= ['Primary Savings','Spouse Savings','Primary Extra Saving','Spouse Extra Saving',];\r\n                                return (\r\n                                    <SavingsEditableTable\r\n                                        startDate={this.state.startDate}\r\n                                        endDate={this.state.endDate}\r\n                                        salaryData={array1}\r\n                                        primaryTotalSalary={primaryTotalSalary}\r\n                                        spouseTotalSalary={spouseTotalSalary}\r\n                                        onRef={ref => (this.child = ref)}\r\n                                        chartData={chartData12}\r\n                                        month={month}\r\n                                        paiChartData={paiChartData}\r\n                                        durationView={durationView}\r\n                                        spendingTypeChartLavel={labels}\r\n                                        spendingTypeChartSeries={series}\r\n                                        paiChartLabels={paiChartLabels}\r\n                                        user={this.props.user}\r\n                                    />\r\n                                );\r\n                            }\r\n                        }}\r\n                    </Query>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_SAVING, { name: \"createSavingsMutation\" })\r\n)(withApollo(Saving));\r\n","import React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nclass IncomeChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData:[],\r\n            options: {\r\n                chart: {\r\n                    stacked: true,\r\n                    stackType: '100%'\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom',\r\n                            offsetX: -10,\r\n                            offsetY: 0\r\n                        }\r\n                    }\r\n                }],\r\n                xaxis: {\r\n                    categories: this.props.month,\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                legend: {\r\n                    position: 'right',\r\n                    offsetX: 0,\r\n                    offsetY: 50\r\n\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        background: \"#00a0e9\"\r\n\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ chartData: this.props.chartData });\r\n     }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n                <Chart options={this.state.options} series={this.props.chartData} type=\"bar\" height=\"270\"  width=\"550\" />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default IncomeChart;","import gql from \"graphql-tag\";\r\nexport const CREATE_SALARY = gql`\r\n    mutation createSalary($user_id: String!, $salary_type_name: String!,$transactionDate:DateTime!) {\r\n        createSalary(\r\n            data: {\r\n                user_id: $user_id\r\n                salary_category_id: {\r\n                    create: { salary_type_name: $salary_type_name, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                salary_amount: 0\r\n                spouse_salary: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_SALARY = gql`\r\n    mutation updateSalary(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $salary_amount: Float\r\n        $salary_category_id: ID!\r\n        $spouse_salary: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateSalary(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                salary_amount: $salary_amount\r\n                salary_category_id: $salary_category_id\r\n                spouse_salary: $spouse_salary\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_SALARY = gql`\r\n    mutation deleteSalary($id: ID!) {\r\n        deleteSalary(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n","import gql from \"graphql-tag\";\r\nexport const CREATE_BENEFITS = gql`\r\n    mutation createBenefits($user_id: String!, $benfeit_type: String!,$transactionDate:DateTime!) {\r\n        createBenefits(\r\n            data: {\r\n                user_id: $user_id\r\n                benefit_type: {\r\n                    create: { benefit_type: $benfeit_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                salary_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_BENEFITS = gql`\r\n    mutation updateBenefits(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $salary_amount: Float\r\n        $benefit_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateBenefits(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                salary_amount: $salary_amount\r\n                benefit_type: $benefit_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_BENEFIT = gql`\r\n    mutation deleteBenefit($id: ID!) {\r\n        deleteBenefits(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","\r\nimport React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass IncomePaiChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            paiChartData:[],\r\n            options: {\r\n                labels: this.props.incomePaiChartLavels,\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'top'\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ chartData: this.props.chartData });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n                <Chart options={this.state.options} series={this.props.paiChartData} type=\"pie\"  height=\"270\"  width=\"550\" />\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default IncomePaiChart;","import gql from \"graphql-tag\";\r\nexport const USER_BENEFITS = gql`\r\n    query getAllBenefits {\r\n        benefitses {\r\n            id\r\n            user_id\r\n            duration\r\n            salary_amount\r\n            benefit_type {\r\n                id\r\n                benefit_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const USER_MONTEHLY_BENEFITS=gql`\r\n    query getAllBenefits($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        benefitses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            salary_amount\r\n            benefit_type {\r\n                id\r\n                benefit_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Popconfirm,\r\n  Form,\r\n  Statistic,\r\n  Select,\r\n  Row,\r\n  Col, Divider\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport { USER_MONTEHLY_SAVING } from \"../../../graphql/queries/savings/SavingsQuery\";\r\nimport EditableFormRow from \"../../common/EditableFormRow\";\r\nimport EditableCell from \"../../common/EditableTableRow\";\r\nimport IncomeChart from \"./IncomeChart\";\r\nimport {\r\n  DELETE_SALARY,\r\n  UPDATE_SALARY\r\n} from \"../../../graphql/mutation/salary/SalaryMutation\";\r\nimport {\r\n  DELETE_BENEFIT,\r\n  UPDATE_BENEFITS\r\n} from \"../../../graphql/mutation/salary/BenefitsMutation\";\r\nimport {USER_MONTEHLY_INCOME} from \"../../../graphql/queries/income/IncomeQuery\";\r\nimport IncomePaiChart from \"./IncomePaiChart\";\r\nimport {durationType, mapView} from \"../../common/Duration\";\r\nimport {USER_MONTEHLY_BENEFITS} from \"../../../graphql/queries/salary/BenefitsQuery\";\r\nconst { Option } = Select;\r\n\r\nclass IncomeEditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n      salaryData: [],\r\n      durationView:0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    this.setState({ salaryData: this.props.salaryData });\r\n    this.setState({durationView:this.props.durationView})\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n      this.setState({ salaryData: newProps.salaryData });\r\n  }\r\n\r\n  handleResize = index => (e, { size }) => {\r\n    this.setState(({ columns }) => {\r\n      const nextColumns = [...columns];\r\n      nextColumns[index] = {\r\n        ...nextColumns[index],\r\n        width: size.width\r\n      };\r\n      return { columns: nextColumns };\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  handleDelete = key => {\r\n    this.props.deleteSavingMutation({\r\n      variables: {\r\n        id: key\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: USER_MONTEHLY_SAVING,\r\n          variables: {\r\n            user_id: this.props.user.email,\r\n            tranaction_start_date: this.props.startDate,\r\n            transaction_end_date: this.props.endDate\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    //const salaryData = [...this.state.salaryData];\r\n    //this.setState({ salaryData: salaryData.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.salaryData];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n\r\n    let primaryDuration = durationType.findIndex(\r\n      item => row.primaryduration.props.defaultValue === item\r\n    );\r\n    let spouseDuration = durationType.findIndex(\r\n      item => row.spouseduration.props.defaultValue === item\r\n    );\r\n\r\n    if (row.type === \"Salary\") {\r\n      this.props.updateSalaryMutation({\r\n        variables: {\r\n          user_id: row.user_id,\r\n          duration: primaryDuration,\r\n          salary_amount: parseFloat(row.primaryamount),\r\n          salary_category_id: row.salary_category_id,\r\n          id: row.key,\r\n          spouse_salary: parseFloat(row.spouseamount),\r\n          spouse_duration: spouseDuration\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: USER_MONTEHLY_INCOME,\r\n            variables: {\r\n              user_id: this.props.user.email,\r\n              tranaction_start_date: this.props.endDate,\r\n              transaction_end_date: this.props.startDate\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    } else {\r\n      this.props.updateBenefitsMutation({\r\n        variables: {\r\n          user_id: row.user_id,\r\n          duration: primaryDuration,\r\n          salary_amount: parseFloat(row.primaryamount),\r\n          benefit_type: row.benefit_type_id,\r\n          id: row.key,\r\n          spouse_amount: parseFloat(row.spouseamount),\r\n          spouse_duration: spouseDuration\r\n        },\r\n        refetchQueries: [\r\n          {\r\n              query: USER_MONTEHLY_INCOME,\r\n              variables: {\r\n                user_id: this.props.user.email,\r\n                  tranaction_start_date: this.props.endDate,\r\n                  transaction_end_date: this.props.startDate\r\n              }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n    this.setState({ salaryData: newData });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (value, slId,type) => {\r\n    let primaryDuration = durationType.findIndex(item => value === item);\r\n    if (type === \"Salary\"){\r\n      this.props.updateSalaryMutation({\r\n        variables: {\r\n          user_id: slId.user_id,\r\n          duration: primaryDuration,\r\n          salary_category_id: slId.salary_category_id.id,\r\n          id: slId.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: USER_MONTEHLY_INCOME,\r\n            variables: {\r\n              user_id: this.props.user.email,\r\n              tranaction_start_date: this.props.endDate,\r\n              transaction_end_date: this.props.startDate\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n    else{\r\n      this.props.updateBenefitsMutation({\r\n        variables: {\r\n          user_id: slId.user_id,\r\n          duration: primaryDuration,\r\n          benefit_type: slId.benefit_type.id,\r\n          id: slId.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: USER_MONTEHLY_INCOME,\r\n            variables: {\r\n              user_id: this.props.user.email,\r\n              tranaction_start_date: this.props.endDate,\r\n              transaction_end_date: this.props.startDate\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  handleSpouseDurationChange = (value, slId,type) => {\r\n    let spouseDuration = durationType.findIndex(item => value === item);\r\n    if (type === \"Salary\"){\r\n      this.props.updateSalaryMutation({\r\n        variables: {\r\n          user_id: slId.user_id,\r\n          duration: spouseDuration,\r\n          salary_category_id: slId.salary_category_id.id,\r\n          id: slId.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: USER_MONTEHLY_INCOME,\r\n            variables: {\r\n              user_id: this.props.user.email,\r\n              tranaction_start_date: this.props.endDate,\r\n              transaction_end_date: this.props.startDate\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n    else{\r\n      this.props.updateBenefitsMutation({\r\n        variables: {\r\n          user_id: slId.user_id,\r\n          duration: spouseDuration,\r\n          benefit_type: slId.benefit_type.id,\r\n          id: slId.id\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: USER_MONTEHLY_INCOME,\r\n            variables: {\r\n              user_id: this.props.user.email,\r\n              tranaction_start_date: this.props.endDate,\r\n              transaction_end_date: this.props.startDate\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo,durationView } = this.state;\r\n    const { salaryData } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n      {\r\n        title: <div style={{}}>{\"Title\"}</div>,\r\n        dataIndex: \"topic\",\r\n        key: \"topic\",\r\n        editable: false,\r\n        render: text => <a>{text}</a>,\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n        width: 300\r\n      },\r\n      {\r\n        title: \"primary duration\",\r\n        dataIndex: \"primaryduration\",\r\n        key: \"primaryduration\",\r\n        editable: false,\r\n        sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n        sortOrder:\r\n          sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n      },\r\n\r\n      {\r\n        title: \"primary amount\",\r\n        dataIndex: \"primaryamount\",\r\n        key: \"primaryamount\",\r\n        editable: true,\r\n        filteredValue: filteredInfo.address || null,\r\n        onFilter: (value, record) => record.primaryamount.includes(value),\r\n        sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n        sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n        width: 200\r\n      },\r\n      {\r\n        title: durationType[this.props.durationView],\r\n        dataIndex: \"primaryDurationAmount\",\r\n        key: \"primaryDurationAmount\",\r\n        editable: false,\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"spouse duration\",\r\n        dataIndex: \"spouseduration\",\r\n        key: \"spouseduration\",\r\n        editable: false,\r\n        sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n        sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n      },\r\n\r\n      {\r\n        title: \"spouse amount\",\r\n        dataIndex: \"spouseamount\",\r\n        key: \"spouseamount\",\r\n        editable: true,\r\n        filteredValue: filteredInfo.address || null,\r\n        onFilter: (value, record) => record.spouseamount.includes(value),\r\n        sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n        sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n        width: 200\r\n      },\r\n      {\r\n        title: durationType[this.props.durationView],\r\n        dataIndex: \"spouseDurationAmount\",\r\n        key: \"spouseDurationAmount\",\r\n        editable: false,\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) =>\r\n          this.state.salaryData.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a>Delete</a>\r\n            </Popconfirm>\r\n          ) : null,\r\n        width: 150\r\n      }\r\n    ];\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      },\r\n      header: {}\r\n    };\r\n    const columns1 = columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave\r\n        })\r\n      };\r\n    });\r\n\r\n    const columns2 = columns1.map((col, index) => ({\r\n      ...col,\r\n      onHeaderCell: column => ({\r\n        width: column.width,\r\n        onResize: this.handleResize(index)\r\n      })\r\n    }));\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"App\">\r\n          <Table\r\n            className=\"ant-income-table-content\"\r\n            components={components}\r\n            rowClassName={() => \"editable-row\"}\r\n            dataSource={salaryData}\r\n            columns={columns2}\r\n            onChange={this.handleChange}\r\n            pagination={{pageSize: 5}  }\r\n            scroll={{ y: 230 }}\r\n            size={\"small\"}\r\n            bordered\r\n            useFixedHeader={true}\r\n          />\r\n        </div>\r\n        <Row>\r\n          <Col span={3} />\r\n          <Col span={4}>\r\n            <div className=\"incomeFont\">Total  {durationType[this.props.durationView]}</div>\r\n          </Col>\r\n          <Col span={4} />\r\n          <Col span={6}>\r\n            <Statistic className=\"incomeFont\"\r\n              title=\"Primary Income\"\r\n              value={this.props.primaryTotalSalary}\r\n            />\r\n          </Col>\r\n          <Col span={2} />\r\n          <Col span={3}>\r\n            <Statistic className=\"incomeFont\"\r\n              title=\"Spouse  Income\"\r\n              value={this.props.spouseTotalSalary}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Divider style={{height:1}}/>\r\n        <div className=\"flex-row\">\r\n          <div className=\"flex-col\"><IncomeChart\r\n              onRef={ref => (this.child = ref)}\r\n              chartData={this.props.chartData}\r\n              month={this.props.month}\r\n          /></div>\r\n          <div className=\"flex-col\"> <IncomePaiChart\r\n              onRef={ref => (this.child = ref)}\r\n              paiChartData={this.props.paiChartData}\r\n              incomePaiChartLavels={this.props.incomePaiChartLavels}/></div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_SALARY, { name: \"updateSalaryMutation\" }),\r\n    graphql(UPDATE_BENEFITS,{name:\"updateBenefitsMutation\"}),\r\n    graphql(DELETE_SALARY, { name: \"deleteSalaryMutation\" }),\r\n    graphql(DELETE_BENEFIT,{name:\"deleteBenefitMutation\"})\r\n\r\n)(withApollo(IncomeEditableTable));\r\n","import React from \"react\";\r\nimport { Radio, Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../styles/index.css\";\r\nimport { compose, graphql, Mutation, Query, withApollo } from \"react-apollo\";\r\nimport IncomeEditableTable from \"./IncomeEditableTable\";\r\nimport { USER_MONTEHLY_INCOME } from \"../../../graphql/queries/income/IncomeQuery\";\r\nimport { CREATE_SAVING } from \"../../../graphql/mutation/savings/SavingsMutation\";\r\nimport { yearEndDate, yearStartDate, durationType,mapView} from \"../../common/Duration\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nconst { Option } = Select;\r\n\r\nclass Income extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      durationView:0,\r\n      startDate: yearStartDate,\r\n      endDate: yearEndDate,\r\n      disabled: [],\r\n      chartColors: {\r\n        primaryBenefit: \"#e96d8d\",\r\n        spouseBenefit: \"#40ee86\",\r\n        primarySalary: \"#67d6c0\",\r\n        spouseSalary: \"#127197\"\r\n      }\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n    this.setState({ formRef: formRef });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (select, slId,type) => {\r\n    this.child.handlePrimaryDurationChange(select, slId,type);\r\n  };\r\n\r\n  handleSpouseDurationChange = (select, slId,type) => {\r\n    this.child.handleSpouseDurationChange(select, slId,type);\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const durationView=this.state.durationView;\r\n    return (\r\n        <div className=\"ant-layout\">\r\n\r\n\r\n\r\n\r\n          <Radio.Group defaultValue=\"0\" buttonStyle=\"solid\" onChange={e=>{\r\n            this.setState({durationView:e.target.value})\r\n          }}>\r\n            <Radio.Button value=\"0\">Annually</Radio.Button>\r\n            <Radio.Button value=\"1\">Quarterly</Radio.Button>\r\n            <Radio.Button value=\"2\">Monthly</Radio.Button>\r\n            <Radio.Button value=\"3\">Weekly</Radio.Button>\r\n            <Radio.Button value=\"4\">Fortnightly</Radio.Button>\r\n          </Radio.Group>\r\n\r\n\r\n\r\n\r\n          {\r\n            <Query\r\n                query={USER_MONTEHLY_INCOME}\r\n                variables={{\r\n                  user_id: this.props.user.email,\r\n                  tranaction_start_date: this.state.endDate,\r\n                  transaction_end_date: this.state.startDate\r\n                }}\r\n                fetchPolicy={\"network-only\"}\r\n            >\r\n              {({ loading, error, data }) => {\r\n                if (loading)\r\n                  return (\r\n                      <div style={{ align: \"center\" }}>\r\n                        <Icon type=\"loading\" />\r\n                      </div>\r\n                  );\r\n                if (error) return <div>Error</div>;\r\n                const array1 = [];\r\n                let graphData1 = [];\r\n\r\n                if (data != null) {\r\n                  const salaries = data.salaries;\r\n                  const benefitses = data.benefitses;\r\n\r\n                  let primaryTotalSalary = 0;\r\n                  let spouseTotalSalary = 0;\r\n                  let series = [];\r\n                  for (let i in salaries) {\r\n                    graphData1.push({\r\n                      topic: salaries[i].salary_category_id.salary_type_name,\r\n                      month: moment(benefitses[i].transactionDate).format(\"MMMM\"),\r\n                      primarySalary: Math.round((((salaries[i].salary_amount)*mapView[salaries[i].duration][salaries[i].duration])/mapView[durationView][durationView])),\r\n                      spouseSalary: Math.round((((salaries[i].spouse_salary)*mapView[salaries[i].spouse_duration][salaries[i].spouse_duration])/mapView[durationView][durationView])),\r\n                      salary_benefit:Math.round((((salaries[i].salary_amount)*mapView[salaries[i].duration][salaries[i].duration])/mapView[durationView][durationView]))+Math.round((((salaries[i].spouse_salary)*mapView[salaries[i].spouse_duration][salaries[i].spouse_duration])/mapView[durationView][durationView])),\r\n                      primaryBenefit: 0,\r\n                      spouseBenefit: 0\r\n                    });\r\n\r\n                    array1.push({\r\n                      key: salaries[i].id,\r\n                      topic: salaries[i].salary_category_id.salary_type_name,\r\n                      type: \"Salary\",\r\n                      salary_category_id: salaries[i].salary_category_id.id,\r\n                      user_id: salaries[i].user_id,\r\n                      primaryduration: (\r\n                          <Select\r\n                              defaultValue={durationType[salaries[i].duration]}\r\n                              onChange={e =>\r\n                                  this.handlePrimaryDurationChange(e, salaries[i],\"Salary\")\r\n                              }\r\n                              showSearch\r\n                              style={{ width: 100 }}\r\n                              placeholder=\"Select a type\"\r\n                              optionFilterProp=\"children\"\r\n                              filterOption={(input, option) =>\r\n                                  option.props.children\r\n                                      .toLowerCase()\r\n                                      .indexOf(input.toLowerCase()) >= 0\r\n                              }\r\n                          >\r\n                            {durationType.map(duration => (\r\n                                <Option key={duration} value={duration}>\r\n                                  {duration}\r\n                                </Option>\r\n                            ))}\r\n                          </Select>\r\n                      ),\r\n                      primaryamount: salaries[i].salary_amount,\r\n                      primaryDurationAmount:Math.round((((salaries[i].salary_amount)*mapView[salaries[i].duration][salaries[i].duration])/mapView[durationView][durationView])),\r\n\r\n                      spouseduration: (\r\n                          <Select\r\n                              defaultValue={durationType[salaries[i].spouse_duration]}\r\n                              onChange={e =>\r\n                                  this.handleSpouseDurationChange(e, salaries[i],\"Salary\")\r\n                              }\r\n                              showSearch\r\n                              style={{ width: 100 }}\r\n                              placeholder=\"Select a type\"\r\n                              optionFilterProp=\"children\"\r\n                              filterOption={(input, option) =>\r\n                                  option.props.children\r\n                                      .toLowerCase()\r\n                                      .indexOf(input.toLowerCase()) >= 0\r\n                              }\r\n                          >\r\n                            {durationType.map(duration => (\r\n                                <Option key={duration} value={duration}>\r\n                                  {duration}\r\n                                </Option>\r\n                            ))}\r\n                          </Select>\r\n                      ),\r\n                      spouseamount: salaries[i].spouse_salary,\r\n                      spouseDurationAmount:Math.round((((salaries[i].spouse_salary)*mapView[salaries[i].spouse_duration][salaries[i].spouse_duration])/mapView[durationView][durationView]))\r\n                    });\r\n                    primaryTotalSalary =\r\n                        primaryTotalSalary + Math.round((((salaries[i].salary_amount)*mapView[salaries[i].duration][salaries[i].duration])/mapView[durationView][durationView]));\r\n                    spouseTotalSalary =\r\n                        spouseTotalSalary + Math.round((((salaries[i].spouse_salary)*mapView[salaries[i].spouse_duration][salaries[i].spouse_duration])/mapView[durationView][durationView]));\r\n                  }\r\n\r\n                  for (let i in benefitses) {\r\n                    graphData1.push({\r\n                      topic: benefitses[i].benefit_type.benefit_type,\r\n                      month: moment(benefitses[i].transactionDate).format(\"MMMM\"),\r\n                      primarySalary: 0,\r\n                      spouseSalary: 0,\r\n                      primaryBenefit:Math.round((((benefitses[i].salary_amount)*mapView[benefitses[i].duration][benefitses[i].duration])/mapView[durationView][durationView])),\r\n                      spouseBenefit:Math.round(( ((benefitses[i].spouse_amount)*mapView[benefitses[i].spouse_duration][benefitses[i].spouse_duration])/mapView[durationView][durationView])),\r\n                      salary_benefit:Math.round((((benefitses[i].salary_amount)*mapView[benefitses[i].duration][benefitses[i].duration])/mapView[durationView][durationView]))+Math.round(( ((benefitses[i].spouse_amount)*mapView[benefitses[i].spouse_duration][benefitses[i].spouse_duration])/mapView[durationView][durationView]))\r\n                    });\r\n\r\n                    array1.push({\r\n                      key: benefitses[i].id,\r\n                      topic: benefitses[i].benefit_type.benefit_type,\r\n                      benefit_type_id: benefitses[i].benefit_type.id,\r\n                      user_id: benefitses[i].user_id,\r\n                      type: \"Benefit\",\r\n                      primaryduration: (\r\n                          <Select\r\n                              defaultValue={durationType[benefitses[i].duration]}\r\n                              onChange={e =>\r\n                                  this.handlePrimaryDurationChange(e, benefitses[i],\"Benefit\")\r\n                              }\r\n                              showSearch\r\n                              style={{ width: 100 }}\r\n                              placeholder=\"Select a type\"\r\n                              optionFilterProp=\"children\"\r\n                              filterOption={(input, option) =>\r\n                                  option.props.children\r\n                                      .toLowerCase()\r\n                                      .indexOf(input.toLowerCase()) >= 0\r\n                              }\r\n                          >\r\n                            {durationType.map(duration => (\r\n                                <Option key={duration} value={duration}>\r\n                                  {duration}\r\n                                </Option>\r\n                            ))}\r\n                          </Select>\r\n                      ),\r\n                      primaryamount: benefitses[i].salary_amount,\r\n                      primaryDurationAmount:Math.round((((benefitses[i].salary_amount)*mapView[benefitses[i].duration][benefitses[i].duration])/mapView[durationView][durationView])),\r\n                      spouseduration: (\r\n                          <Select\r\n                              defaultValue={\r\n                                durationType[benefitses[i].spouse_duration]\r\n                              }\r\n                              onChange={e =>\r\n                                  this.handleSpouseDurationChange(e, benefitses[i],\"Benefit\")\r\n                              }\r\n                              showSearch\r\n                              style={{ width: 100 }}\r\n                              placeholder=\"Select a type\"\r\n                              optionFilterProp=\"children\"\r\n                              filterOption={(input, option) =>\r\n                                  option.props.children\r\n                                      .toLowerCase()\r\n                                      .indexOf(input.toLowerCase()) >= 0\r\n                              }\r\n                          >\r\n                            {durationType.map(duration => (\r\n                                <Option key={duration} value={duration}>\r\n                                  {duration}\r\n                                </Option>\r\n                            ))}\r\n                          </Select>\r\n                      ),\r\n                      spouseamount: benefitses[i].spouse_amount,\r\n                      spouseDurationAmount:Math.round(( ((benefitses[i].spouse_amount)*mapView[benefitses[i].spouse_duration][benefitses[i].spouse_duration])/mapView[durationView][durationView]))\r\n                    });\r\n                    primaryTotalSalary =\r\n                        primaryTotalSalary + Math.round((((benefitses[i].salary_amount)*mapView[benefitses[i].duration][benefitses[i].duration])/mapView[durationView][durationView]));\r\n                    spouseTotalSalary =\r\n                        spouseTotalSalary + Math.round(( ((benefitses[i].spouse_amount)*mapView[benefitses[i].spouse_duration][benefitses[i].spouse_duration])/mapView[durationView][durationView]));\r\n                  }\r\n                  const month = [];\r\n\r\n\r\n\r\n\r\n                  let chartData12=[];\r\n                  const result1 = _(graphData1)\r\n                      .groupBy('month')\r\n                      .map(function(items, month) {\r\n                        return {\r\n                          month: month,\r\n                          name:_.map(items, 'topic'),\r\n                          data: _.map(items, 'salary_benefit')\r\n                        };\r\n                      }).value();\r\n\r\n                  for(let i in result1){\r\n                    month.push(result1[i].month);\r\n                    for(let j in result1[i].name){\r\n                      let temp12=[...Array(result1.length)].map(x=>0);\r\n                      temp12.splice(i,1,result1[i].data[j]);\r\n                      chartData12.push({\r\n                        name:result1[i].name[j],\r\n                        data:temp12\r\n                      })\r\n                    }\r\n                  }\r\n\r\n                  let primarySalaryPai = 0;\r\n                  let spouseSalaryPai = 0;\r\n                  let primaryBenfitsPai = 0;\r\n                  let spouseBenfitsPai = 0;\r\n\r\n                  graphData1.filter(value => {\r\n                    primarySalaryPai = primarySalaryPai + value.primarySalary;\r\n                    spouseSalaryPai = spouseSalaryPai + value.spouseSalary;\r\n                    primaryBenfitsPai = primaryBenfitsPai + value.primaryBenefit;\r\n                    spouseBenfitsPai = spouseBenfitsPai + value.spouseBenefit;\r\n                  });\r\n\r\n                  let paiChartData = [\r\n                    primarySalaryPai,\r\n                    spouseSalaryPai,\r\n                    primaryBenfitsPai,\r\n                    spouseBenfitsPai\r\n                  ];\r\n                 let incomePaiChartLavels= ['Primary Salary', 'Spouse Salary', 'Primary Benefits', 'Spouse Benefits'];\r\n\r\n                  return (\r\n                      <IncomeEditableTable\r\n                          startDate={this.state.startDate}\r\n                          endDate={this.state.endDate}\r\n                          salaryData={array1}\r\n                          primaryTotalSalary={primaryTotalSalary}\r\n                          spouseTotalSalary={spouseTotalSalary}\r\n                          onRef={ref => (this.child = ref)}\r\n                          chartData={chartData12}\r\n                          month={month}\r\n                          paiChartData={paiChartData}\r\n                          durationView={durationView}\r\n                          incomePaiChartLavels={incomePaiChartLavels}\r\n                          user={this.props.user}\r\n                      />\r\n                  );\r\n                }\r\n              }}\r\n            </Query>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_SAVING, { name: \"createSavingsMutation\" })\r\n)(withApollo(Income));","\r\nimport React from \"react\";\r\nimport {Table, Input, Button, Popconfirm, Form, Tag} from \"antd\";\r\nimport  './css/Editabletable.css'\r\n\r\nconst EditableContext = React.createContext(undefined, undefined);\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false,\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title} is required.`,\r\n                        },\r\n                    ],\r\n                    initialValue: record[dataIndex],\r\n                })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{ paddingRight: 24 }}\r\n                onClick={this.toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            dataSource: [\r\n                {\r\n                    key: '1',\r\n                    name: 'John Brown',\r\n                    age: 32,\r\n                    address: 'New York No. 1 Lake Park',\r\n                    tags: ['nice', 'developer'],\r\n                    description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\r\n                },\r\n                {\r\n                    key: '2',\r\n                    name: 'Jim Green',\r\n                    age: 42,\r\n                    address: 'London No. 1 Lake Park',\r\n                    tags: ['loser'],\r\n                    description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\r\n                },\r\n                {\r\n                    key: '3',\r\n                    name: 'Joe Black',\r\n                    age: 32,\r\n                    address: 'Sidney No. 1 Lake Park',\r\n                    tags: ['cool', 'teacher'],\r\n                    description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n                },\r\n            ],\r\n            count: 2,\r\n\r\n        };\r\n\r\n\r\n    }\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width,\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n    };\r\n\r\n    handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n                key: count,\r\n                name: 'Joe Black',\r\n                age: 32,\r\n                address: 'Sidney No. 1 Lake Park',\r\n                tags: ['cool', 'teacher'],\r\n                description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        };\r\n        this.setState({\r\n            dataSource: [...dataSource, newData],\r\n            count: count + 1,\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n        });\r\n        this.setState({ dataSource: newData });\r\n    };\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                editable: true,\r\n                render: text => <a>{text}</a>,\r\n                filters: [{ text: 'Joe', value: 'Joe' }, { text: 'Jim', value: 'Jim' }],\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n                editable: true,\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                editable: true,\r\n                filters: [{ text: 'London', value: 'London' }, { text: 'New York', value: 'New York' }],\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.address.includes(value),\r\n                sorter: (a, b) => a.address.length - b.address.length,\r\n                sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Tags',\r\n                key: 'tags',\r\n                dataIndex: 'tags',\r\n                render: tags => (\r\n                    <span>\r\n        {tags.map(tag => {\r\n            let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            if (tag === 'loser') {\r\n                color = 'volcano';\r\n            }\r\n            return (\r\n                <Tag color={color} key={tag}>\r\n                    {tag.toUpperCase()}\r\n                </Tag>\r\n            );\r\n        })}\r\n      </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'operation',\r\n                dataIndex: 'operation',\r\n                render: (text, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell,\r\n\r\n            },\r\n                header: {\r\n\r\n                },\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index),\r\n            }),\r\n        }));\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n                    Add a row\r\n                </Button>\r\n                <Table\r\n                    className=\"table-layout\"\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns2}\r\n                    expandedRowRender={record => <p style={{ margin: 0 }}>{record.description}</p>}\r\n                    onChange={this.handleChange}\r\n\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditableTable;","import React from \"react\";\r\nimport {Tabs, Row, Col, Icon} from \"antd\";\r\nimport './css/Editabletable.css';\r\nimport Chart from \"react-apexcharts\";\r\nimport { StickyContainer } from 'react-sticky';\r\nimport EditableTable from \"./EditableCell\";\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst temp={\r\n    options: {},\r\n    series: [44, 55, 41, 17, 15],\r\n    labels: ['A', 'B', 'C', 'D', 'E']\r\n};\r\n\r\n\r\nconst Tracket = props => {\r\n\r\n    return (\r\n        <div className=\"gutter-example\">\r\n            <Row gutter={16}>\r\n                <Col className=\"gutter-row\" span={15}>\r\n                    <div >\r\n                        <EditableTable/>\r\n                    </div>\r\n                </Col>\r\n                <Col  span={6}>\r\n                    <Tabs defaultActiveKey=\"2\" tabPosition={\"bottom\"}>\r\n                        <TabPane\r\n                            tab={\r\n                                <span>\r\n          <Icon type=\"apple\" />\r\n         Month\r\n        </span>\r\n                            }\r\n                            key=\"1\"\r\n                        >\r\n                            <Chart options={temp.options} series={temp.series} type=\"donut\" width=\"380\" height={\"300\"} />\r\n                        </TabPane>\r\n                        <TabPane\r\n                            tab={\r\n                                <span>\r\n          <Icon type=\"android\" />\r\n          Year\r\n        </span>\r\n                            }\r\n                            key=\"2\"\r\n                        >\r\n                            <Chart options={temp.options} series={temp.series} type=\"donut\" width=\"380\" height={\"300\"} />\r\n                        </TabPane>\r\n                        <TabPane\r\n                            tab={\r\n                                <span>\r\n          <Icon type=\"android\" />\r\n          Quarter\r\n        </span>\r\n                            }\r\n                            key=\"3\"\r\n                        >\r\n                            <Chart options={temp.options} series={temp.series} type=\"donut\" width=\"380\" height={\"300\"} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n            <Row type=\"flex\">\r\n                <Col span={6} order={1}>\r\n                </Col>\r\n                <Col span={6} order={2}>\r\n                </Col>\r\n                <Col span={6} order={4}>\r\n                    <StickyContainer>\r\n\r\n                    </StickyContainer>\r\n                </Col>\r\n            </Row>\r\n     </div>\r\n    );\r\n};\r\n\r\nexport default Tracket;","import React from \"react\";\r\nimport {Icon, Layout} from \"antd\";\r\nconst {Footer } = Layout;\r\n\r\n\r\nconst BudgetFooter = props => {\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Footer style={{ textAlign: \"center\" }}>\r\n                © 2019 Created by\r\n                <span>\r\n                   <Icon type=\"dollar\" />\r\n                    {\"   \"}mart Money\r\n          </span>\r\n            </Footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BudgetFooter;\r\n\r\n","import gql from \"graphql-tag\";\r\nexport const USER_FIXED_EXPENSES_QUERY = gql`\r\n    query getAllfixedExpenseses {\r\n        fixedExpenseses {\r\n            id\r\n            user_id\r\n            duration\r\n            fixed_expense_amount\r\n            fixed_expense_type {\r\n                id\r\n                fixed_expense_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USER_MONTEHLY_FIXED_EXPENSESG=gql`\r\n    query getAllfixedExpenseses($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        fixedExpenseses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            fixed_expense_amount\r\n            fixed_expense_type {\r\n                id\r\n                fixed_expense_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../common/EditableTableRow\";\r\nimport {\r\n    DELETE_FIXED_EXPENSES,\r\n    UPDATE_FIXED_EXPENSES\r\n} from \"../../../../graphql/mutation/fixedexpenses/FixedExpensesMutation\";\r\nimport {\r\n    USER_FIXED_EXPENSES_QUERY,\r\n    USER_MONTEHLY_FIXED_EXPENSESG\r\n} from \"../../../../graphql/queries/fixedexpenses/FixedExpensesQuery\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass FixedExpancesEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteFixedExpansesMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_FIXED_EXPENSESG,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updateFixedExpansesMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                fixed_expense_amount: parseFloat(row.primaryamount),\r\n                fixed_expense_type: row.fixed_expense_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_FIXED_EXPENSESG,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateFixedExpansesMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                fixed_expense_type: slId.fixed_expense_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_FIXED_EXPENSESG,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateFixedExpansesMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                fixed_expense_type: slId.fixed_expense_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_FIXED_EXPENSESG,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_FIXED_EXPENSES, { name: \"updateFixedExpansesMutation\" }),\r\n    graphql(DELETE_FIXED_EXPENSES, { name: \"deleteFixedExpansesMutation\" })\r\n)(withApollo(FixedExpancesEditableTable));\r\n","'use strict';\r\nimport React from 'react'\r\nimport { Modal, Form, Input, Select,} from 'antd'\r\nimport gql from \"graphql-tag\";\r\nimport {Mutation} from \"react-apollo\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nclass AddAttributeForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title:'',\r\n            primaryAmount: '',\r\n            spouseAmount: '',\r\n            primary:durationType[0],\r\n            spouse:durationType[0]\r\n        };\r\n        //this.onChange = this.onChange.bind(this)\r\n    };\r\n\r\n    handlePrimaryDurationChange = value => {\r\n        this.setState({\r\n            primary:durationType[value]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = value => {\r\n        this.setState({\r\n            spouse:durationType[value]\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const {title, primaryAmount,spouseAmount,primary,spouse } = this.state;\r\n        const {visible, onCancel, onCreate, form} = this.props;\r\n        const {getFieldDecorator} = form;\r\n        return (\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Create a new collection\"\r\n                okText=\"Create\"\r\n                onCancel={onCancel}\r\n                onOk={onCreate}\r\n            >\r\n\r\n                <Form layout=\"vertical\">\r\n                    <Form.Item label=\"Title\">\r\n                        {getFieldDecorator('title', {\r\n                            rules: [{required: true, message: 'Please input the title of collection!'}],\r\n                        })(<Input value={this.state.type}\r\n                                  onChange={e => this.setState({ title: e.target.value })}/>)}\r\n                    </Form.Item>\r\n                   {/* <Form.Item label=\"PRIMARY\">\r\n                        {getFieldDecorator('primary')( <tr><td><Select   defaultValue={durationType[0]}\r\n\r\n                                                                         onChange={this.handlePrimaryDurationChange}\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            {durationType.map(duration => (\r\n                                <Option key={duration}>{duration}</Option>\r\n                            ))}\r\n                        </Select></td>\r\n                            <td><Input  value={this.state.primaryAmount}\r\n                                                  onChange={e => this.setState({ primaryAmount: e.target.value })}/></td></tr>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"SPOUSE\">\r\n                        {getFieldDecorator('spouse')( <tr><td><Select defaultValue={durationType[0]}\r\n\r\n                                                                      onChange={this.handleSpouseDurationChange}\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            {durationType.map(duration => (\r\n                                <Option key={duration}>{duration}</Option>\r\n                            ))}\r\n                        </Select></td><td><Input value={spouseAmount}\r\n                                                 onChange={e => this.setState({ spouseAmount: e.target.value })}/></td></tr>)}\r\n                    </Form.Item>*/}\r\n\r\n                 </Form>\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(AddAttributeForm);","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport {\r\n    USER_FIXED_EXPENSES_QUERY,\r\n    USER_MONTEHLY_FIXED_EXPENSESG\r\n} from \"../../../../graphql/queries/fixedexpenses/FixedExpensesQuery\";\r\nimport {CREATE_FIXED_EXPENSES} from \"../../../../graphql/mutation/fixedexpenses/FixedExpensesMutation\";\r\nimport FixedExpancesEditableTable from \"./FixedExpancesEditableTable\";\r\nimport AddAttributeForm from \"../../../paystub/manual/manualfntryforms/AddAttributeForm\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass FixedExpance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            intialData: [],\r\n            salary_type: \"\"\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId) => {\r\n        this.child.handlePrimaryDurationChange(select, slId);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId) => {\r\n        this.child.handleSpouseDurationChange(select, slId);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ant-layout\">\r\n                <Row>\r\n                    <Col span={5}>\r\n                        <div>\r\n                            {\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    Add New Fixed Expenses Type\r\n                                </Button>\r\n                            }\r\n                            <div>\r\n                                <AddAttributeForm\r\n                                    wrappedComponentRef={this.saveFormRef}\r\n                                    visible={this.state.visible}\r\n                                    onCancel={this.handleCancel}\r\n                                    onCreate={e => {\r\n                                        e.preventDefault();\r\n                                        const { form } = this.formRef.props;\r\n                                        form.validateFields((err, values) => {\r\n                                            this.props.createFixedExpenseMutation({\r\n                                                variables: {\r\n                                                    fixed_expense_type: values.title,\r\n                                                    transactionDate:(this.props.currentDate),\r\n                                                    user_id: this.props.user.email\r\n                                                },\r\n                                                refetchQueries: [\r\n                                                    {\r\n                                                        query: USER_MONTEHLY_FIXED_EXPENSESG,\r\n                                                        variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                                                    }\r\n                                                ]\r\n                                            });\r\n                                            form.resetFields();\r\n                                            this.setState({ visible: false });\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    console.log(this.props)\r\n                }\r\n                <Query query={USER_MONTEHLY_FIXED_EXPENSESG} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading)\r\n                            return (\r\n                                <div style={{ align: \"center\" }}>\r\n                                    <Icon type=\"loading\" />\r\n                                </div>\r\n                            );\r\n                        if (error) return <div>Error</div>;\r\n                        const array1 = [];\r\n                        if (data != null) {\r\n                            const tempData = data.fixedExpenseses;\r\n                            let primaryTotalSalary = 0;\r\n                            let spouseTotalSalary = 0;\r\n                            for (let i in tempData) {\r\n                                array1.push({\r\n                                    key: tempData[i].id,\r\n                                    topic: tempData[i].fixed_expense_type.fixed_expense_type,\r\n                                    fixed_expense_type_id: tempData[i].fixed_expense_type.id,\r\n                                    user_id: tempData[i].user_id,\r\n                                    primaryduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].duration]}\r\n                                            onChange={e =>\r\n                                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    primaryamount: tempData[i].fixed_expense_amount,\r\n\r\n                                    spouseduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                                            onChange={e =>\r\n                                                this.handleSpouseDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    spouseamount: tempData[i].spouse_amount\r\n                                });\r\n                                primaryTotalSalary =\r\n                                    primaryTotalSalary + tempData[i].fixed_expense_amount;\r\n                                spouseTotalSalary =\r\n                                    spouseTotalSalary + tempData[i].spouse_amount;\r\n                            }\r\n                            return (\r\n                                <FixedExpancesEditableTable\r\n                                    startDate={this.props.startDate} endDate={this.props.endDate}\r\n                                    salaryData={array1}\r\n                                    primaryTotalSalary={primaryTotalSalary}\r\n                                    spouseTotalSalary={spouseTotalSalary}\r\n                                    onRef={ref => (this.child = ref)}\r\n                                    user={this.props.user}\r\n                                />\r\n                            );\r\n                        }\r\n                    }}\r\n                </Query>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_FIXED_EXPENSES, { name: \"createFixedExpenseMutation\" })\r\n)(withApollo(FixedExpance));","import gql from \"graphql-tag\";\r\nexport const USER_BILLS_QUERY = gql`\r\n    query getAllBills {\r\n        billsAmounts {\r\n            id\r\n            user_id\r\n            duration\r\n            bill_amount\r\n            bill_type {\r\n                id\r\n                bills_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const USER_MONTEHLY_BILLS=gql`\r\n    query getAllBills($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        billsAmounts(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            bill_amount\r\n            bill_type {\r\n                id\r\n                bills_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../common/EditableTableRow\";\r\nimport {DELETE_BILL, UPDATE_BILL} from \"../../../../graphql/mutation/bills/BillsMutation\";\r\nimport {USER_BILLS_QUERY, USER_MONTEHLY_BILLS} from \"../../../../graphql/queries/bills/BillsQuery\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass BillsEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteBillMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BILLS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updateBillMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                bill_amount: parseFloat(row.primaryamount),\r\n                bill_type: row.bill_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BILLS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateBillMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                bill_type: slId.bill_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BILLS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateBillMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                bill_type: slId.bill_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BILLS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_BILL, { name: \"updateBillMutation\" }),\r\n    graphql(DELETE_BILL, { name: \"deleteBillMutation\" })\r\n)(withApollo(BillsEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../../../paystub/manual/manualfntryforms/AddAttributeForm\";\r\nimport {CREATE_BILLS} from \"../../../../graphql/mutation/bills/BillsMutation\";\r\nimport {USER_BILLS_QUERY, USER_MONTEHLY_BILLS} from \"../../../../graphql/queries/bills/BillsQuery\";\r\nimport BillsEditableTable from \"./BillsEditableTable\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Bills extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            intialData: [],\r\n            salary_type: \"\"\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId) => {\r\n        this.child.handlePrimaryDurationChange(select, slId);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId) => {\r\n        this.child.handleSpouseDurationChange(select, slId);\r\n    };\r\n\r\n    render() {\r\n        const {intialData}=this.state;\r\n        return (\r\n            <div className=\"ant-layout\">\r\n                <Row>\r\n                    <Col span={5}>\r\n                        <div>\r\n                            {\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    Add New Fixed Expenses Type\r\n                                </Button>\r\n                            }\r\n                            <div>\r\n                                <AddAttributeForm\r\n                                    wrappedComponentRef={this.saveFormRef}\r\n                                    visible={this.state.visible}\r\n                                    onCancel={this.handleCancel}\r\n                                    onCreate={e => {\r\n                                        e.preventDefault();\r\n                                        const { form } = this.formRef.props;\r\n                                        form.validateFields((err, values) => {\r\n                                            this.props.createBillsMutation({\r\n                                                variables: {\r\n                                                    bills_type: values.title,\r\n                                                    transactionDate:(this.props.currentDate),\r\n                                                    user_id: this.props.user.email\r\n                                                },\r\n                                                refetchQueries: [\r\n                                                    {\r\n                                                        query: USER_MONTEHLY_BILLS,\r\n                                                        variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                                                    }\r\n                                                ]\r\n                                            });\r\n                                            form.resetFields();\r\n                                            this.setState({ visible: false });\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Query query={USER_MONTEHLY_BILLS} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading)\r\n                            return (\r\n                                <div style={{ align: \"center\" }}>\r\n                                    <Icon type=\"loading\" />\r\n                                </div>\r\n                            );\r\n                        if (error) return <div>Error</div>;\r\n                        const array1 = [];\r\n                        if (data != null) {\r\n                            const tempData = data.billsAmounts;\r\n                            let primaryTotalSalary = 0;\r\n                            let spouseTotalSalary = 0;\r\n                            for (let i in tempData) {\r\n                                array1.push({\r\n                                    key: tempData[i].id,\r\n                                    topic: tempData[i].bill_type.bills_type,\r\n                                    bill_type_id: tempData[i].bill_type.id,\r\n                                    user_id: tempData[i].user_id,\r\n                                    primaryduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].duration]}\r\n                                            onChange={e =>\r\n                                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    primaryamount: tempData[i].bill_amount,\r\n\r\n                                    spouseduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                                            onChange={e =>\r\n                                                this.handleSpouseDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    spouseamount: tempData[i].spouse_amount\r\n                                });\r\n                                primaryTotalSalary =\r\n                                    primaryTotalSalary + tempData[i].bill_amount;\r\n                                spouseTotalSalary =\r\n                                    spouseTotalSalary + tempData[i].spouse_amount;\r\n                            }\r\n                            return (\r\n                                <BillsEditableTable\r\n                                    startDate={this.props.startDate} endDate={this.props.endDate}\r\n                                    salaryData={array1}\r\n                                    primaryTotalSalary={primaryTotalSalary}\r\n                                    spouseTotalSalary={spouseTotalSalary}\r\n                                    onRef={ref => (this.child = ref)}\r\n                                    user={this.props.user}\r\n                                />\r\n                            );\r\n                        }\r\n                    }}\r\n                </Query>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_BILLS, { name: \"createBillsMutation\" })\r\n)(withApollo(Bills));","import gql from \"graphql-tag\";\r\nexport const USER_VARIABLE_EXPENSES = gql`\r\n    query getAllVariableExpenses {\r\n        variableExpenseses {\r\n            id\r\n            user_id\r\n            duration\r\n            variable_expense_amount\r\n            variable_expense_type {\r\n                id\r\n                variable_expense_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USER_MONTEHLY_VARIABLE_EXPENSES=gql`\r\n    query getAllVariableExpenses($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        variableExpenseses(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            variable_expense_amount\r\n            variable_expense_type {\r\n                id\r\n                variable_expense_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../common/EditableTableRow\";\r\nimport {\r\n    DELETE_FIXED_EXPENSES,\r\n    UPDATE_FIXED_EXPENSES\r\n} from \"../../../../graphql/mutation/fixedexpenses/FixedExpensesMutation\";\r\nimport {USER_FIXED_EXPENSES_QUERY} from \"../../../../graphql/queries/fixedexpenses/FixedExpensesQuery\";\r\nimport {\r\n    DELETE_VARIABLE_EXPENSES,\r\n    UPDATE_VARIABLE_EXPENSES\r\n} from \"../../../../graphql/mutation/variableexpenses/VariableExpensesMutation\";\r\nimport {\r\n    USER_MONTEHLY_VARIABLE_EXPENSES,\r\n    USER_VARIABLE_EXPENSES\r\n} from \"../../../../graphql/queries/variableexpenses/VariableExpensesQuery\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass VariableExpancesEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteVariableExpansesMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_VARIABLE_EXPENSES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updateVariableExpansesMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                variable_expense_amount: parseFloat(row.primaryamount),\r\n                variable_expense_type: row.variable_expense_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_VARIABLE_EXPENSES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateVariableExpansesMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                variable_expense_type: slId.variable_expense_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_VARIABLE_EXPENSES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateFixedExpansesMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                variable_expense_type: slId.variable_expense_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_VARIABLE_EXPENSES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_VARIABLE_EXPENSES, { name: \"updateVariableExpansesMutation\" }),\r\n    graphql(DELETE_VARIABLE_EXPENSES, { name: \"deleteVariableExpansesMutation\" })\r\n)(withApollo(VariableExpancesEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../../../paystub/manual/manualfntryforms/AddAttributeForm\";\r\nimport {\r\n    USER_MONTEHLY_VARIABLE_EXPENSES\r\n} from \"../../../../graphql/queries/variableexpenses/VariableExpensesQuery\";\r\nimport {CREATE_VARIABLE_EXPENSES} from \"../../../../graphql/mutation/variableexpenses/VariableExpensesMutation\";\r\nimport VariableExpancesEditableTable from \"./VariableExpancesEditableTable\";\r\nimport {durationType} from'../../../common/Duration';\r\n\r\nconst { Option } = Select;\r\n\r\nclass VariableExpance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            intialData: [],\r\n            salary_type: \"\"\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId) => {\r\n        this.child.handlePrimaryDurationChange(select, slId);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId) => {\r\n        this.child.handleSpouseDurationChange(select, slId);\r\n    };\r\n\r\n    render() {\r\n        const {intialData}=this.state;\r\n        return (\r\n            <div className=\"ant-layout\">\r\n                <Row>\r\n                    <Col span={5}>\r\n                        <div>\r\n                            {\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    Add New Variable Expenses Type\r\n                                </Button>\r\n                            }\r\n                            <div>\r\n                                <AddAttributeForm\r\n                                    wrappedComponentRef={this.saveFormRef}\r\n                                    visible={this.state.visible}\r\n                                    onCancel={this.handleCancel}\r\n                                    onCreate={e => {\r\n                                        e.preventDefault();\r\n                                        const { form } = this.formRef.props;\r\n                                        form.validateFields((err, values) => {\r\n                                            this.props.createVariableExpenseMutation({\r\n                                                variables: {\r\n                                                    variable_expense_type: values.title,\r\n                                                    user_id: this.props.user.email\r\n                                                },\r\n                                                refetchQueries: [\r\n                                                    {\r\n                                                        query: USER_MONTEHLY_VARIABLE_EXPENSES,\r\n                                                        variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                                                    }\r\n                                                ]\r\n                                            });\r\n                                            form.resetFields();\r\n                                            this.setState({ visible: false });\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Query query={USER_MONTEHLY_VARIABLE_EXPENSES} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading)\r\n                            return (\r\n                                <div style={{ align: \"center\" }}>\r\n                                    <Icon type=\"loading\" />\r\n                                </div>\r\n                            );\r\n                        if (error) return <div>Error</div>;\r\n                        const array1 = [];\r\n                        if (data != null) {\r\n                            const tempData = data.variableExpenseses;\r\n                            let primaryTotalSalary = 0;\r\n                            let spouseTotalSalary = 0;\r\n                            for (let i in tempData) {\r\n                                array1.push({\r\n                                    key: tempData[i].id,\r\n                                    topic: tempData[i].variable_expense_type.variable_expense_type,\r\n                                    variable_expense_type_id: tempData[i].variable_expense_type.id,\r\n                                    user_id: tempData[i].user_id,\r\n                                    primaryduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].duration]}\r\n                                            onChange={e =>\r\n                                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    primaryamount: tempData[i].variable_expense_amount,\r\n\r\n                                    spouseduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                                            onChange={e =>\r\n                                                this.handleSpouseDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    spouseamount: tempData[i].spouse_amount\r\n                                });\r\n                                primaryTotalSalary =\r\n                                    primaryTotalSalary + tempData[i].variable_expense_amount;\r\n                                spouseTotalSalary =\r\n                                    spouseTotalSalary + tempData[i].spouse_amount;\r\n                            }\r\n                            return (\r\n                                <VariableExpancesEditableTable\r\n                                    startDate={this.props.startDate} endDate={this.props.endDate}\r\n                                    salaryData={array1}\r\n                                    primaryTotalSalary={primaryTotalSalary}\r\n                                    spouseTotalSalary={spouseTotalSalary}\r\n                                    onRef={ref => (this.child = ref)}\r\n                                    user={this.props.user}\r\n                                />\r\n                            );\r\n                        }\r\n                    }}\r\n                </Query>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_VARIABLE_EXPENSES, { name: \"createVariableExpenseMutation\" })\r\n)(withApollo(VariableExpance));","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../common/EditableTableRow\";\r\nimport {DELETE_SAVING, UPDATE_SAVING, UPDATE_SAVINGL} from \"../../../../graphql/mutation/savings/SavingsMutation\";\r\nimport {USER_MONTEHLY_SAVING} from \"../../../../graphql/queries/savings/SavingsQuery\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass SavingsEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: []\r\n        };\r\n    }\r\n\r\n   componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if(this.state.salaryData.length!==newProps.salaryData.length){\r\n            this.setState({salaryData:newProps.salaryData});\r\n        }\r\n    }\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteSavingMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        //const salaryData = [...this.state.salaryData];\r\n        //this.setState({ salaryData: salaryData.filter(item => item.key !== key) });\r\n    };\r\n\r\n    handleSave = row => {\r\n\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n\r\n        this.props.updateSavingMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                saving_amount: parseFloat(row.primaryamount),\r\n                saving_type: row.saving_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate},\r\n                    fetchPolicy: 'network-only'\r\n\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateSavingMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                saving_type: slId.saving_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateSavingMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                saving_type: slId.saving_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_SAVING, { name: \"updateSavingMutation\" }),\r\n    graphql(DELETE_SAVING, { name: \"deleteSavingMutation\" })\r\n)(withApollo(SavingsEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../../../paystub/manual/manualfntryforms/AddAttributeForm\";\r\nimport SavingsEditableTable from \"./SavingsEditableTable\";\r\nimport {CREATE_SAVING} from \"../../../../graphql/mutation/savings/SavingsMutation\";\r\nimport {USER_MONTEHLY_SAVING, USER_SAVNGS} from \"../../../../graphql/queries/savings/SavingsQuery\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Savings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            intialData: []\r\n        };\r\n    }\r\n\r\n\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId) => {\r\n        this.child.handlePrimaryDurationChange(select, slId);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId) => {\r\n        this.child.handleSpouseDurationChange(select, slId);\r\n    };\r\n\r\n    render() {\r\n        const {intialData}=this.state;\r\n        return (\r\n            <div className=\"ant-layout\">\r\n                <Row>\r\n                    <Col span={5}>\r\n                        <div>\r\n                            {\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    Add New Saving Type\r\n                                </Button>\r\n                            }\r\n                            <div>\r\n                                <AddAttributeForm\r\n                                    wrappedComponentRef={this.saveFormRef}\r\n                                    visible={this.state.visible}\r\n                                    onCancel={this.handleCancel}\r\n                                    onCreate={e => {\r\n                                        e.preventDefault();\r\n                                        const { form } = this.formRef.props;\r\n                                        form.validateFields((err, values) => {\r\n                                            this.props.createSavingsMutation({\r\n                                                variables: {\r\n                                                    saving_type: values.title,\r\n                                                    transactionDate:(this.props.currentDate),\r\n                                                    user_id:this.props.user.email\r\n                                                },\r\n                                                refetchQueries: [\r\n                                                    {\r\n                                                        query: USER_MONTEHLY_SAVING,\r\n                                                        variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                                                    }\r\n                                                ]\r\n                                            });\r\n                                            form.resetFields();\r\n                                            this.setState({ visible: false });\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Query query={USER_MONTEHLY_SAVING }  variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} fetchPolicy={\"network-only\"}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading)\r\n                            return (\r\n                                <div style={{ align: \"center\" }}>\r\n                                    <Icon type=\"loading\" />\r\n                                </div>\r\n                            );\r\n                        if (error) return <div>Error</div>;\r\n                        const array1 = [];\r\n                        if (data != null) {\r\n                            const tempData = data.savings;\r\n                            let primaryTotalSalary = 0;\r\n                            let spouseTotalSalary = 0;\r\n                            for (let i in tempData) {\r\n                                array1.push({\r\n                                    key: tempData[i].id,\r\n                                    topic: tempData[i].saving_type.saving_type,\r\n                                    saving_type_id: tempData[i].saving_type.id,\r\n                                    user_id: tempData[i].user_id,\r\n                                    primaryduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].duration]}\r\n                                            onChange={e =>\r\n                                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    primaryamount: tempData[i].saving_amount,\r\n\r\n                                    spouseduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                                            onChange={e =>\r\n                                                this.handleSpouseDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    spouseamount: tempData[i].spouse_amount\r\n                                });\r\n                                primaryTotalSalary =\r\n                                    primaryTotalSalary + tempData[i].saving_amount;\r\n                                spouseTotalSalary =\r\n                                    spouseTotalSalary + tempData[i].spouse_amount;\r\n                            }\r\n                            return (\r\n                                <SavingsEditableTable\r\n                                    startDate={this.props.startDate} endDate={this.props.endDate}\r\n                                    salaryData={array1}\r\n                                    primaryTotalSalary={primaryTotalSalary}\r\n                                    spouseTotalSalary={spouseTotalSalary}\r\n                                    onRef={ref => (this.child = ref)}\r\n                                    user={this.props.user}\r\n                                />\r\n                            );\r\n                        }\r\n                    }}\r\n                </Query>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_SAVING, { name: \"createSavingsMutation\" })\r\n)(withApollo(Savings));","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../common/EditableTableRow\";\r\nimport {\r\n    DELETE_EXTRA_RET_SAVING,\r\n    UPDATE_EXTRA_RET_SAVING\r\n} from \"../../../../graphql/mutation/extraretirementsavings/ExtraRetirementSavingsMutation\";\r\nimport {\r\n    USER_EXTRA_RETIREMENT_SAVING,\r\n    USER_MONTEHLY_EXTRA_RETIREMENT_SAVING\r\n} from \"../../../../graphql/queries/extraretirementsavings/ExtraRetirementSavingsQuery\";\r\nimport {durationType} from \"../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ExtraRetirementSavingEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteExtraSavingMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updateExtraSavingMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                extra_retirement_saving_amount: parseFloat(row.primaryamount),\r\n                extra_retirement_saving_type: row.extra_retirement_saving_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateExtraSavingMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                extra_retirement_saving_type: slId.extra_retirement_saving_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateExtraSavingMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                extra_retirement_saving_type: slId.extra_retirement_saving_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_EXTRA_RET_SAVING, { name: \"updateExtraSavingMutation\" }),\r\n    graphql(DELETE_EXTRA_RET_SAVING, { name: \"deleteExtraSavingMutation\" })\r\n)(withApollo(ExtraRetirementSavingEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../../../paystub/manual/manualfntryforms/AddAttributeForm\";\r\nimport ExtraRetirementSavingEditableTable from \"./ExtraRetirementSavingEditableTable\";\r\nimport {CREATE_EXTRA_RET_SAVING} from \"../../../../graphql/mutation/extraretirementsavings/ExtraRetirementSavingsMutation\";\r\nimport {USER_MONTEHLY_EXTRA_RETIREMENT_SAVING\r\n} from \"../../../../graphql/queries/extraretirementsavings/ExtraRetirementSavingsQuery\";\r\nimport { durationType} from '../../../common/Duration';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nclass ExtraRetirementSavings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            intialData: [],\r\n            salary_type: \"\"\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId) => {\r\n        this.child.handlePrimaryDurationChange(select, slId);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId) => {\r\n        this.child.handleSpouseDurationChange(select, slId);\r\n    };\r\n\r\n    render() {\r\n        const {intialData}=this.state;\r\n        return (\r\n            <div className=\"ant-layout\">\r\n                <Row>\r\n                    <Col span={5}>\r\n                        <div>\r\n                            {\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    Add Extra Ret Saving Type\r\n                                </Button>\r\n                            }\r\n                            <div>\r\n                                <AddAttributeForm\r\n                                    wrappedComponentRef={this.saveFormRef}\r\n                                    visible={this.state.visible}\r\n                                    onCancel={this.handleCancel}\r\n                                    onCreate={e => {\r\n                                        e.preventDefault();\r\n                                        const { form } = this.formRef.props;\r\n                                        form.validateFields((err, values) => {\r\n                                            this.props.createExtraRetSavingsMutation({\r\n                                                variables: {\r\n                                                    extra_retirement_saving_type: values.title,\r\n                                                    transactionDate:(this.props.currentDate),\r\n                                                    user_id: this.props.user.email\r\n                                                },\r\n                                                refetchQueries: [\r\n                                                    {\r\n                                                        query: USER_MONTEHLY_EXTRA_RETIREMENT_SAVING,\r\n                                                        variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                                                    }\r\n                                                ]\r\n                                            });\r\n                                            form.resetFields();\r\n                                            this.setState({ visible: false });\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Query query={USER_MONTEHLY_EXTRA_RETIREMENT_SAVING} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading)\r\n                            return (\r\n                                <div style={{ align: \"center\" }}>\r\n                                    <Icon type=\"loading\" />\r\n                                </div>\r\n                            );\r\n                        if (error) return <div>Error</div>;\r\n                        const array1 = [];\r\n                        if (data != null) {\r\n                            const tempData = data.extraRetirementSavingses;\r\n                            let primaryTotalSalary = 0;\r\n                            let spouseTotalSalary = 0;\r\n                            for (let i in tempData) {\r\n                                array1.push({\r\n                                    key: tempData[i].id,\r\n                                    topic: tempData[i].extra_retirement_saving_type.extra_retirement_saving_type,\r\n                                    extra_retirement_saving_type_id: tempData[i].extra_retirement_saving_type.id,\r\n                                    user_id: tempData[i].user_id,\r\n                                    primaryduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].duration]}\r\n                                            onChange={e =>\r\n                                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    primaryamount: tempData[i].extra_retirement_saving_amount,\r\n\r\n                                    spouseduration: (\r\n                                        <Select\r\n                                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                                            onChange={e =>\r\n                                                this.handleSpouseDurationChange(e, tempData[i])\r\n                                            }\r\n                                            showSearch\r\n                                            style={{ width: 100 }}\r\n                                            placeholder=\"Select a type\"\r\n                                            optionFilterProp=\"children\"\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.children\r\n                                                    .toLowerCase()\r\n                                                    .indexOf(input.toLowerCase()) >= 0\r\n                                            }\r\n                                        >\r\n                                            {durationType.map(duration => (\r\n                                                <Option key={duration} value={duration}>\r\n                                                    {duration}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    ),\r\n                                    spouseamount: tempData[i].spouse_amount\r\n                                });\r\n                                primaryTotalSalary =\r\n                                    primaryTotalSalary + tempData[i].extra_retirement_saving_amount;\r\n                                spouseTotalSalary =\r\n                                    spouseTotalSalary + tempData[i].spouse_amount;\r\n                            }\r\n                            return (\r\n                                <ExtraRetirementSavingEditableTable\r\n                                    startDate={this.props.startDate} endDate={this.props.endDate}\r\n                                    salaryData={array1}\r\n                                    primaryTotalSalary={primaryTotalSalary}\r\n                                    spouseTotalSalary={spouseTotalSalary}\r\n                                    onRef={ref => (this.child = ref)}\r\n                                    user={this.props.user}\r\n                                />\r\n                            );\r\n                        }\r\n                    }}\r\n                </Query>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_EXTRA_RET_SAVING, { name: \"createExtraRetSavingsMutation\" })\r\n)(withApollo(ExtraRetirementSavings));","import React from 'react'\r\nimport '../../budget/css/skeleton.css';\r\nimport StepZilla from \"react-stepzilla\";\r\nimport \"../../../styles/index.css\";\r\nimport {Col, Row} from \"antd\";\r\nimport {DatePicker} from 'antd';\r\nimport moment from \"moment\";\r\nimport FixedExpance from \"./fixedexpenses/FixedExpance\";\r\nimport Bills from \"./bill/Bills\";\r\nimport VariableExpance from \"./variableexpance/VariableExpance\";\r\nimport Savings from \"./savings/Savings\";\r\nimport ExtraRetirementSavings from \"./extraretirementsavings/ExtraRetirementSavings\";\r\nimport {endDate, monthFormat, selectedDate, startDate} from \"../../common/Duration\";\r\nconst { MonthPicker} = DatePicker;\r\n\r\nclass BudgetPlannerEntry extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current: 0,\r\n            startDate:startDate,\r\n            endDate:endDate,\r\n            currentDate:selectedDate\r\n        };\r\n    }\r\n\r\n\r\n    onChange=(date)=>{\r\n        const startDate = moment([date._d.getFullYear(), date._d.getMonth() , 1]).format(\"YYYY-MM-DD\");\r\n        const daysInMonth = moment(startDate).daysInMonth();\r\n        const endDate = moment(startDate).add(daysInMonth - 1, 'days').format(\"YYYY-MM-DD\");\r\n        const transactionDate=moment(endDate).subtract(1,\"day\").format(\"YYYY-MM-DD\");\r\n        this.setState({startDate:startDate});\r\n        this.setState({endDate:endDate});\r\n        this.setState({currentDate:transactionDate})\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='step-progress'>\r\n                <Row>\r\n                    <Col span={5}>\r\n                        <div className=\"App\">\r\n                            <MonthPicker defaultValue={moment(selectedDate, monthFormat)} format={monthFormat}  placeholder=\"Select Month\"  onChange={(date, dateString) => this.onChange(date)}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <StepZilla  steps={[\r\n                    {name: 'Fixed Expenses', component: <FixedExpance currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n                    {name: 'Bills', component: <Bills currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n                    {name: 'Variable Expenses', component: <VariableExpance currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n                    {name: 'Savings', component: <Savings currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n                    {name: 'Extra Retirement Savings', component: <ExtraRetirementSavings currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>}\r\n                ]}\r\n                            nextButtonCls=\"multiStepButton\"\r\n                backButtonCls=\"multiStepButton\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BudgetPlannerEntry;","import React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nclass SpendingChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData:[],\r\n            options: {\r\n                chart: {\r\n                    stacked: true,\r\n                    stackType: '100%'\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom',\r\n                            offsetX: -10,\r\n                            offsetY: 0\r\n                        }\r\n                    }\r\n                }],\r\n                xaxis: {\r\n                    categories: this.props.month,\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                legend: {\r\n                    position: 'left',\r\n                    offsetX: 0,\r\n                    offsetY: 50\r\n\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        background: \"#00a0e9\"\r\n\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ chartData: this.props.chartData });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Chart options={this.state.options} series={this.props.chartData} type=\"bar\" height=\"270\"  width=\"450\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SpendingChart;","\r\nimport React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass SpendingPaiChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            paiChartData:[],\r\n            options: {\r\n                labels: this.props.paiChartLabels,\r\n                legend: {\r\n                    position: 'left'\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'top'\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ chartData: this.props.chartData });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Chart options={this.state.options} series={this.props.paiChartData} type=\"pie\"  height=\"270\"  width=\"450\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SpendingPaiChart;","\r\nimport React from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass SpendingTypeChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: {\r\n                legend: {\r\n                    position: 'left'\r\n                },\r\n                labels: this.props.spendingTypeChartLavel,\r\n                responsive: [{\r\n                    breakpoint: 580,\r\n                    options: {\r\n                        chart: {\r\n                            width: 300\r\n                        },\r\n                        legend: {\r\n                            position: 'top'\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ chartData: this.props.spendingTypeChartSeries });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Chart options={this.state.options} series={this.props.spendingTypeChartSeries} type=\"pie\"  height=\"270\"  width=\"450\" />\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SpendingTypeChart;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col, Divider\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport { USER_MONTEHLY_SAVING } from \"../../../graphql/queries/savings/SavingsQuery\";\r\nimport EditableFormRow from \"../../common/EditableFormRow\";\r\nimport EditableCell from \"../../common/EditableTableRow\";\r\nimport {USER_MONTEHLY_INCOME} from \"../../../graphql/queries/income/IncomeQuery\";\r\nimport {durationType, mapView} from \"../../common/Duration\";\r\nimport {\r\n    DELETE_FIXED_EXPENSES,\r\n    UPDATE_FIXED_EXPENSES\r\n} from \"../../../graphql/mutation/fixedexpenses/FixedExpensesMutation\";\r\nimport {\r\n    DELETE_VARIABLE_EXPENSES,\r\n    UPDATE_VARIABLE_EXPENSES\r\n} from \"../../../graphql/mutation/variableexpenses/VariableExpensesMutation\";\r\nimport {DELETE_BILL, UPDATE_BILL} from \"../../../graphql/mutation/bills/BillsMutation\";\r\nimport SpendingChart from \"./SpendingChart\";\r\nimport SpendingPaiChart from \"./SpendingPaiChart\";\r\nimport {USER_MONTEHLY_SPENDING} from \"../../../graphql/queries/spending/SpendingQuery\";\r\nimport SpendingTypeChart from \"./SpendingTypeChart\";\r\nimport {USER_MONTEHLY_BILLS} from \"../../../graphql/queries/bills/BillsQuery\";\r\nimport {USER_MONTEHLY_VARIABLE_EXPENSES} from \"../../../graphql/queries/variableexpenses/VariableExpensesQuery\";\r\nimport {USER_MONTEHLY_FIXED_EXPENSESG} from \"../../../graphql/queries/fixedexpenses/FixedExpensesQuery\";\r\nconst { Option } = Select;\r\n\r\nclass SpendingEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            durationView:0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n        this.setState({durationView:this.props.durationView})\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({ salaryData: newProps.salaryData });\r\n    }\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteSavingMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_SAVING,\r\n                    variables: {\r\n                        user_id: this.props.user.email,\r\n                        tranaction_start_date: this.props.startDate,\r\n                        transaction_end_date: this.props.endDate\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        //const salaryData = [...this.state.salaryData];\r\n        //this.setState({ salaryData: salaryData.filter(item => item.key !== key) });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n\r\n        if (row.type === \"bills\") {\r\n            this.props.updateBillMutation({\r\n                variables: {\r\n                    user_id: row.user_id,\r\n                    duration: primaryDuration,\r\n                    bill_amount: parseFloat(row.primaryamount),\r\n                    bill_type: row.bill_type_id,\r\n                    id: row.key,\r\n                    spouse_amount: parseFloat(row.spouseamount),\r\n                    spouse_duration: spouseDuration\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        } else if(row.type === \"variableExpenseses\") {\r\n            this.props.updateVariableExpansesMutation({\r\n                variables: {\r\n                    user_id: row.user_id,\r\n                    duration: primaryDuration,\r\n                    variable_expense_amount: parseFloat(row.primaryamount),\r\n                    variable_expense_type: row.variable_expense_type_id,\r\n                    id: row.key,\r\n                    spouse_amount: parseFloat(row.spouseamount),\r\n                    spouse_duration: spouseDuration\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else{\r\n            this.props.updateFixedExpansesMutation({\r\n                variables: {\r\n                    user_id: row.user_id,\r\n                    duration: primaryDuration,\r\n                    fixed_expense_amount: parseFloat(row.primaryamount),\r\n                    fixed_expense_type: row.fixed_expense_type_id,\r\n                    id: row.key,\r\n                    spouse_amount: parseFloat(row.spouseamount),\r\n                    spouse_duration: spouseDuration\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId,type) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        if (type === \"bills\"){\r\n            this.props.updateBillMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    duration: primaryDuration,\r\n                    bill_type: slId.bill_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n       else if(type === \"variableExpenseses\") {\r\n            this.props.updateVariableExpansesMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    duration: primaryDuration,\r\n                    variable_expense_type: slId.variable_expense_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }else{\r\n            this.props.updateFixedExpansesMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    duration: primaryDuration,\r\n                    fixed_expense_type: slId.fixed_expense_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId,type) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        if (type === \"bills\"){\r\n            this.props.updateBillMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    spouse_duration: spouseDuration,\r\n                    bill_type: slId.bill_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        else if(type === \"variableExpenseses\") {\r\n            this.props.updateVariableExpansesMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    spouse_duration: spouseDuration,\r\n                    variable_expense_type: slId.variable_expense_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n        }else{\r\n            this.props.updateFixedExpansesMutation({\r\n                variables: {\r\n                    user_id: slId.user_id,\r\n                    spouse_duration: spouseDuration,\r\n                    fixed_expense_type: slId.fixed_expense_type.id,\r\n                    id: slId.id\r\n                },\r\n                refetchQueries: [\r\n                    {\r\n                        query: USER_MONTEHLY_SPENDING,\r\n                        variables: {\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.props.endDate,\r\n                            transaction_end_date: this.props.startDate\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo,durationView } = this.state;\r\n        const { salaryData } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 300\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 200\r\n            },\r\n            {\r\n                title: durationType[this.props.durationView],\r\n                dataIndex: \"primaryDurationAmount\",\r\n                key: \"primaryDurationAmount\",\r\n                editable: false,\r\n                width: 200\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 200\r\n            },\r\n            {\r\n                title: durationType[this.props.durationView],\r\n                dataIndex: \"spouseDurationAmount\",\r\n                key: \"spouseDurationAmount\",\r\n                editable: false,\r\n                width: 200\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-income-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={{pageSize: 5}  }\r\n                        scroll={{ y: 230 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                        useFixedHeader={true}\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={3} />\r\n                    <Col span={4}>\r\n                        <div className=\"incomeFont\">Total  {durationType[this.props.durationView]}</div>\r\n                    </Col>\r\n                    <Col span={4} />\r\n                    <Col span={6}>\r\n                        <Statistic className=\"incomeFont\"\r\n                                   title=\"Primary Spending\"\r\n                                   value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={2} />\r\n                    <Col span={3}>\r\n                        <Statistic className=\"incomeFont\"\r\n                                   title=\"Spouse  Spending\"\r\n                                   value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider style={{height:1}}/>\r\n                <div className=\"flex-row\">\r\n                    <div className=\"flex-col\"><SpendingChart\r\n                        onRef={ref => (this.child = ref)}\r\n                        chartData={this.props.chartData}\r\n                        month={this.props.month}/>\r\n                    </div>\r\n                    <div className=\"flex-col\"> <SpendingTypeChart\r\n                        onRef={ref => (this.child = ref)}\r\n                        spendingTypeChartLavel={this.props.spendingTypeChartLavel}\r\n                        spendingTypeChartSeries={this.props.spendingTypeChartSeries}\r\n                    /></div>\r\n                    <div className=\"flex-col\"> <SpendingPaiChart\r\n                        onRef={ref => (this.child = ref)}\r\n                        paiChartData={this.props.paiChartData}\r\n                        paiChartLabels={this.props.paiChartLabels}/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_FIXED_EXPENSES, { name: \"updateFixedExpansesMutation\" }),\r\n    graphql(UPDATE_VARIABLE_EXPENSES,{name:\"updateVariableExpansesMutation\"}),\r\n    graphql(UPDATE_BILL,{name:\"updateBillMutation\"}),\r\n    graphql(DELETE_FIXED_EXPENSES, { name: \"deleteFixedExpansesMutation\" }),\r\n    graphql(DELETE_VARIABLE_EXPENSES,{name:\"deleteVariableExpansesMutation\"}),\r\n    graphql(DELETE_BILL,{name:\"deleteBillMutation\"})\r\n\r\n)(withApollo(SpendingEditableTable));\r\n","import React from \"react\";\r\nimport { Radio, Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../styles/index.css\";\r\nimport { compose, graphql, Mutation, Query, withApollo } from \"react-apollo\";\r\nimport { yearEndDate, yearStartDate, durationType,mapView} from \"../../common/Duration\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport {USER_MONTEHLY_SPENDING} from \"../../../graphql/queries/spending/SpendingQuery\";\r\nimport {CREATE_SAVING} from \"../../../graphql/mutation/savings/SavingsMutation\";\r\nimport SpendingEditableTable from \"./SpendingEditableTable\";\r\nconst { Option } = Select;\r\n\r\nclass Spending extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            durationView:0,\r\n            startDate: yearStartDate,\r\n            endDate: yearEndDate,\r\n            disabled: [],\r\n            chartColors: {\r\n                primaryBenefit: \"#e96d8d\",\r\n                spouseBenefit: \"#40ee86\",\r\n                primarySalary: \"#67d6c0\",\r\n                spouseSalary: \"#127197\"\r\n            }\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    saveFormRef = formRef => {\r\n        this.formRef = formRef;\r\n        this.setState({ formRef: formRef });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (select, slId,type) => {\r\n        this.child.handlePrimaryDurationChange(select, slId,type);\r\n    };\r\n\r\n    handleSpouseDurationChange = (select, slId,type) => {\r\n        this.child.handleSpouseDurationChange(select, slId,type);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const durationView=this.state.durationView;\r\n        return (\r\n            <div className=\"ant-layout\">\r\n\r\n\r\n\r\n\r\n                <Radio.Group defaultValue=\"0\" buttonStyle=\"solid\" onChange={e=>{\r\n                    this.setState({durationView:e.target.value})\r\n                }}>\r\n                    <Radio.Button value=\"0\">Annually</Radio.Button>\r\n                    <Radio.Button value=\"1\">Quarterly</Radio.Button>\r\n                    <Radio.Button value=\"2\">Monthly</Radio.Button>\r\n                    <Radio.Button value=\"3\">Weekly</Radio.Button>\r\n                    <Radio.Button value=\"4\">Fortnightly</Radio.Button>\r\n                </Radio.Group>\r\n\r\n\r\n\r\n\r\n                {\r\n                    <Query\r\n                        query={USER_MONTEHLY_SPENDING}\r\n                        variables={{\r\n                            user_id: this.props.user.email,\r\n                            tranaction_start_date: this.state.endDate,\r\n                            transaction_end_date: this.state.startDate\r\n                        }}\r\n                        fetchPolicy={\"network-only\"}\r\n                    >\r\n                        {({ loading, error, data }) => {\r\n                            if (loading)\r\n                                return (\r\n                                    <div style={{ align: \"center\" }}>\r\n                                        <Icon type=\"loading\" />\r\n                                    </div>\r\n                                );\r\n                            if (error) return <div>Error</div>;\r\n                            const array1 = [];\r\n                            let graphData1 = [];\r\n\r\n                            if (data != null) {\r\n                                const bills = data.billsAmounts;\r\n                                const variableExpenseses = data.variableExpenseses;\r\n                                const fixedExpenseses=data.fixedExpenseses;\r\n                                let primaryTotalSalary = 0;\r\n                                let spouseTotalSalary = 0;\r\n                                for (let i in fixedExpenseses) {\r\n                                    graphData1.push({\r\n                                        topic: fixedExpenseses[i].fixed_expense_type.fixed_expense_type,\r\n                                        month: moment(fixedExpenseses[i].transactionDate).format(\"MMMM\"),\r\n                                        primaryFixedExpenseses: Math.round((((fixedExpenseses[i].fixed_expense_amount)*mapView[fixedExpenseses[i].duration][fixedExpenseses[i].duration])/mapView[durationView][durationView])),\r\n                                        spouseFixedExpenseses: Math.round((((fixedExpenseses[i].spouse_amount)*mapView[fixedExpenseses[i].spouse_duration][fixedExpenseses[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                        primaryBills:0,\r\n                                        spouseBills:0,\r\n                                        primaryVariableExpenseses:0,\r\n                                        spouseVriableExpenseses:0,\r\n                                        salary_benefit:Math.round((((fixedExpenseses[i].fixed_expense_amount)*mapView[fixedExpenseses[i].duration][fixedExpenseses[i].duration])/mapView[durationView][durationView]))+Math.round((((fixedExpenseses[i].spouse_amount)*mapView[fixedExpenseses[i].spouse_duration][fixedExpenseses[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                    });\r\n\r\n                                    array1.push({\r\n                                        key: fixedExpenseses[i].id,\r\n                                        topic: fixedExpenseses[i].fixed_expense_type.fixed_expense_type,\r\n                                        type: \"fixedExpenseses\",\r\n                                        fixed_expense_type_id: fixedExpenseses[i].fixed_expense_type.id,\r\n                                        user_id: fixedExpenseses[i].user_id,\r\n                                        primaryduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[fixedExpenseses[i].duration]}\r\n                                                onChange={e =>\r\n                                                    this.handlePrimaryDurationChange(e, fixedExpenseses[i],\"fixedExpenseses\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        primaryamount: fixedExpenseses[i].fixed_expense_amount,\r\n                                        primaryDurationAmount:Math.round((((fixedExpenseses[i].fixed_expense_amount)*mapView[fixedExpenseses[i].duration][fixedExpenseses[i].duration])/mapView[durationView][durationView])),\r\n\r\n                                        spouseduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[fixedExpenseses[i].spouse_duration]}\r\n                                                onChange={e =>\r\n                                                    this.handleSpouseDurationChange(e, fixedExpenseses[i],\"fixedExpenseses\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        spouseamount: fixedExpenseses[i].spouse_amount,\r\n                                        spouseDurationAmount:Math.round((((fixedExpenseses[i].spouse_amount)*mapView[fixedExpenseses[i].spouse_duration][fixedExpenseses[i].spouse_duration])/mapView[durationView][durationView]))\r\n                                    });\r\n                                    primaryTotalSalary =\r\n                                        primaryTotalSalary + Math.round((((fixedExpenseses[i].fixed_expense_amount)*mapView[fixedExpenseses[i].duration][fixedExpenseses[i].duration])/mapView[durationView][durationView]));\r\n                                    spouseTotalSalary =\r\n                                        spouseTotalSalary + Math.round((((fixedExpenseses[i].spouse_amount)*mapView[fixedExpenseses[i].spouse_duration][fixedExpenseses[i].spouse_duration])/mapView[durationView][durationView]));\r\n                                }\r\n                                for (let i in bills) {\r\n                                    graphData1.push({\r\n                                        topic: bills[i].bill_type.bills_type,\r\n                                        month: moment(bills[i].transactionDate).format(\"MMMM\"),\r\n                                        primaryBills: Math.round((((bills[i].bill_amount)*mapView[bills[i].duration][bills[i].duration])/mapView[durationView][durationView])),\r\n                                        spouseBills: Math.round((((bills[i].spouse_amount)*mapView[bills[i].spouse_duration][bills[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                        primaryFixedExpenseses:0,\r\n                                        spouseFixedExpenseses:0,\r\n                                        primaryVariableExpenseses:0,\r\n                                        spouseVriableExpenseses:0,\r\n                                        salary_benefit:Math.round((((bills[i].bill_amount)*mapView[bills[i].duration][bills[i].duration])/mapView[durationView][durationView]))+Math.round((((bills[i].spouse_amount)*mapView[bills[i].spouse_duration][bills[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                    });\r\n\r\n                                    array1.push({\r\n                                        key: bills[i].id,\r\n                                        topic: bills[i].bill_type.bills_type,\r\n                                        type: \"bills\",\r\n                                        bill_type_id: bills[i].bill_type.id,\r\n                                        user_id: bills[i].user_id,\r\n                                        primaryduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[bills[i].duration]}\r\n                                                onChange={e =>\r\n                                                    this.handlePrimaryDurationChange(e, bills[i],\"bills\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        primaryamount: bills[i].bill_amount,\r\n                                        primaryDurationAmount:Math.round((((bills[i].bill_amount)*mapView[bills[i].duration][bills[i].duration])/mapView[durationView][durationView])),\r\n\r\n                                        spouseduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[bills[i].spouse_duration]}\r\n                                                onChange={e =>\r\n                                                    this.handleSpouseDurationChange(e, bills[i],\"bills\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        spouseamount: bills[i].spouse_amount,\r\n                                        spouseDurationAmount:Math.round((((bills[i].spouse_amount)*mapView[bills[i].spouse_duration][bills[i].spouse_duration])/mapView[durationView][durationView]))\r\n                                    });\r\n                                    primaryTotalSalary =\r\n                                        primaryTotalSalary + Math.round((((bills[i].bill_amount)*mapView[bills[i].duration][bills[i].duration])/mapView[durationView][durationView]));\r\n                                    spouseTotalSalary =\r\n                                        spouseTotalSalary + Math.round((((bills[i].spouse_amount)*mapView[bills[i].spouse_duration][bills[i].spouse_duration])/mapView[durationView][durationView]));\r\n                                }\r\n                                for (let i in variableExpenseses) {\r\n                                    graphData1.push({\r\n                                        topic: variableExpenseses[i].variable_expense_type.variable_expense_type,\r\n                                        month: moment(variableExpenseses[i].transactionDate).format(\"MMMM\"),\r\n                                        primaryVariableExpenseses:Math.round((((variableExpenseses[i].variable_expense_amount)*mapView[variableExpenseses[i].duration][variableExpenseses[i].duration])/mapView[durationView][durationView])),\r\n                                        spouseVriableExpenseses:Math.round(( ((variableExpenseses[i].spouse_amount)*mapView[variableExpenseses[i].spouse_duration][variableExpenseses[i].spouse_duration])/mapView[durationView][durationView])),\r\n                                        primaryFixedExpenseses:0,\r\n                                        spouseFixedExpenseses:0,\r\n                                        primaryBills:0,\r\n                                        spouseBills:0,\r\n                                        salary_benefit:Math.round((((variableExpenseses[i].variable_expense_amount)*mapView[variableExpenseses[i].duration][variableExpenseses[i].duration])/mapView[durationView][durationView]))+Math.round(( ((variableExpenseses[i].spouse_amount)*mapView[variableExpenseses[i].spouse_duration][variableExpenseses[i].spouse_duration])/mapView[durationView][durationView]))\r\n                                    });\r\n\r\n                                    array1.push({\r\n                                        key: variableExpenseses[i].id,\r\n                                        topic: variableExpenseses[i].variable_expense_type.variable_expense_type,\r\n                                        variable_expense_type_id: variableExpenseses[i].variable_expense_type.id,\r\n                                        user_id: variableExpenseses[i].user_id,\r\n                                        type: \"variableExpenseses\",\r\n                                        primaryduration: (\r\n                                            <Select\r\n                                                defaultValue={durationType[variableExpenseses[i].duration]}\r\n                                                onChange={e =>\r\n                                                    this.handlePrimaryDurationChange(e, variableExpenseses[i],\"variableExpenseses\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        primaryamount: variableExpenseses[i].variable_expense_amount,\r\n                                        primaryDurationAmount:Math.round((((variableExpenseses[i].variable_expense_amount)*mapView[variableExpenseses[i].duration][variableExpenseses[i].duration])/mapView[durationView][durationView])),\r\n                                        spouseduration: (\r\n                                            <Select\r\n                                                defaultValue={\r\n                                                    durationType[variableExpenseses[i].spouse_duration]\r\n                                                }\r\n                                                onChange={e =>\r\n                                                    this.handleSpouseDurationChange(e, variableExpenseses[i],\"variableExpenseses\")\r\n                                                }\r\n                                                showSearch\r\n                                                style={{ width: 100 }}\r\n                                                placeholder=\"Select a type\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children\r\n                                                        .toLowerCase()\r\n                                                        .indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {durationType.map(duration => (\r\n                                                    <Option key={duration} value={duration}>\r\n                                                        {duration}\r\n                                                    </Option>\r\n                                                ))}\r\n                                            </Select>\r\n                                        ),\r\n                                        spouseamount: variableExpenseses[i].spouse_amount,\r\n                                        spouseDurationAmount:Math.round(( ((variableExpenseses[i].spouse_amount)*mapView[variableExpenseses[i].spouse_duration][variableExpenseses[i].spouse_duration])/mapView[durationView][durationView]))\r\n                                    });\r\n                                    primaryTotalSalary =\r\n                                        primaryTotalSalary + Math.round((((variableExpenseses[i].variable_expense_amount)*mapView[variableExpenseses[i].duration][variableExpenseses[i].duration])/mapView[durationView][durationView]));\r\n                                    spouseTotalSalary =\r\n                                        spouseTotalSalary + Math.round(( ((variableExpenseses[i].spouse_amount)*mapView[variableExpenseses[i].spouse_duration][variableExpenseses[i].spouse_duration])/mapView[durationView][durationView]));\r\n                                }\r\n                                const month = [];\r\n                                let chartData12=[];\r\n                                const result1 = _(graphData1)\r\n                                    .groupBy('month')\r\n                                    .map(function(items, month) {\r\n                                        return {\r\n                                            month: month,\r\n                                            name:_.map(items, 'topic'),\r\n                                            data: _.map(items, 'salary_benefit')\r\n                                        };\r\n                                    }).value();\r\n                                for(let i in result1){\r\n                                    month.push(result1[i].month);\r\n                                    for(let j in result1[i].name){\r\n                                        let temp12=[...Array(result1.length)].map(x=>0);\r\n                                        temp12.splice(i,1,result1[i].data[j]);\r\n                                        chartData12.push({\r\n                                            name:result1[i].name[j],\r\n                                            data:temp12\r\n                                        })\r\n                                    }\r\n                                }\r\n                                const labels=[];\r\n                                const series=[];\r\n                                _(chartData12).groupBy('name').map(function(item,name){\r\n                                    labels.push(name);\r\n                                    series.push(item[0].data.reduce((a, b) => a + b, 0));\r\n                                }).value();\r\n\r\n                                let primaryFixedExpenseses = 0;\r\n                                let spouseFixedExpenseses = 0;\r\n                                let primaryBills = 0;\r\n                                let spouseBills = 0;\r\n                                let primaryVariableExpenseses = 0;\r\n                                let spouseVriableExpenseses = 0;\r\n\r\n                                graphData1.filter(value => {\r\n                                    console.log(value. primaryFixedExpenseses);\r\n                                    primaryFixedExpenseses = primaryFixedExpenseses + value.primaryFixedExpenseses;\r\n                                    spouseFixedExpenseses = spouseFixedExpenseses + value.spouseFixedExpenseses;\r\n                                    primaryBills = primaryBills + value.primaryBills;\r\n                                    spouseBills = spouseBills + value.spouseBills;\r\n                                    primaryVariableExpenseses = primaryVariableExpenseses + value.primaryVariableExpenseses;\r\n                                    spouseVriableExpenseses = spouseVriableExpenseses + value.spouseVriableExpenseses;\r\n                                });\r\n\r\n                                let paiChartData = [\r\n                                    primaryFixedExpenseses,\r\n                                    spouseFixedExpenseses,\r\n                                    primaryBills,\r\n                                    spouseBills,\r\n                                    primaryVariableExpenseses,\r\n                                    spouseVriableExpenseses\r\n                                ];\r\n                                const  paiChartLabels= ['Primary Fixed Expenses','Spouse Fixed Expenses','Primary Bills','Spouse Bills','Primary Variable Expenses','Spouse Variable Expenses' ];\r\n                                return (\r\n                                    <SpendingEditableTable\r\n                                        startDate={this.state.startDate}\r\n                                        endDate={this.state.endDate}\r\n                                        salaryData={array1}\r\n                                        primaryTotalSalary={primaryTotalSalary}\r\n                                        spouseTotalSalary={spouseTotalSalary}\r\n                                        onRef={ref => (this.child = ref)}\r\n                                        chartData={chartData12}\r\n                                        month={month}\r\n                                        paiChartData={paiChartData}\r\n                                        durationView={durationView}\r\n                                        spendingTypeChartLavel={labels}\r\n                                        spendingTypeChartSeries={series}\r\n                                        paiChartLabels={paiChartLabels}\r\n                                        user={this.props.user}\r\n                                    />\r\n                                );\r\n                            }\r\n                        }}\r\n                    </Query>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_SAVING, { name: \"createSavingsMutation\" })\r\n)(withApollo(Spending));","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Icon, Menu, Button } from \"antd\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nimport {\r\n  HashRouter as Router,\r\n  NavLink, Redirect,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport CashFlow from \"./CashFlow\";\r\nimport Saving from \"./savings/Saving\";\r\nimport Income from \"./income/Income\";\r\nimport Tracket from \"./Tracker\";\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\nimport BudgetPlannerEntry from \"./budgetplanner/BudgetPlannerEntry\";\r\nimport Spending from \"./spending/Spending\";\r\nconst { Content, Sider, Footer } = Layout;\r\n\r\nconst BudgetSideBar = props => {\r\n  const [collapsed, onCollapse] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(\r\n    () => {\r\n      dispatch({\r\n        type: CURRENT_COMPONENT,\r\n        payload: { component: \"budget\", sideBarMenuKey: \"budget\" }\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  {\r\n    return (\r\n        <Layout className=\"app\">\r\n        <HeaderRes user={props.user} />\r\n        <Content className=\"content\">\r\n          <Router>\r\n            <Layout style={{ padding: \"0px 0px\" }}>\r\n              <Sider\r\n                style={{ padding: \"0px 0px\" }}\r\n                id=\"sider-menu\"\r\n                trigger={null}\r\n                collapsible\r\n                collapsed={collapsed}\r\n                breakpoint=\"lg\"\r\n                onBreakpoint={broken => {\r\n                  // this.toggleCollapsed();\r\n                }}\r\n                onCollapse={onCollapse}\r\n                width=\"270\"\r\n              >\r\n                <div style={{ padding: \"0px 0px\" }}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={() => onCollapse(!collapsed)}\r\n                    style={{ marginBottom: 16 }}\r\n                  >\r\n                    {<Icon type={collapsed ? \"menu-unfold\" : \"menu-fold\"} />}\r\n                  </Button>\r\n                  <Menu\r\n                    defaultSelectedKeys={[\"budgetEntry\"]}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    inlineCollapsed={collapsed}\r\n                    style={{ padding: \"0px 0px\" }}\r\n                  >\r\n\r\n                    <Menu.Item key=\"budgetEntry\">\r\n                      <NavLink to=\"/budget/budgetEntry\">\r\n                        <Icon type=\"fund\" spin=\"true\" />\r\n                        <span>Budget Planner</span>\r\n                      </NavLink>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"tracker\">\r\n                      <NavLink to=\"/budget/trackers\">\r\n                      <Icon type=\"transaction\" spin=\"true\" />\r\n                      <span>Tracker</span>\r\n                      </NavLink>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"cashflow\"\r\n                        title={\r\n                          <span>\r\n                      <Icon type=\"gold\" />\r\n                      <span>Cash Flow</span>\r\n                    </span>\r\n                        }\r\n                    >\r\n                      <Menu.Item key=\"income\">\r\n                        <NavLink to={\"/budget/income\"}>\r\n                          <Icon type=\"fund\" spin=\"true\" />\r\n                          <span>Income</span>\r\n                        </NavLink>\r\n                      </Menu.Item>\r\n                      <Menu.Item key=\"budgetspending\">\r\n                        <NavLink to=\"/budget/budgetspending\">\r\n                          <Icon type=\"caret-right\" spin=\"true\" />\r\n                          <span>Spending</span>\r\n                        </NavLink>\r\n                      </Menu.Item>\r\n\r\n                      <Menu.Item key=\"saving\">\r\n                        <NavLink to={\"/budget/saving\"}>\r\n                          <Icon type=\"strikethrough\" spin=\"true\" />\r\n                          <span>Saving</span>\r\n                        </NavLink>\r\n                      </Menu.Item>\r\n                    </SubMenu>\r\n\r\n\r\n                    <Menu.Item key=\"2\">\r\n                      <Icon type=\"fund\" spin=\"true\" />\r\n                      <span>Total Income</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                      <Icon type=\"file-done\" />\r\n                      <span>Taxes (SS, Medicare, Medicaid)</span>\r\n                    </Menu.Item>\r\n                    <SubMenu\r\n                        key=\"sub1\"\r\n                        title={\r\n                          <span>\r\n                      <Icon type=\"euro\" />\r\n                      <span>Pre Tax Items</span>\r\n                    </span>\r\n                        }\r\n                    >\r\n                      <Menu.Item key=\"5\">Retirement (401k, PF)</Menu.Item>\r\n                      <Menu.Item key=\"6\">HSA</Menu.Item>\r\n                      <Menu.Item key=\"7\">FSA</Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        key=\"sub2\"\r\n                        title={\r\n                          <span>\r\n                      <Icon type=\"gold\" />\r\n                      <span>Total Take Home Pay</span>\r\n                    </span>\r\n                        }\r\n                    >\r\n                      <Menu.Item key=\"8\">Budget</Menu.Item>\r\n                      <Menu.Item key=\"9\">50% - Category</Menu.Item>\r\n                      <Menu.Item key=\"10\">30% - Category</Menu.Item>\r\n                      <Menu.Item key=\"11\">20% - Category</Menu.Item>\r\n                    </SubMenu>\r\n                  </Menu>\r\n                </div>\r\n              </Sider>\r\n\r\n              <Content className=\"content\" style={{ margin: \"0px 0px 0\" ,height:\"auto\" }}>\r\n                <Redirect from=\"/\" exact to=\"/budget/budgetEntry\"  user={props.user}/>\r\n                <Route\r\n                    path=\"/budget/budgetEntry\"\r\n                    component={() => <BudgetPlannerEntry user={props.user} />}\r\n                />\r\n                <Route\r\n                    path=\"/budget/budgetspending\"\r\n                    component={() => <Spending user={props.user} />}\r\n                />\r\n                <Route\r\n                    path=\"/budget/trackers\"\r\n                    component={() => <Tracket user={props.user} />}\r\n                />\r\n                <Route\r\n                    path=\"/budget/cashflow\"\r\n                    component={() => <CashFlow user={props.user} />}\r\n                />\r\n                <Route\r\n                    path=\"/budget/saving\"\r\n                    component={() => <Saving user={props.user} />}\r\n                />\r\n                <Route\r\n                    path=\"/budget/income\"\r\n                    component={() => <Income user={props.user} />}\r\n                />\r\n              </Content>\r\n            </Layout>\r\n          </Router>\r\n        </Content>\r\n        <BudgetFooter/>\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\nexport  default BudgetSideBar;\r\n","import gql from \"graphql-tag\";\r\nexport const USER_SALARY = gql`\r\n    query getAllSalary {\r\n        salaries {\r\n            id\r\n            user_id\r\n            duration\r\n            salary_amount\r\n            salary_category_id {\r\n                id\r\n                salary_type_name\r\n                status\r\n            }\r\n            spouse_salary\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USER_MONTEHLY_SALARY=gql`\r\n    query getAllSalary($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        salaries(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            salary_amount\r\n            salary_category_id {\r\n                id\r\n                salary_type_name\r\n                status\r\n            }\r\n            spouse_salary\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport { Table, Popconfirm, Statistic, Select, Row, Col } from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport {DELETE_SALARY, UPDATE_SALARY} from \"../../../../../graphql/mutation/salary/SalaryMutation\";\r\nimport {USER_MONTEHLY_SALARY, USER_SALARY} from \"../../../../../graphql/queries/salary/SalaryQuery\";\r\nimport EditableFormRow from \"../../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../../common/EditableTableRow\";\r\nimport {USER_MONTEHLY_SAVING} from \"../../../../../graphql/queries/savings/SavingsQuery\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nclass SalaryEditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n      salaryData: [],\r\n      primaryTotalSalary: 0,\r\n      spouseTotalSalary: 0,\r\n      count: 2\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    this.setState({ salaryData: this.props.salaryData });\r\n  }\r\n\r\n  handleResize = index => (e, { size }) => {\r\n    this.setState(({ columns }) => {\r\n      const nextColumns = [...columns];\r\n      nextColumns[index] = {\r\n        ...nextColumns[index],\r\n        width: size.width\r\n      };\r\n      return { columns: nextColumns };\r\n    });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter\r\n    });\r\n  };\r\n\r\n  handleDelete = key => {\r\n    this.props.deleteSalaryMutation({\r\n      variables: {\r\n        id: key\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: USER_MONTEHLY_SALARY,\r\n          variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n        }\r\n      ]\r\n    });\r\n   };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.salaryData];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    let primaryDuration = durationType.findIndex(\r\n      item => row.primaryduration.props.defaultValue === item\r\n    );\r\n    let spouseDuration = durationType.findIndex(\r\n      item => row.spouseduration.props.defaultValue === item\r\n    );\r\n    this.props.updateSalaryMutation({\r\n      variables: {\r\n        user_id: row.user_id,\r\n        duration: primaryDuration,\r\n        salary_amount: parseFloat(row.primaryamount),\r\n        salary_category_id: row.salary_category_id,\r\n        id: row.key,\r\n        spouse_salary: parseFloat(row.spouseamount),\r\n        spouse_duration: spouseDuration\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: USER_MONTEHLY_SALARY,\r\n          variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n        }\r\n      ]\r\n    });\r\n    this.setState({ salaryData: newData });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (value, slId) => {\r\n    let primaryDuration = durationType.findIndex(item => value === item);\r\n    this.props.updateSalaryMutation({\r\n      variables: {\r\n        user_id: slId.user_id,\r\n        duration: primaryDuration,\r\n        salary_category_id: slId.salary_category_id.id,\r\n        id: slId.id\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: USER_MONTEHLY_SAVING,\r\n          variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  handleSpouseDurationChange = (value, slId) => {\r\n    let spouseDuration = durationType.findIndex(item => value === item);\r\n    this.props.updateSalaryMutation({\r\n      variables: {\r\n        user_id: slId.user_id,\r\n        spouse_duration: spouseDuration,\r\n        salary_category_id: slId.salary_category_id.id,\r\n        id: slId.id\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: USER_MONTEHLY_SAVING,\r\n          variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ salaryData: newProps.salaryData });\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo } = this.state;\r\n    const { salaryData } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n      {\r\n        title: <div style={{}}>{\"Title\"}</div>,\r\n        dataIndex: \"topic\",\r\n        key: \"topic\",\r\n        editable: false,\r\n        render: text => <a>{text}</a>,\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n        width: 400\r\n      },\r\n      {\r\n        title: \"primary duration\",\r\n        dataIndex: \"primaryduration\",\r\n        key: \"primaryduration\",\r\n        editable: false,\r\n        sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n        sortOrder:\r\n          sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"primary amount\",\r\n        dataIndex: \"primaryamount\",\r\n        key: \"primaryamount\",\r\n        editable: true,\r\n        filteredValue: filteredInfo.address || null,\r\n        onFilter: (value, record) => record.primaryamount.includes(value),\r\n        sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n        sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n        width: 250\r\n      },\r\n      {\r\n        title: \"spouse duration\",\r\n        dataIndex: \"spouseduration\",\r\n        key: \"spouseduration\",\r\n        editable: false,\r\n        sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n        sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n      },\r\n      {\r\n        title: \"spouse amount\",\r\n        dataIndex: \"spouseamount\",\r\n        key: \"spouseamount\",\r\n        editable: true,\r\n        filteredValue: filteredInfo.address || null,\r\n        onFilter: (value, record) => record.spouseamount.includes(value),\r\n        sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n        sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n        width: 250\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) =>\r\n          this.state.salaryData.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a>Delete</a>\r\n            </Popconfirm>\r\n          ) : null,\r\n        width: 150\r\n      }\r\n    ];\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      },\r\n      header: {}\r\n    };\r\n    const columns1 = columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave\r\n        })\r\n      };\r\n    });\r\n\r\n    const columns2 = columns1.map((col, index) => ({\r\n      ...col,\r\n      onHeaderCell: column => ({\r\n        width: column.width,\r\n        onResize: this.handleResize(index)\r\n      })\r\n    }));\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"App\">\r\n          <Table\r\n            className=\"ant-table-content\"\r\n            components={components}\r\n            rowClassName={() => \"editable-row\"}\r\n            dataSource={salaryData}\r\n            columns={columns2}\r\n            onChange={this.handleChange}\r\n            pagination={false}\r\n            scroll={{ y: 500 }}\r\n            size={\"small\"}\r\n            bordered\r\n          />\r\n        </div>\r\n        <Row>\r\n          <Col span={1} />\r\n          <Col span={10}>\r\n            <div className=\"ant-layout\">Total</div>\r\n          </Col>\r\n          <Col span={2}>\r\n            <Statistic\r\n              title=\"Primary Total Income\"\r\n              value={this.props.primaryTotalSalary}\r\n            />\r\n          </Col>\r\n          <Col span={6} />\r\n          <Col span={2}>\r\n            <Statistic\r\n              title=\"Spouse Total Income\"\r\n              value={this.props.spouseTotalSalary}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(UPDATE_SALARY, { name: \"updateSalaryMutation\" }),\r\n  graphql(DELETE_SALARY, { name: \"deleteSalaryMutation\" })\r\n)(withApollo(SalaryEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport AddAttributeForm from \"../AddAttributeForm\";\r\nimport \"../../../../../styles/index.css\";\r\nimport { compose, graphql, Query, withApollo } from \"react-apollo\";\r\nimport SalaryEditableTable from \"./SalaryEditableTable\";\r\nimport {CREATE_SALARY} from \"../../../../../graphql/mutation/salary/SalaryMutation\";\r\nimport {USER_MONTEHLY_SALARY} from \"../../../../../graphql/queries/salary/SalaryQuery\";\r\nimport { durationType} from '../../../../common/Duration';\r\nconst { Option } = Select;\r\n\r\n\r\nclass Salary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      salary_type: \"\"\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n    this.setState({ formRef: formRef });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (select, slId) => {\r\n    this.child.handlePrimaryDurationChange(select, slId);\r\n  };\r\n\r\n  handleSpouseDurationChange = (select, slId) => {\r\n    this.child.handleSpouseDurationChange(select, slId);\r\n  };\r\n\r\n  render() {\r\n    const { intialData } = this.state;\r\n    return (\r\n      <div className=\"ant-layout\">\r\n        <Row>\r\n          <Col span={5}>\r\n            <div>\r\n              {\r\n                <Button type=\"primary\" onClick={this.showModal}>\r\n                  Add New Salary Type\r\n                </Button>\r\n              }\r\n              <div>\r\n                <AddAttributeForm\r\n                  wrappedComponentRef={this.saveFormRef}\r\n                  visible={this.state.visible}\r\n                  onCancel={this.handleCancel}\r\n                  onCreate={e => {\r\n                    e.preventDefault();\r\n                    const { form } = this.formRef.props;\r\n                    form.validateFields((err, values) => {\r\n                      this.props.createSalaryMutation({\r\n                        variables: {\r\n                          salary_type_name: values.title,\r\n                          transactionDate:(this.props.currentDate),\r\n                          user_id: this.props.user.email\r\n                        },\r\n                        refetchQueries: [\r\n                          {\r\n                            query: USER_MONTEHLY_SALARY,\r\n                            variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                          }\r\n                        ]\r\n                      });\r\n                      form.resetFields();\r\n                      this.setState({ visible: false });\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Query\r\n          query={USER_MONTEHLY_SALARY}\r\n          variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}}\r\n          notifyOnNetworkStatusChange={true}\r\n          fetchPolicy={\"cache-and-network\"}\r\n        >\r\n          {({ loading, error, data }) => {\r\n            if (loading)\r\n              return (\r\n                <div style={{ align: \"center\" }}>\r\n                  <Icon type=\"loading\" />\r\n                </div>\r\n              );\r\n            if (error) return <div>Error</div>;\r\n            const array1 = [];\r\n            if (data != null) {\r\n              const tempData = data.salaries;\r\n              let primaryTotalSalary = 0;\r\n              let spouseTotalSalary = 0;\r\n              for (let i in tempData) {\r\n                array1.push({\r\n                  key: tempData[i].id,\r\n                  topic: tempData[i].salary_category_id.salary_type_name,\r\n                  salary_category_id: tempData[i].salary_category_id.id,\r\n                  user_id: tempData[i].user_id,\r\n                  primaryduration: (\r\n                    <Select\r\n                      defaultValue={durationType[tempData[i].duration]}\r\n                      onChange={e =>\r\n                        this.handlePrimaryDurationChange(e, tempData[i])\r\n                      }\r\n                      showSearch\r\n                      style={{ width: 100 }}\r\n                      placeholder=\"Select a type\"\r\n                      optionFilterProp=\"children\"\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {durationType.map(duration => (\r\n                        <Option key={duration} value={duration}>\r\n                          {duration}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  ),\r\n                  primaryamount: tempData[i].salary_amount,\r\n\r\n                  spouseduration: (\r\n                    <Select\r\n                      defaultValue={durationType[tempData[i].spouse_duration]}\r\n                      onChange={e =>\r\n                        this.handleSpouseDurationChange(e, tempData[i])\r\n                      }\r\n                      showSearch\r\n                      style={{ width: 100 }}\r\n                      placeholder=\"Select a type\"\r\n                      optionFilterProp=\"children\"\r\n                      filterOption={(input, option) =>\r\n                        option.props.children\r\n                          .toLowerCase()\r\n                          .indexOf(input.toLowerCase()) >= 0\r\n                      }\r\n                    >\r\n                      {durationType.map(duration => (\r\n                        <Option key={duration} value={duration}>\r\n                          {duration}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  ),\r\n                  spouseamount: tempData[i].spouse_salary\r\n                });\r\n                primaryTotalSalary =\r\n                  primaryTotalSalary + tempData[i].salary_amount;\r\n                spouseTotalSalary =\r\n                  spouseTotalSalary + tempData[i].spouse_salary;\r\n              }\r\n              return (\r\n                <SalaryEditableTable\r\n                  startDate={this.props.startDate} endDate={this.props.endDate}\r\n                  salaryData={array1}\r\n                  primaryTotalSalary={primaryTotalSalary}\r\n                  spouseTotalSalary={spouseTotalSalary}\r\n                  onRef={ref => (this.child = ref)}\r\n                  user={this.props.user}\r\n                />\r\n              );\r\n            }\r\n          }}\r\n        </Query>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_SALARY, { name: \"createSalaryMutation\" })\r\n)(withApollo(Salary));","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../../common/EditableTableRow\";\r\nimport {USER_BENEFITS, USER_MONTEHLY_BENEFITS} from \"../../../../../graphql/queries/salary/BenefitsQuery\";\r\nimport {DELETE_BENEFIT, UPDATE_BENEFITS} from \"../../../../../graphql/mutation/salary/BenefitsMutation\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass BenefitsEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteBenefitMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BENEFITS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        //const salaryData = [...this.state.salaryData];\r\n        //this.setState({ salaryData: salaryData.filter(item => item.key !== key) });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updateBenefitMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                salary_amount: parseFloat(row.primaryamount),\r\n                benefit_type: row.benefit_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BENEFITS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateBenefitMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                benefit_type: slId.benefit_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BENEFITS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateBenefitMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                benefit_type: slId.benefit_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_BENEFITS,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_BENEFITS, { name: \"updateBenefitMutation\" }),\r\n    graphql(DELETE_BENEFIT, { name: \"deleteBenefitMutation\" })\r\n)(withApollo(BenefitsEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport BenefitsEditableTable from \"./BenefitsEditableTable\";\r\nimport AddAttributeForm from \"../AddAttributeForm\";\r\nimport { USER_MONTEHLY_BENEFITS} from \"../../../../../graphql/queries/salary/BenefitsQuery\";\r\nimport {CREATE_BENEFITS} from \"../../../../../graphql/mutation/salary/BenefitsMutation\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Benefits extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intialData: [],\r\n      salary_type: \"\"\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n    this.setState({ formRef: formRef });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (select, slId) => {\r\n    this.child.handlePrimaryDurationChange(select, slId);\r\n  };\r\n\r\n  handleSpouseDurationChange = (select, slId) => {\r\n    this.child.handleSpouseDurationChange(select, slId);\r\n  };\r\n\r\n  render() {\r\n    const {intialData}=this.state;\r\n    return (\r\n        <div className=\"ant-layout\">\r\n          <Row>\r\n            <Col span={5}>\r\n              <div>\r\n                {\r\n                  <Button type=\"primary\" onClick={this.showModal}>\r\n                    Add New Benefit Type\r\n                  </Button>\r\n                }\r\n                <div>\r\n                  <AddAttributeForm\r\n                      wrappedComponentRef={this.saveFormRef}\r\n                      visible={this.state.visible}\r\n                      onCancel={this.handleCancel}\r\n                      onCreate={e => {\r\n                        e.preventDefault();\r\n                        const { form } = this.formRef.props;\r\n                        form.validateFields((err, values) => {\r\n                          this.props.createBenifitsMutation({\r\n                            variables: {\r\n                              benfeit_type: values.title,\r\n                              user_id: this.props.user.email,\r\n                              transactionDate:(this.props.currentDate),\r\n                            },\r\n                            refetchQueries: [\r\n                              {\r\n                                query: USER_MONTEHLY_BENEFITS,\r\n                                variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n\r\n                              }\r\n                            ]\r\n                          });\r\n                          form.resetFields();\r\n                          this.setState({ visible: false });\r\n                        });\r\n                      }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Query query={USER_MONTEHLY_BENEFITS} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n            {({ loading, error, data }) => {\r\n              if (loading)\r\n                return (\r\n                    <div style={{ align: \"center\" }}>\r\n                      <Icon type=\"loading\" />\r\n                    </div>\r\n                );\r\n              if (error) return <div>Error</div>;\r\n              const array1 = [];\r\n              if (data != null) {\r\n                const tempData = data.benefitses;\r\n                let primaryTotalSalary = 0;\r\n                let spouseTotalSalary = 0;\r\n                for (let i in tempData) {\r\n                  array1.push({\r\n                    key: tempData[i].id,\r\n                    topic: tempData[i].benefit_type.benefit_type,\r\n                    benefit_type_id: tempData[i].benefit_type.id,\r\n                    user_id: tempData[i].user_id,\r\n                    primaryduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].duration]}\r\n                            onChange={e =>\r\n                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    primaryamount: tempData[i].salary_amount,\r\n\r\n                    spouseduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                            onChange={e =>\r\n                                this.handleSpouseDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    spouseamount: tempData[i].spouse_amount\r\n                  });\r\n                  primaryTotalSalary =\r\n                      primaryTotalSalary + tempData[i].salary_amount;\r\n                  spouseTotalSalary =\r\n                      spouseTotalSalary + tempData[i].spouse_amount;\r\n                }\r\n                return (\r\n                    <BenefitsEditableTable\r\n                        startDate={this.props.startDate} endDate={this.props.endDate}\r\n                        salaryData={array1}\r\n                        primaryTotalSalary={primaryTotalSalary}\r\n                        spouseTotalSalary={spouseTotalSalary}\r\n                        onRef={ref => (this.child = ref)}\r\n                        user={this.props.user}\r\n                    />\r\n                );\r\n              }\r\n            }}\r\n          </Query>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_BENEFITS, { name: \"createBenifitsMutation\" })\r\n)(withApollo(Benefits));","import gql from \"graphql-tag\";\r\nexport const CREATE_PRETAXDEUCTION = gql`\r\n    mutation createPreTaxAmount($user_id: String!, $pre_tax_type: String!,$transactionDate:DateTime!) {\r\n        createPreTaxAmount(\r\n            data: {\r\n                user_id: $user_id\r\n                pre_tax_type: {\r\n                    create: { pre_tax_type: $pre_tax_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                pre_tax_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_PRETAXDEUCTIO = gql`\r\n    mutation updatePreTaxAmount(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $pre_tax_amount: Float\r\n        $pre_tax_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updatePreTaxAmount(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                pre_tax_amount: $pre_tax_amount\r\n                pre_tax_type: $pre_tax_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_PRETAXDEUCTIO = gql`\r\n    mutation deletePreTaxAmount($id: ID!) {\r\n        deletePreTaxAmount(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const USER_PRETAXDEDUCTION = gql`\r\n    query getAllPreTaxAmount {\r\n        preTaxAmounts {\r\n            id\r\n            user_id\r\n            duration\r\n            pre_tax_amount\r\n            pre_tax_type {\r\n                id\r\n                pre_tax_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const USER_MONTEHLY_PRETAXDEDUCTION=gql`\r\n    query getAllPreTaxAmount($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        preTaxAmounts(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            pre_tax_amount\r\n            pre_tax_type {\r\n                id\r\n                pre_tax_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../../common/EditableTableRow\";\r\nimport {DELETE_PRETAXDEUCTIO, UPDATE_PRETAXDEUCTIO} from \"../../../../../graphql/mutation/pretax/PreTaxMutation\";\r\nimport {USER_PRETAXDEDUCTION} from \"../../../../../graphql/queries/pretax/PreTaxQuery\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass PreTaxDeductionEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deletePreTaxDeductionMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_PRETAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updatePreTaxDeductionMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                pre_tax_amount: parseFloat(row.primaryamount),\r\n                pre_tax_type: row.pre_tax_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_PRETAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updatePreTaxDeductionMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                pre_tax_type: slId.pre_tax_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_PRETAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updatePreTaxDeductionMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                pre_tax_type: slId.pre_tax_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_PRETAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_PRETAXDEUCTIO, { name: \"updatePreTaxDeductionMutation\" }),\r\n    graphql(DELETE_PRETAXDEUCTIO, { name: \"deletePreTaxDeductionMutation\" })\r\n)(withApollo(PreTaxDeductionEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../AddAttributeForm\";\r\nimport PreTaxDeductionEditableTable from \"./PreTaxDeductionEditableTable\";\r\nimport {USER_MONTEHLY_PRETAXDEDUCTION, USER_PRETAXDEDUCTION} from \"../../../../../graphql/queries/pretax/PreTaxQuery\";\r\nimport {CREATE_PRETAXDEUCTION} from \"../../../../../graphql/mutation/pretax/PreTaxMutation\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass PreTaxDeduction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intialData: [],\r\n      salary_type: \"\"\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n    this.setState({ formRef: formRef });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (select, slId) => {\r\n    this.child.handlePrimaryDurationChange(select, slId);\r\n  };\r\n\r\n  handleSpouseDurationChange = (select, slId) => {\r\n    this.child.handleSpouseDurationChange(select, slId);\r\n  };\r\n\r\n  render() {\r\n    const {intialData}=this.state;\r\n    return (\r\n        <div className=\"ant-layout\">\r\n          <Row>\r\n            <Col span={5}>\r\n              <div>\r\n                {\r\n                  <Button type=\"primary\" onClick={this.showModal}>\r\n                    Add New PRE TAX DEDUCTION Type\r\n                  </Button>\r\n                }\r\n                <div>\r\n                  <AddAttributeForm\r\n                      wrappedComponentRef={this.saveFormRef}\r\n                      visible={this.state.visible}\r\n                      onCancel={this.handleCancel}\r\n                      onCreate={e => {\r\n                        e.preventDefault();\r\n                        const { form } = this.formRef.props;\r\n                        form.validateFields((err, values) => {\r\n                          this.props.createPreTaxDeductionMutation({\r\n                            variables: {\r\n                              pre_tax_type: values.title,\r\n                              user_id: this.props.user.email,\r\n                              transactionDate:(this.props.currentDate),\r\n                            },\r\n                            refetchQueries: [\r\n                              {\r\n                                query: USER_MONTEHLY_PRETAXDEDUCTION,\r\n                                variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                              }\r\n                            ]\r\n                          });\r\n                          form.resetFields();\r\n                          this.setState({ visible: false });\r\n                        });\r\n                      }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Query query={USER_MONTEHLY_PRETAXDEDUCTION} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n            {({ loading, error, data }) => {\r\n              if (loading)\r\n                return (\r\n                    <div style={{ align: \"center\" }}>\r\n                      <Icon type=\"loading\" />\r\n                    </div>\r\n                );\r\n              if (error) return <div>Error</div>;\r\n              const array1 = [];\r\n              if (data != null) {\r\n                const tempData = data.preTaxAmounts;\r\n                let primaryTotalSalary = 0;\r\n                let spouseTotalSalary = 0;\r\n                for (let i in tempData) {\r\n                  array1.push({\r\n                    key: tempData[i].id,\r\n                    topic: tempData[i].pre_tax_type.pre_tax_type,\r\n                    pre_tax_type_id: tempData[i].pre_tax_type.id,\r\n                    user_id: tempData[i].user_id,\r\n                    primaryduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].duration]}\r\n                            onChange={e =>\r\n                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    primaryamount: tempData[i].pre_tax_amount,\r\n\r\n                    spouseduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                            onChange={e =>\r\n                                this.handleSpouseDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    spouseamount: tempData[i].spouse_amount\r\n                  });\r\n                  primaryTotalSalary =\r\n                      primaryTotalSalary + tempData[i].pre_tax_amount;\r\n                  spouseTotalSalary =\r\n                      spouseTotalSalary + tempData[i].spouse_amount;\r\n                }\r\n                return (\r\n                    <PreTaxDeductionEditableTable\r\n                        startDate={this.props.startDate} endDate={this.props.endDate}\r\n                        salaryData={array1}\r\n                        primaryTotalSalary={primaryTotalSalary}\r\n                        spouseTotalSalary={spouseTotalSalary}\r\n                        onRef={ref => (this.child = ref)}\r\n                        user={this.props.user}\r\n                    />\r\n                );\r\n              }\r\n            }}\r\n          </Query>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_PRETAXDEUCTION, { name: \"createPreTaxDeductionMutation\" })\r\n)(withApollo(PreTaxDeduction));","import gql from \"graphql-tag\";\r\nexport const CREATE_TAX = gql`\r\n    mutation createTaxesAmount($user_id: String!, $tax_type: String!,$transactionDate:DateTime!) {\r\n        createTaxesAmount(\r\n            data: {\r\n                user_id: $user_id\r\n                tax_type: {\r\n                    create: { tax_type: $tax_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                tax_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_TAX = gql`\r\n    mutation updateTaxesAmount(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $tax_amount: Float\r\n        $tax_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updateTaxesAmount(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                tax_amount: $tax_amount\r\n                tax_type: $tax_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_TAX = gql`\r\n    mutation deleteTaxesAmount($id: ID!) {\r\n        deleteTaxesAmount(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const USER_TAXES = gql`\r\n    query getAllTaxAmounts {\r\n        taxesAmounts {\r\n            id\r\n            user_id\r\n            duration\r\n            tax_amount\r\n            tax_type {\r\n                id\r\n                tax_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USER_MONTEHLY_TAXES=gql`\r\n    query getAllTaxAmounts($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        taxesAmounts(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            tax_amount\r\n            tax_type {\r\n                id\r\n                tax_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../../common/EditableTableRow\";\r\nimport {DELETE_TAX, UPDATE_TAX} from \"../../../../../graphql/mutation/tax/TaxMutation\";\r\nimport {USER_MONTEHLY_TAXES, USER_TAXES} from \"../../../../../graphql/queries/tax/TaxQuery\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass TaxesEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deleteTaxMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_TAXES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updateTaxMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                tax_amount: parseFloat(row.primaryamount),\r\n                tax_type: row.tax_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_TAXES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateTaxMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                tax_type: slId.tax_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_TAXES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updateTaxMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                tax_type: slId.tax_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_TAXES,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_TAX, { name: \"updateTaxMutation\" }),\r\n    graphql(DELETE_TAX, { name: \"deleteTaxMutation\" })\r\n)(withApollo(TaxesEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../AddAttributeForm\";\r\nimport TaxesEditableTable from \"./TaxesEditableTable\";\r\nimport {CREATE_TAX} from \"../../../../../graphql/mutation/tax/TaxMutation\";\r\nimport {USER_MONTEHLY_TAXES, USER_TAXES} from \"../../../../../graphql/queries/tax/TaxQuery\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Taxes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intialData: [],\r\n      salary_type: \"\"\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n    this.setState({ formRef: formRef });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (select, slId) => {\r\n    this.child.handlePrimaryDurationChange(select, slId);\r\n  };\r\n\r\n  handleSpouseDurationChange = (select, slId) => {\r\n    this.child.handleSpouseDurationChange(select, slId);\r\n  };\r\n\r\n  render() {\r\n    const {intialData}=this.state;\r\n    return (\r\n        <div className=\"ant-layout\">\r\n          <Row>\r\n            <Col span={5}>\r\n              <div>\r\n                {\r\n                  <Button type=\"primary\" onClick={this.showModal}>\r\n                    Add New TAX Type\r\n                  </Button>\r\n                }\r\n                <div>\r\n                  <AddAttributeForm\r\n                      wrappedComponentRef={this.saveFormRef}\r\n                      visible={this.state.visible}\r\n                      onCancel={this.handleCancel}\r\n                      onCreate={e => {\r\n                        e.preventDefault();\r\n                        const { form } = this.formRef.props;\r\n                        form.validateFields((err, values) => {\r\n                          this.props.createTaxMutation({\r\n                            variables: {\r\n                              tax_type: values.title,\r\n                              transactionDate:(this.props.currentDate),\r\n                              user_id: this.props.user.email\r\n                            },\r\n                            refetchQueries: [\r\n                              {\r\n                                query: USER_MONTEHLY_TAXES,\r\n                                variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                              }\r\n                            ]\r\n                          });\r\n                          form.resetFields();\r\n                          this.setState({ visible: false });\r\n                        });\r\n                      }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Query query={USER_MONTEHLY_TAXES} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n            {({ loading, error, data }) => {\r\n              if (loading)\r\n                return (\r\n                    <div style={{ align: \"center\" }}>\r\n                      <Icon type=\"loading\" />\r\n                    </div>\r\n                );\r\n              if (error) return <div>Error</div>;\r\n              const array1 = [];\r\n              if (data != null) {\r\n                const tempData = data.taxesAmounts;\r\n                let primaryTotalSalary = 0;\r\n                let spouseTotalSalary = 0;\r\n                for (let i in tempData) {\r\n                  array1.push({\r\n                    key: tempData[i].id,\r\n                    topic: tempData[i].tax_type.tax_type,\r\n                    tax_type_id: tempData[i].tax_type.id,\r\n                    user_id: tempData[i].user_id,\r\n                    primaryduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].duration]}\r\n                            onChange={e =>\r\n                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    primaryamount: tempData[i].tax_amount,\r\n\r\n                    spouseduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                            onChange={e =>\r\n                                this.handleSpouseDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    spouseamount: tempData[i].spouse_amount\r\n                  });\r\n                  primaryTotalSalary =\r\n                      primaryTotalSalary + tempData[i].tax_amount;\r\n                  spouseTotalSalary =\r\n                      spouseTotalSalary + tempData[i].spouse_amount;\r\n                }\r\n                return (\r\n                    <TaxesEditableTable\r\n                        startDate={this.props.startDate} endDate={this.props.endDate}\r\n                        salaryData={array1}\r\n                        primaryTotalSalary={primaryTotalSalary}\r\n                        spouseTotalSalary={spouseTotalSalary}\r\n                        onRef={ref => (this.child = ref)}\r\n                        user={this.props.user}\r\n                    />\r\n                );\r\n              }\r\n            }}\r\n          </Query>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_TAX, { name: \"createTaxMutation\" })\r\n)(withApollo(Taxes));","import gql from \"graphql-tag\";\r\nexport const CREATE_POSTTAXDEUCTION = gql`\r\n    mutation createPostTaxAmount($user_id: String!, $post_tax_type: String!,$transactionDate:DateTime!) {\r\n        createPostTaxAmount(\r\n            data: {\r\n                user_id: $user_id\r\n                post_tax_type: {\r\n                    create: { post_tax_type: $post_tax_type, status: ACTIVE }\r\n                }\r\n                duration: 0\r\n                post_tax_amount: 0\r\n                spouse_amount: 0\r\n                spouse_duration:0\r\n                transactionDate:$transactionDate\r\n            }\r\n        ) {\r\n            id\r\n            user_id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const UPDATE_POSTTAXDEUCTIO = gql`\r\n    mutation updatePostTaxAmount(\r\n        $id: ID!\r\n        $user_id: String!\r\n        $duration: Int\r\n        $post_tax_amount: Float\r\n        $post_tax_type: ID!\r\n        $spouse_amount: Float\r\n        $spouse_duration: Int\r\n    ) {\r\n        updatePostTaxAmount(\r\n            where: { id: $id }\r\n            data: {\r\n                user_id: $user_id\r\n                duration: $duration\r\n                post_tax_amount: $post_tax_amount\r\n                post_tax_type: $post_tax_type\r\n                spouse_amount: $spouse_amount\r\n                spouse_duration: $spouse_duration\r\n            }\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const DELETE_POSTTAXDEUCTIO = gql`\r\n    mutation deletePostTaxAmount($id: ID!) {\r\n        deletePostTaxAmount(where: { id: $id }) {\r\n            id\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\nexport const USER_POSTTAXDEDUCTION = gql`\r\n    query getAllPostTaxAmounts {\r\n        postTaxAmounts {\r\n            id\r\n            user_id\r\n            duration\r\n            post_tax_amount\r\n            post_tax_type {\r\n                id\r\n                post_tax_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;\r\n\r\nexport const USER_MONTEHLY_POSTTAXDEDUCTION=gql`\r\n    query getAllPostTaxAmounts($user_id:String!,$tranaction_start_date:DateTime!,$transaction_end_date:DateTime!){\r\n        postTaxAmounts(where: {user_id:$user_id,transactionDate_gte: $tranaction_start_date, transactionDate_lte:$transaction_end_date}){\r\n            id\r\n            user_id\r\n            duration\r\n            post_tax_amount\r\n            post_tax_type {\r\n                id\r\n                post_tax_type\r\n                status\r\n            }\r\n            spouse_amount\r\n            spouse_duration\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col\r\n} from \"antd\";\r\nimport \"../css/Editabletable.css\";\r\nimport { compose, Mutation, withApollo, graphql } from \"react-apollo\";\r\nimport EditableFormRow from \"../../../../common/EditableFormRow\";\r\nimport EditableCell from \"../../../../common/EditableTableRow\";\r\nimport {DELETE_POSTTAXDEUCTIO, UPDATE_POSTTAXDEUCTIO} from \"../../../../../graphql/mutation/posttax/PostTaxMutation\";\r\nimport {\r\n    USER_MONTEHLY_POSTTAXDEDUCTION,\r\n    USER_POSTTAXDEDUCTION\r\n} from \"../../../../../graphql/queries/posttax/PostTaxQuery\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass PostTaxDeductionEditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n            salaryData: [],\r\n            primaryTotalSalary: 0,\r\n            spouseTotalSalary: 0,\r\n            count: 2\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this);\r\n        this.setState({ salaryData: this.props.salaryData });\r\n    }\r\n\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n            const nextColumns = [...columns];\r\n            nextColumns[index] = {\r\n                ...nextColumns[index],\r\n                width: size.width\r\n            };\r\n            return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter\r\n        });\r\n    };\r\n\r\n    handleDelete = key => {\r\n        this.props.deletePostTaxDeductionMutation({\r\n            variables: {\r\n                id: key\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_POSTTAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSave = row => {\r\n        const newData = [...this.state.salaryData];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n            ...item,\r\n            ...row\r\n        });\r\n        let primaryDuration = durationType.findIndex(\r\n            item => row.primaryduration.props.defaultValue === item\r\n        );\r\n        let spouseDuration = durationType.findIndex(\r\n            item => row.spouseduration.props.defaultValue === item\r\n        );\r\n        this.props.updatePostTaxDeductionMutation({\r\n            variables: {\r\n                user_id: row.user_id,\r\n                duration: primaryDuration,\r\n                post_tax_amount: parseFloat(row.primaryamount),\r\n                post_tax_type: row.post_tax_type_id,\r\n                id: row.key,\r\n                spouse_amount: parseFloat(row.spouseamount),\r\n                spouse_duration: spouseDuration\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_POSTTAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n        this.setState({ salaryData: newData });\r\n    };\r\n\r\n    handlePrimaryDurationChange = (value, slId) => {\r\n        let primaryDuration = durationType.findIndex(item => value === item);\r\n        this.props.updatePostTaxDeductionMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                duration: primaryDuration,\r\n                post_tax_type: slId.post_tax_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_POSTTAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleSpouseDurationChange = (value, slId) => {\r\n        let spouseDuration = durationType.findIndex(item => value === item);\r\n        this.props.updatePostTaxDeductionMutation({\r\n            variables: {\r\n                user_id: slId.user_id,\r\n                spouse_duration: spouseDuration,\r\n                post_tax_type: slId.post_tax_type.id,\r\n                id: slId.id\r\n            },\r\n            refetchQueries: [\r\n                {\r\n                    query: USER_MONTEHLY_POSTTAXDEDUCTION,\r\n                    variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        this.setState({salaryData:newProps.salaryData});\r\n    }\r\n\r\n    render() {\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        const {salaryData}=this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: <div style={{}}>{\"Title\"}</div>,\r\n                dataIndex: \"topic\",\r\n                key: \"topic\",\r\n                editable: false,\r\n                render: text => <a>{text}</a>,\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === \"name\" && sortedInfo.order,\r\n                width: 400\r\n            },\r\n            {\r\n                title: \"primary duration\",\r\n                dataIndex: \"primaryduration\",\r\n                key: \"primaryduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.primaryduration - b.primaryduration,\r\n                sortOrder:\r\n                    sortedInfo.columnKey === \"primaryduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"primary amount\",\r\n                dataIndex: \"primaryamount\",\r\n                key: \"primaryamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.primaryamount.includes(value),\r\n                sorter: (a, b) => a.primaryamount - b.primaryamount,\r\n                sortOrder: sortedInfo.columnKey === \"primaryamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"spouse duration\",\r\n                dataIndex: \"spouseduration\",\r\n                key: \"spouseduration\",\r\n                editable: false,\r\n                sorter: (a, b) => a.spouseduration - b.spouseduration,\r\n                sortOrder: sortedInfo.columnKey === \"spouseduration\" && sortedInfo.order\r\n            },\r\n            {\r\n                title: \"spouse amount\",\r\n                dataIndex: \"spouseamount\",\r\n                key: \"spouseamount\",\r\n                editable: true,\r\n                filteredValue: filteredInfo.address || null,\r\n                onFilter: (value, record) => record.spouseamount.includes(value),\r\n                sorter: (a, b) => a.spouseamount - b.spouseamount,\r\n                sortOrder: sortedInfo.columnKey === \"spouseamount\" && sortedInfo.order,\r\n                width: 250\r\n            },\r\n            {\r\n                title: \"operation\",\r\n                dataIndex: \"operation\",\r\n                render: (text, record) =>\r\n                    this.state.salaryData.length >= 1 ? (\r\n                        <Popconfirm\r\n                            title=\"Sure to delete?\"\r\n                            onConfirm={() => this.handleDelete(record.key)}\r\n                        >\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n                width: 150\r\n            }\r\n        ];\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell\r\n            },\r\n            header: {}\r\n        };\r\n        const columns1 = columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave\r\n                })\r\n            };\r\n        });\r\n\r\n        const columns2 = columns1.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n                width: column.width,\r\n                onResize: this.handleResize(index)\r\n            })\r\n        }));\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"App\">\r\n                    <Table\r\n                        className=\"ant-table-content\"\r\n                        components={components}\r\n                        rowClassName={() => \"editable-row\"}\r\n                        dataSource={salaryData}\r\n                        columns={columns2}\r\n                        onChange={this.handleChange}\r\n                        pagination={false}\r\n                        scroll={{ y: 500 }}\r\n                        size={\"small\"}\r\n                        bordered\r\n                    />\r\n                </div>\r\n                <Row>\r\n                    <Col span={1} />\r\n                    <Col span={10}>\r\n                        <div className=\"ant-layout\">Total</div>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Primary Total Income\"\r\n                            value={this.props.primaryTotalSalary}\r\n                        />\r\n                    </Col>\r\n                    <Col span={6} />\r\n                    <Col span={2}>\r\n                        <Statistic\r\n                            title=\"Spouse Total Income\"\r\n                            value={this.props.spouseTotalSalary}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(UPDATE_POSTTAXDEUCTIO, { name: \"updatePostTaxDeductionMutation\" }),\r\n    graphql(DELETE_POSTTAXDEUCTIO, { name: \"deletePostTaxDeductionMutation\" })\r\n)(withApollo(PostTaxDeductionEditableTable));\r\n","import React from \"react\";\r\nimport { Button, Col, Icon, Row, Select } from \"antd\";\r\nimport \"../../../../../styles/index.css\";\r\nimport {compose, graphql, Mutation, Query, withApollo} from \"react-apollo\";\r\nimport AddAttributeForm from \"../AddAttributeForm\";\r\nimport PostTaxDeductionEditableTable from \"./PostTaxDeductionEditableTable\";\r\nimport {CREATE_POSTTAXDEUCTION} from \"../../../../../graphql/mutation/posttax/PostTaxMutation\";\r\nimport {\r\n  USER_MONTEHLY_POSTTAXDEDUCTION,\r\n  USER_POSTTAXDEDUCTION\r\n} from \"../../../../../graphql/queries/posttax/PostTaxQuery\";\r\nimport {durationType} from \"../../../../common/Duration\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass PostTaxDeduction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intialData: [],\r\n      salary_type: \"\"\r\n    };\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n    this.setState({ formRef: formRef });\r\n  };\r\n\r\n  handlePrimaryDurationChange = (select, slId) => {\r\n    this.child.handlePrimaryDurationChange(select, slId);\r\n  };\r\n\r\n  handleSpouseDurationChange = (select, slId) => {\r\n    this.child.handleSpouseDurationChange(select, slId);\r\n  };\r\n\r\n  render() {\r\n    const {intialData}=this.state;\r\n    return (\r\n        <div className=\"ant-layout\">\r\n          <Row>\r\n            <Col span={5}>\r\n              <div>\r\n                {\r\n                  <Button type=\"primary\" onClick={this.showModal}>\r\n                    Add New POST TAX DEDUCTION Type\r\n                  </Button>\r\n                }\r\n                <div>\r\n                  <AddAttributeForm\r\n                      wrappedComponentRef={this.saveFormRef}\r\n                      visible={this.state.visible}\r\n                      onCancel={this.handleCancel}\r\n                      onCreate={e => {\r\n                        e.preventDefault();\r\n                        const { form } = this.formRef.props;\r\n                        form.validateFields((err, values) => {\r\n                          this.props.createPostTaxDeductionMutation({\r\n                            variables: {\r\n                              post_tax_type: values.title,\r\n                              transactionDate:(this.props.currentDate),\r\n                              user_id: this.props.user.email\r\n                            },\r\n                            refetchQueries: [\r\n                              {\r\n                                query: USER_MONTEHLY_POSTTAXDEDUCTION,\r\n                                variables:{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}\r\n                              }\r\n                            ]\r\n                          });\r\n                          form.resetFields();\r\n                          this.setState({ visible: false });\r\n                        });\r\n                      }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Query query={USER_MONTEHLY_POSTTAXDEDUCTION} variables={{user_id: this.props.user.email,tranaction_start_date:this.props.startDate,transaction_end_date:this.props.endDate}} notifyOnNetworkStatusChange={true} fetchPolicy={\"cache-and-network\"}>\r\n            {({ loading, error, data }) => {\r\n              if (loading)\r\n                return (\r\n                    <div style={{ align: \"center\" }}>\r\n                      <Icon type=\"loading\" />\r\n                    </div>\r\n                );\r\n              if (error) return <div>Error</div>;\r\n              const array1 = [];\r\n              if (data != null) {\r\n                const tempData = data.postTaxAmounts;\r\n                let primaryTotalSalary = 0;\r\n                let spouseTotalSalary = 0;\r\n                for (let i in tempData) {\r\n                  array1.push({\r\n                    key: tempData[i].id,\r\n                    topic: tempData[i].post_tax_type.post_tax_type,\r\n                    post_tax_type_id: tempData[i].post_tax_type.id,\r\n                    user_id: tempData[i].user_id,\r\n                    primaryduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].duration]}\r\n                            onChange={e =>\r\n                                this.handlePrimaryDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    primaryamount: tempData[i].post_tax_amount,\r\n\r\n                    spouseduration: (\r\n                        <Select\r\n                            defaultValue={durationType[tempData[i].spouse_duration]}\r\n                            onChange={e =>\r\n                                this.handleSpouseDurationChange(e, tempData[i])\r\n                            }\r\n                            showSearch\r\n                            style={{ width: 100 }}\r\n                            placeholder=\"Select a type\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.props.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                          {durationType.map(duration => (\r\n                              <Option key={duration} value={duration}>\r\n                                {duration}\r\n                              </Option>\r\n                          ))}\r\n                        </Select>\r\n                    ),\r\n                    spouseamount: tempData[i].spouse_amount\r\n                  });\r\n                  primaryTotalSalary =\r\n                      primaryTotalSalary + tempData[i].post_tax_amount;\r\n                  spouseTotalSalary =\r\n                      spouseTotalSalary + tempData[i].spouse_amount;\r\n                }\r\n                return (\r\n                    <PostTaxDeductionEditableTable\r\n                        startDate={this.props.startDate} endDate={this.props.endDate}\r\n                        salaryData={array1}\r\n                        primaryTotalSalary={primaryTotalSalary}\r\n                        spouseTotalSalary={spouseTotalSalary}\r\n                        onRef={ref => (this.child = ref)}\r\n                        user={this.props.user}\r\n                    />\r\n                );\r\n              }\r\n            }}\r\n          </Query>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n    graphql(CREATE_POSTTAXDEUCTION, { name: \"createPostTaxDeductionMutation\" })\r\n)(withApollo(PostTaxDeduction));","import React from \"react\";\r\nimport \"../../budget/css/skeleton.css\";\r\nimport StepZilla from \"react-stepzilla\";\r\nimport \"../../../styles/index.css\";\r\nimport {Col, DatePicker, Row} from \"antd\";\r\nimport moment from \"moment\";\r\nimport Salary from \"./manualfntryforms/salary/Salary\";\r\nimport Benefits from \"./manualfntryforms/benefits/Benefits\";\r\nimport PreTaxDeduction from \"./manualfntryforms/pretax/PreTaxDeduction\";\r\nimport Taxes from \"./manualfntryforms/tax/Taxes\";\r\nimport PostTaxDeductions from \"./manualfntryforms/posttax/PostTaxDeductions\";\r\nconst { MonthPicker} = DatePicker;\r\nconst monthFormat = 'YYYY/MMMM';\r\nconst selectedDate = new moment();\r\nconst startDate = moment([selectedDate._d.getFullYear(), selectedDate._d.getMonth() , 1]).format(\"YYYY-MM-DD\");\r\nconst daysInMonth = moment(startDate).daysInMonth();\r\nconst endDate = moment(startDate).add(daysInMonth - 1, 'days').format(\"YYYY-MM-DD\");\r\n\r\nclass ManualPayEntry extends React.Component {\r\n  state = {\r\n    readyForSubmit: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      startDate:startDate,\r\n      endDate:endDate,\r\n      currentDate:selectedDate\r\n    };\r\n   }\r\n\r\n\r\n  onChange=(date, dateString, abc)=>{\r\n    const startDate = moment([date._d.getFullYear(), date._d.getMonth() , 1]).format(\"YYYY-MM-DD\");\r\n    const daysInMonth = moment(startDate).daysInMonth();\r\n    const endDate = moment(startDate).add(daysInMonth - 1, 'days').format(\"YYYY-MM-DD\");\r\n    const transactionDate=moment(endDate).subtract(1,\"day\").format(\"YYYY-MM-DD\");\r\n    this.setState({startDate:startDate});\r\n    this.setState({endDate:endDate});\r\n    this.setState({currentDate:transactionDate})\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    console.log(this.props.user)\r\n    return (\r\n\r\n        <div className='step-progress'>\r\n          <Row>\r\n            <Col span={5}>\r\n              <div className=\"App\">\r\n                <MonthPicker defaultValue={moment(selectedDate, monthFormat)} format={monthFormat}  placeholder=\"Select Month\"  onChange={(date, dateString) => this.onChange(date, dateString, 1)}/>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <StepZilla  steps={[\r\n            {name: 'Salary', component: <Salary currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n            {name: 'Benefits', component: <Benefits currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n            {name: 'Pre Tax Deduction', component: <PreTaxDeduction currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>},\r\n            {name: 'Taxes', component: <Taxes currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate}/>},\r\n            {name: 'Post Tax Deductions', component: <PostTaxDeductions currentDate={this.state.currentDate} startDate={this.state.startDate} endDate={this.state.endDate} user={this.props.user}/>}\r\n          ]}\r\n                      nextButtonCls=\"multiStepButton\"\r\n                      backButtonCls=\"multiStepButton\" />\r\n        </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ManualPayEntry;","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../../../styles/index.css\";\r\nimport { Upload, Icon,  Form, Button } from \"antd\";\r\n\r\nconst UPLOAD_MUTATION = gql`\r\n  mutation submit($file: Upload!) {\r\n    singleUpload(file: $file) {\r\n      filename,\r\n      mimetype,\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nclass ScanPDF extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file]\r\n        }));\r\n        return false;\r\n      },\r\n      fileList\r\n    };\r\n\r\n    return (\r\n      <div className=\"ant-layout\">\r\n        <Form.Item label=\"Dragger\">\r\n          <Upload.Dragger name=\"files\" {...props} >\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <Icon type=\"inbox\" />\r\n            </p>\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n         </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Mutation mutation={UPLOAD_MUTATION}>\r\n            {mutation => (\r\n              <Button\r\n                type=\"primary\"\r\n                disabled={fileList.length === 0}\r\n                loading={uploading}\r\n                style={{ marginTop: 16 }}\r\n                onClick={e => {\r\n                  console.log(\"New file\", this.state.fileList[0]);\r\n                  const file = this.state.fileList[0];\r\n                  mutation({\r\n                    variables: {\r\n                      file\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                {uploading ? \"Uploading\" : \"Start Upload\"}\r\n              </Button>\r\n            )}\r\n          </Mutation>\r\n        </Form.Item>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//const ScanPDF = Form.create({ name: 'validate_other' })(ScanPDF);\r\n\r\nexport default Form.create({ name: \"validate_other\" })(ScanPDF);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Icon, Menu, Button } from \"antd\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nimport {\r\n    HashRouter as Router,\r\n    NavLink,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport ManualPayEntry from \"./manual/ManualPayEntry\";\r\nimport ScanPDF from \"./scanpdf/ScanPDF\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\nimport BudgetPlannerEntry from \"../budget/budgetplanner/BudgetPlannerEntry\";\r\nconst { Content, Sider} = Layout;\r\n\r\nconst PayStubSideBar = props => {\r\n    const [collapsed, onCollapse] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch({\r\n                type: CURRENT_COMPONENT,\r\n                payload: { component: \"paystub\", sideBarMenuKey: \"paystub\" }\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    {\r\n        return (\r\n            <Layout className=\"app\">\r\n                <HeaderRes user={props.user}/>\r\n                <Content className=\"content\">\r\n                    <Router>\r\n                        <Layout style={{ padding: \"0px 0px\" }}>\r\n                            <Sider\r\n                                style={{ padding: \"0px 0px\" }}\r\n                                id=\"sider-menu\"\r\n                                trigger={null}\r\n                                collapsible\r\n                                collapsed={collapsed}\r\n                                breakpoint=\"lg\"\r\n                                onBreakpoint={broken => {\r\n                                    // this.toggleCollapsed();\r\n                                }}\r\n                                onCollapse={onCollapse}\r\n                                width=\"270\"\r\n                            >\r\n                                <div style={{ padding: \"0px 0px\" }}>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        onClick={() => onCollapse(!collapsed)}\r\n                                        style={{ marginBottom: 16 }}\r\n                                    >\r\n                                        {<Icon type={collapsed ? \"menu-unfold\" : \"menu-fold\"} />}\r\n                                    </Button>\r\n                                    <Menu\r\n                                        defaultSelectedKeys={[\"manualentry\"]}\r\n                                        mode=\"inline\"\r\n                                        theme=\"dark\"\r\n                                        inlineCollapsed={collapsed}\r\n                                        style={{ padding: \"0px 0px\" }}\r\n                                    >\r\n\r\n                                        <SubMenu\r\n                                            key=\"pay\"\r\n                                            title={\r\n                                                <span>\r\n                      <Icon type=\"gold\" />\r\n                      <span>Pay Stubs</span>\r\n                    </span>\r\n                                            }\r\n                                        >\r\n                                            <Menu.Item key=\"autoscan\">\r\n                                                <NavLink to=\"/paystub/autoscanpdf\">\r\n                                                    <span>Auto Scan</span>\r\n                                                </NavLink>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"manualentry\">\r\n                                                <NavLink to=\"/paystub/manualentry\">\r\n                                                    <span>Manual Entry</span>\r\n                                                </NavLink>\r\n                                            </Menu.Item>\r\n                                        </SubMenu>\r\n\r\n\r\n                                    </Menu>\r\n                                </div>\r\n                            </Sider>\r\n                            <Content className=\"content\" style={{ margin: \"0px 0px 0\" }}>\r\n                                <Route path=\"/paystub/autoscanpdf\" component={ScanPDF}/>\r\n                                <Route\r\n                                    path=\"/paystub/manualentry\"\r\n                                    component={() => <ManualPayEntry user={props.user} />}\r\n                                />\r\n                             </Content>\r\n                        </Layout>\r\n                    </Router>\r\n                </Content>\r\n                <BudgetFooter/>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\nexport  default PayStubSideBar;\r\n","import React, { useEffect, useState} from \"react\";\r\nimport {Layout, Icon, Menu, Button} from \"antd\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\n\r\n\r\n\r\nconst { Content, Sider, Footer } = Layout;\r\nconst AdviceSideBar = props => {\r\n\r\n  const [collapsed, onCollapse] = useState(false);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(\r\n    () => {\r\n      dispatch({\r\n        type: CURRENT_COMPONENT,\r\n        payload: { component: \"advice\", sideBarMenuKey: \"advice\" }\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Layout className=\"app\">\r\n      <HeaderRes user={props.user}/>\r\n      <Content style={{ padding: \"0px 0px\" }}>\r\n        <Layout style={{ padding: \"0px 0px\" }}>\r\n          <Sider\r\n            style={{ padding: \"0px 0px\", border: 10 }}\r\n            id=\"sider-menu\"\r\n            trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            breakpoint=\"lg\"\r\n            onBreakpoint={broken => {\r\n\r\n            }}\r\n            onCollapse={onCollapse}\r\n            width=\"270\"\r\n          >\r\n            <div style={{ padding: \"0px 0px\" }}>\r\n              <Button\r\n                  type=\"primary\"\r\n                  style={{ marginBottom: 16 }}\r\n                  onClick={() => onCollapse(!collapsed)}\r\n              >\r\n                {<Icon type={collapsed ? 'menu-unfold' : 'menu-fold'}  />}\r\n              </Button>\r\n              <Menu\r\n                defaultSelectedKeys={[\"debtngmt\"]}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                inlineCollapsed={collapsed}\r\n                style={{ padding: \"0px 0px\" }}\r\n              >\r\n                <Menu.Item key=\"debtngmt\">\r\n                  <Icon type=\"dollar\" />\r\n                  <span>Debt Mgmt</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"rp\">\r\n                  <Icon type=\"user\" />\r\n                  <span>Retirement Planning</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"kids\">\r\n                  <Icon type=\"smile\" theme=\"outlined\" />\r\n                  <span>Kids</span>\r\n                </Menu.Item>\r\n                <SubMenu\r\n                  key=\"cp\"\r\n                  title={\r\n                    <span>\r\n                     <Icon type=\"trophy\" />\r\n                      <span>College Planning</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key=\"529\">529</Menu.Item>\r\n                  <Menu.Item key=\"sl\">Student Loans</Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"medical\">\r\n                  <Icon type=\"medicine-box\" />\r\n                  <span>Medical</span>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"vehicle\">\r\n                  <Icon type=\"car\" />\r\n                  <span>Vehicle</span>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                  key=\"cc\"\r\n                  title={\r\n                    <span>\r\n                      <Icon type=\"credit-card\" />\r\n                      <span>Credit Cards</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key=\"fee\">Fees</Menu.Item>\r\n                  <Menu.Item key=\"point\">Points</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key=\"fa\">\r\n                  <Icon type=\"phone\" />\r\n                  <span>Financial Advice</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"inv\">\r\n                  <Icon type=\"pound\" />\r\n                  <span>Investing</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"sav\">\r\n                  <Icon type=\"save\" />\r\n                  <span>Savings</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"trv\">\r\n                  <Icon type=\"rocket\" />\r\n                  <span>Travel</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"hb\">\r\n                  <Icon type=\"home\" />\r\n                  <span>Home Buying</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"wts\">\r\n                  <Icon type=\"loading-3-quarters\" />\r\n                  <span>Ways to Save</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"ban\">\r\n                  <Icon type=\"bank\" />\r\n                  <span>Banking</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"ins\">\r\n                  <Icon type=\"insurance\" />\r\n                  <span>Insurance</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"cs\">\r\n                  <Icon type=\"percentage\" />\r\n                  <span>Credit Score</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"bm\">\r\n                  <Icon type=\"exception\" />\r\n                  <span>Bills Mgmt</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"subsc\">\r\n                  <Icon type=\"youtube\" />\r\n                  <span>Subscriptions</span>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                  key=\"sol\"\r\n                  title={\r\n                    <span>\r\n                      <Icon type=\"mail\" />\r\n                      <span>Stages of Life</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key=\"ki\">Kid</Menu.Item>\r\n                  <Menu.Item key=\"ya\">Young Adult</Menu.Item>\r\n                  <Menu.Item key=\"ad\">Adult</Menu.Item>\r\n                  <Menu.Item key=\"ret\">Retirement</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </div>\r\n          </Sider>\r\n          <Content className=\"content\" style={{ margin: \"0px 0px 0\" }} />\r\n        </Layout>\r\n      </Content>\r\n      <BudgetFooter/>\r\n    </Layout>\r\n  );\r\n};\r\nexport  default AdviceSideBar;\r\n","'use strict';\r\nimport React from 'react'\r\nimport { Modal, Form, Input} from 'antd'\r\n\r\n\r\nclass CreateNewGoalForm extends React.Component {\r\n    render() {\r\n        const {visible, onCancel, onCreate, form} = this.props;\r\n        const {getFieldDecorator} = form;\r\n        return (\r\n            <Modal\r\n                visible={visible}\r\n                title=\"Create New Goal\"\r\n                okText=\"Create\"\r\n                onCancel={onCancel}\r\n                onOk={onCreate}\r\n            >\r\n                <Form layout=\"vertical\">\r\n                    <Form.Item label=\"New Goal\">\r\n                        {getFieldDecorator('goal', {\r\n                            rules: [{required: true, message: 'Please input the title of collection!'}],\r\n                        })(<Input/>)}\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(CreateNewGoalForm);","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport './chart.css';\r\n\r\nclass MultiChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateCharts = this.updateCharts.bind(this);\r\n\r\n        this.state = {\r\n            optionsMixedChart: {\r\n                chart: {\r\n                    id: 'basic-bar',\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        columnWidth: '80%',\r\n                        endingShape: 'bar'\r\n                    }\r\n                },\r\n                stroke: {\r\n                    width: [2,15,15],\r\n                },\r\n                xaxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug']\r\n                },\r\n                markers: {\r\n                    size: 6,\r\n                    strokeWidth: 3,\r\n                    fillOpacity: 0,\r\n                    strokeOpacity: 0,\r\n                    hover: {\r\n                        size: 8\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    tickAmount: 5,\r\n                    min: 0,\r\n                    max: 100\r\n                }\r\n            },\r\n            seriesMixedChart: [{\r\n                name: 'series-1',\r\n                type: 'line',\r\n                data: [30, 40, 25, 50, 49, 21, 70, 51]\r\n            }, {\r\n                name: 'series-2',\r\n                type: 'column',\r\n                data: [23, 12, 54, 61, 32, 56, 81, 19]\r\n            }, {\r\n                name: 'series-3',\r\n                type: 'column',\r\n                data: [62, 12, 45, 55, 76, 41, 23, 43]\r\n            }],\r\n            optionsRadial: {\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        startAngle: -135,\r\n                        endAngle: 225,\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: '70%',\r\n                            background: '#fff',\r\n                            image: undefined,\r\n                            imageOffsetX: 0,\r\n                            imageOffsetY: 0,\r\n                            position: 'front',\r\n                            dropShadow: {\r\n                                enabled: true,\r\n                                top: 3,\r\n                                left: 0,\r\n                                blur: 4,\r\n                                opacity: 0.24\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: '#fff',\r\n                            strokeWidth: '67%',\r\n                            margin: 0, // margin is in pixels\r\n                            dropShadow: {\r\n                                enabled: true,\r\n                                top: -3,\r\n                                left: 0,\r\n                                blur: 4,\r\n                                opacity: 0.35\r\n                            }\r\n                        },\r\n\r\n                        dataLabels: {\r\n                            showOn: 'always',\r\n                            name: {\r\n                                offsetY: -20,\r\n                                show: true,\r\n                                color: '#888',\r\n                                fontSize: '13px'\r\n                            },\r\n                            value: {\r\n                                formatter: function (val) {\r\n                                    return val;\r\n                                },\r\n                                color: '#111',\r\n                                fontSize: '30px',\r\n                                show: true,\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        shade: 'dark',\r\n                        type: 'horizontal',\r\n                        shadeIntensity: 0.5,\r\n                        gradientToColors: ['#ABE5A1'],\r\n                        inverseColors: true,\r\n                        opacityFrom: 1,\r\n                        opacityTo: 1,\r\n                        stops: [0, 100]\r\n                    }\r\n                },\r\n                stroke: {\r\n                    lineCap: 'round'\r\n                },\r\n                labels: ['Percent'],\r\n\r\n            },\r\n            seriesRadial: [76],\r\n            optionsBar: {\r\n                chart: {\r\n                    stacked: true,\r\n                    stackType: '100%',\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: true,\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    dropShadow: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                stroke: {\r\n                    width: 0,\r\n                },\r\n                xaxis: {\r\n                    categories: ['Fav Color'],\r\n                    labels: {\r\n                        show: false\r\n                    },\r\n                    axisBorder: {\r\n                        show: false\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1,\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        shade: 'dark',\r\n                        type: \"vertical\",\r\n                        shadeIntensity: 0.35,\r\n                        gradientToColors: undefined,\r\n                        inverseColors: false,\r\n                        opacityFrom: 0.85,\r\n                        opacityTo: 0.85,\r\n                        stops: [90, 0, 100]\r\n                    },\r\n                },\r\n\r\n                legend: {\r\n                    position: 'bottom',\r\n                    horizontalAlign: 'right',\r\n                }\r\n            },\r\n            seriesBar: [{\r\n                name: 'blue',\r\n                data: [32]\r\n            }, {\r\n                name: 'green',\r\n                data: [41]\r\n            }, {\r\n                name: 'yellow',\r\n                data: [12]\r\n            }, {\r\n                name: 'red',\r\n                data: [65]\r\n            }]\r\n        }\r\n    }\r\n\r\n    updateCharts() {\r\n        const max = 90;\r\n        const min = 30;\r\n        const newMixedSeries = [];\r\n        const newBarSeries = [];\r\n\r\n        this.state.seriesMixedChart.map((s) => {\r\n            const data = s.data.map(() => {\r\n                return Math.floor(Math.random() * (max - min + 1)) + min\r\n            });\r\n            newMixedSeries.push({ data: data, type: s.type })\r\n        });\r\n\r\n        this.state.seriesBar.map((s) => {\r\n            const data = s.data.map(() => {\r\n                return Math.floor(Math.random() * (180 - min + 1)) + min\r\n            });\r\n            newBarSeries.push({ data, name: s.name })\r\n        });\r\n\r\n\r\n        this.setState({\r\n            seriesMixedChart: newMixedSeries,\r\n            seriesBar: newBarSeries,\r\n            seriesRadial: [Math.floor(Math.random() * (90 - 50 + 1)) + 50]\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col mixed-chart\">\r\n                        <Chart options={this.state.optionsMixedChart} series={this.state.seriesMixedChart} type=\"line\" width=\"500\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiChart;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Layout, Icon, Menu, Button, Row, Col, Carousel} from \"antd\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport CreateNewGoalForm from \"./CreateNewGoalForm\";\r\nimport  '../../styles/index.css';\r\nimport MultiChart from \"../SideBar/MultiChart\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\nconst { Content, Sider, Footer } = Layout;\r\n\r\n\r\nconst GoalsSideBar = props => {\r\n    const [collapsed, onCollapse] = useState(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch({\r\n                type: CURRENT_COMPONENT,\r\n                payload: { component: \"goals\", sideBarMenuKey: \"goals\" }\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n\r\n    const  [ formRef, saveFormRef] = useState(formRef);\r\n\r\n    const  [ visible, showModal] = useState(false);\r\n    const [message,setMessage]=useState(['Vacation','Car','Home']);\r\n\r\n    const handleCancel = () => {\r\n        showModal(false);\r\n    };\r\n    const handleCreate = () => {\r\n        const { form } = formRef.props;\r\n        form.validateFields((err, values) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            console.log('Received values of form: ', [...message,values.goal]);\r\n            setMessage([...message,values.goal]);\r\n            form.resetFields();\r\n\r\n            //this.props.parentCallback(prevState =>values.goal);\r\n        });\r\n\r\n        showModal(false);\r\n    };\r\n\r\n    {\r\n        return (\r\n            <Layout className=\"app\">\r\n                <HeaderRes user={props.user} />\r\n                <Content style={{ padding: \"0px 0px\" }}>\r\n                    <Layout style={{ padding: \"0px 0px\"}}>\r\n                        <Sider\r\n                            style={{ padding: \"0px 0px\" }}\r\n                            id=\"sider-menu\"\r\n                            trigger={null}\r\n                            collapsible\r\n                            collapsed={collapsed}\r\n                            breakpoint=\"lg\"\r\n                            onBreakpoint={broken => {\r\n                                // this.toggleCollapsed();\r\n                            }}\r\n                            onCollapse={onCollapse}\r\n                        >\r\n                            <div style={{ padding: \"0px 0px\" }}>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={() => onCollapse(!collapsed)}\r\n                                    style={{ marginBottom: 16 }}\r\n                                >\r\n                                    {<Icon type={collapsed ? 'menu-unfold' : 'menu-fold'}  />}\r\n                                </Button>\r\n                                <Menu\r\n                                    defaultSelectedKeys={[\"vac\"]}\r\n                                    mode=\"inline\"\r\n                                    theme=\"dark\"\r\n                                    inlineCollapsed={collapsed}\r\n                                    style={{ padding: \"0px 0px\" }}\r\n                                >\r\n                                    <SubMenu\r\n                                        key=\"goals\"\r\n                                        title={\r\n                                            <span>\r\n                     <Icon type=\"crown\" />\r\n                      <span>Goals</span>\r\n                    </span>\r\n                                        }\r\n                                    >{message.map(reptile =>\r\n                                        <Menu.Item key={reptile}>\r\n                                            <Icon type=\"crown\" />\r\n                                            <span>{reptile}</span>\r\n                                        </Menu.Item>)}\r\n\r\n\r\n                                    </SubMenu>\r\n\r\n                                </Menu>\r\n                            </div>\r\n                        </Sider>\r\n                        <Content className=\"content\" style={{ margin: \"0px 0px 0\" }} >\r\n                            <div className=\"ant-layout\">\r\n                                <Row>\r\n                                    <Col span={5}>\r\n                                        <div>\r\n                                            <Button type=\"primary\" onClick={showModal}>\r\n                                                New Goal\r\n                                            </Button>\r\n                                            <CreateNewGoalForm\r\n                                                wrappedComponentRef={saveFormRef}\r\n                                                visible={visible}\r\n                                                onCancel={handleCancel}\r\n                                                onCreate={handleCreate}\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <div >\r\n                                    <Carousel >\r\n                                        {message.map(reptile =><div>\r\n                                            <h3>{reptile}</h3>\r\n                                            <MultiChart/>\r\n                                        </div> )}\r\n                                    </Carousel>\r\n                                    </div>\r\n                                </Row>\r\n                            </div>\r\n\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n               <BudgetFooter/>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\nexport  default GoalsSideBar;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Layout, Icon, Menu, Button } from \"antd\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\nconst { Content, Sider} = Layout;\r\n\r\nconst CalculatorSideBar = props => {\r\n    const [collapsed, onCollapse] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch({\r\n                type: CURRENT_COMPONENT,\r\n                payload: { component: \"calculator\", sideBarMenuKey: \"calculator\" }\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n\r\n    {\r\n        return (\r\n            <Layout className=\"app\">\r\n                <HeaderRes user={props.user}/>\r\n                <Content style={{ padding: \"0px 0px\" }}>\r\n                    <Layout style={{ padding: \"0px 0px\"}}>\r\n                        <Sider\r\n                            style={{ padding: \"0px 0px\" }}\r\n                            id=\"sider-menu\"\r\n                            trigger={null}\r\n                            collapsible\r\n                            collapsed={collapsed}\r\n                            breakpoint=\"lg\"\r\n                            onBreakpoint={broken => {\r\n                                // this.toggleCollapsed();\r\n                            }}\r\n                            onCollapse={onCollapse}\r\n                        >\r\n                            <div style={{ padding: \"0px 0px\" }}>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={() => onCollapse(!collapsed)}\r\n                                    style={{ marginBottom: 16 }}\r\n                                >\r\n                                    {<Icon type={collapsed ? 'menu-unfold' : 'menu-fold'}  />}\r\n                                </Button>\r\n                                <Menu\r\n                                    defaultSelectedKeys={[\"nw\"]}\r\n                                    mode=\"inline\"\r\n                                    theme=\"dark\"\r\n                                    inlineCollapsed={collapsed}\r\n                                    style={{ padding: \"0px 0px\" }}\r\n                                >\r\n                                    <Menu.Item key=\"lc\">\r\n                                        <Icon type=\"check-circle\" />\r\n                                        <span>Loan Calculator</span>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"mc\">\r\n                                        <Icon type=\"bg-colors\" />\r\n                                        <span>Mortgage Calculator</span>\r\n                                    </Menu.Item>\r\n                                </Menu>\r\n                            </div>\r\n                        </Sider>\r\n                        <Content className=\"content\" style={{ margin: \"0px 0px 0\" }} />\r\n                    </Layout>\r\n                </Content>\r\n                <BudgetFooter/>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\nexport  default CalculatorSideBar;\r\n","\"use strict\";\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../../styles/index.css\";\r\nimport {\r\n  Form,\r\n  Select,\r\n\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n\r\n} from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Cash extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  normFile = e => {\r\n    console.log(\"Upload event:\", e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"ant-layout\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item label=\"Dragger\">\r\n            {getFieldDecorator(\"dragger\", {\r\n              valuePropName: \"fileList\",\r\n              getValueFromEvent: this.normFile\r\n            })(\r\n              <Upload.Dragger name=\"files\">\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <Icon type=\"inbox\" />\r\n                </p>\r\n                <p className=\"ant-upload-text\">\r\n                  Click or drag file to this area to upload\r\n                </p>\r\n                <p className=\"ant-upload-hint\">\r\n                  Support for a single or bulk upload.\r\n                </p>\r\n              </Upload.Dragger>\r\n            )}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//const ScanPDF = Form.create({ name: 'validate_other' })(ScanPDF);\r\n\r\nexport default Form.create({ name: \"validate_other\" })(Cash);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Layout, Icon, Menu, Button } from \"antd\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nimport SubMenu from \"antd/es/menu/SubMenu\";\r\nimport {\r\n    HashRouter as Router,\r\n    NavLink,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Cash from \"./Cash\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\nconst { Content, Sider, Footer } = Layout;\r\n\r\nconst AccountsSideBar = props => {\r\n    const [collapsed, onCollapse] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch({\r\n                type: CURRENT_COMPONENT,\r\n                payload: { component: \"accounts\", sideBarMenuKey: \"accounts\" }\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n\r\n    {\r\n        return (\r\n            <Layout className=\"app\">\r\n                <HeaderRes user={props.user}/>\r\n                <Content style={{ padding: \"0px 0px\" }}>\r\n                    <Router>\r\n                    <Layout style={{ padding: \"0px 0px\"}}>\r\n                        <Sider\r\n                            style={{ padding: \"0px 0px\" }}\r\n                            id=\"sider-menu\"\r\n                            trigger={null}\r\n                            collapsible\r\n                            collapsed={collapsed}\r\n                            breakpoint=\"lg\"\r\n                            onBreakpoint={broken => {\r\n                                // this.toggleCollapsed();\r\n                            }}\r\n                            onCollapse={onCollapse}\r\n                        >\r\n                            <div style={{ padding: \"0px 0px\" }}>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={() => onCollapse(!collapsed)}\r\n                                    style={{ marginBottom: 16 }}\r\n                                >\r\n                                    {<Icon type={collapsed ? 'menu-unfold' : 'menu-fold'}  />}\r\n                                </Button>\r\n                                <Menu\r\n                                    defaultSelectedKeys={[\"cash\"]}\r\n                                    mode=\"inline\"\r\n                                    theme=\"dark\"\r\n                                    inlineCollapsed={collapsed}\r\n                                    style={{ padding: \"0px 0px\" }}\r\n                                >\r\n                                    <SubMenu\r\n                                        key=\"sub2\"\r\n                                        title={\r\n                                            <span>\r\n                      <Icon type=\"gold\" />\r\n                      <span>Total Net Worth</span>\r\n                    </span>\r\n                                        }\r\n                                    >\r\n                                        <Menu.Item key=\"cash\">\r\n                                            <NavLink to=\"/accounts/cash\">\r\n                                            <Icon type=\"dollar\" />\r\n                                            <span>Cash</span>\r\n                                            </NavLink>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item key=\"cc\">\r\n                                            <Icon type=\"credit-card\" />\r\n                                            <span>Credit Cards</span>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item key=\"loans\">\r\n                                            <Icon type=\"transaction\" />\r\n                                            <span>Loans</span>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item key=\"investment\">\r\n                                            <Icon type=\"line-chart\" />\r\n                                            <span>Investments</span>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item key=\"property\">\r\n                                            <Icon type=\"property-safety\" />\r\n                                            <span>Property</span>\r\n                                        </Menu.Item>\r\n                                    </SubMenu>\r\n                                </Menu>\r\n                            </div>\r\n                        </Sider>\r\n                        <Content className=\"content\" style={{ margin: \"0px 0px 0\" }} >\r\n                            <Route path=\"/accounts/cash\" component={Cash} />\r\n                        </Content>\r\n                    </Layout>\r\n                    </Router>\r\n                </Content>\r\n            <BudgetFooter/>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\nexport  default AccountsSideBar;\r\n","import gql from \"graphql-tag\";\r\nexport const CREATE_USER = gql`\r\n  mutation createUser($user_id: String!, $screen_user_name: String!) {\r\n    createuserAccount(\r\n      data: { user_id: $user_id, screen_user_name: $screen_user_name }\r\n    ) {\r\n      id\r\n      user_id\r\n    }\r\n  }\r\n`;","import React, {Component, useEffect, useState} from \"react\";\r\nimport \"./login1.css\";\r\nimport \"./login3.css\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport app from \"../base\";\r\nimport * as firebase from \"firebase\";\r\nimport {compose, graphql, withApollo} from \"react-apollo\";\r\nimport {CREATE_SAVING} from \"../../graphql/mutation/savings/SavingsMutation\";\r\nimport {CREATE_USER} from \"../../graphql/mutation/user/UserMutation\";\r\n\r\n\r\n\r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    savelogin(result){\r\n       this.props.createUserMutation({\r\n           variables: {\r\n               user_id: result.user.email,\r\n               screen_user_name:result.user.displayName\r\n           }\r\n       });\r\n    };\r\n\r\n\r\n     handleSignUp = async event => {\r\n        event.preventDefault();\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n         const { history } = this.props;\r\n        try {\r\n            app.auth().signInWithPopup(provider).then(result=>{\r\n                console.log(result);\r\n                this.props.createUserMutation({\r\n                    variables: {\r\n                        user_id: result.user.email,\r\n                        screen_user_name:result.user.displayName\r\n                    }\r\n                });\r\n                history.push('/');\r\n            });\r\n            /*(function(result) {\r\n                console.log(result);\r\n                this.props.createUserMutation({\r\n                    variables: {\r\n                        user_id: result.user.email,\r\n                        screen_user_name:result.user.displayName\r\n                    }\r\n                });\r\n                history.push('/');\r\n            },this).catch(function(error) {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                const email = error.email;\r\n                const credential = error.credential;\r\n             });*/\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    handleFbSignUp = async event => {\r\n        event.preventDefault();\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        const { history } = this.props;\r\n        try {\r\n            app.auth().signInWithPopup(provider).then(function(result) {\r\n                history.push('/');\r\n            }).catch(function(error) {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                const email = error.email;\r\n                const credential = error.credential;\r\n            });\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100\">\r\n                    <form action=\"\" method=\"post\" className=\"login100-form validate-form\">\r\n\t\t\t\t\t<span className=\"login100-form-title p-b-43\">\r\n\t\t\t\t\t\tLogin to continue\r\n\t\t\t\t\t</span>\r\n\r\n\r\n                        <div className=\"wrap-input100 validate-input\" data-validate = \"Valid email is required: ex@abc.xyz\">\r\n                            <input className=\"input100\" type=\"text\" name=\"email\" style={{background:\"#f2f2f2\",height:\"78px\",border:\"0px\"}}/>\r\n                            <span className=\"focus-input100\"/>\r\n                            <span className=\"label-input100\">Email</span>\r\n                        </div>\r\n\r\n                        <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n                            <input className=\"input100\" type=\"password\" name=\"pass\" style={{background:\"#f2f2f2\",height:\"78px\",border:\"0px\"}}/>\r\n                            <span className=\"focus-input100\"/>\r\n                            <span className=\"label-input100\">Password</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex-sb-m w-full p-t-3 p-b-32\">\r\n                            <div>\r\n                                <a href=\"#\" className=\"txt1\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button className=\"login100-form-btn\">\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"text-center p-t-46 p-b-20\">\r\n\t\t\t\t\t\t<span className=\"txt2\">\r\n\t\t\t\t\t\t\tor sign up using\r\n\t\t\t\t\t\t</span>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"login100-form-social flex-c-m\">\r\n                            <a href=\"#\" className=\"login100-form-social-item flex-c-m bg1 m-r-5\" onClick={this.handleFbSignUp}>\r\n                                <i className=\"fa fa-facebook-f\" aria-hidden=\"true\"/>\r\n                            </a>\r\n\r\n                            <a href=\"#\" className=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n                                <i className=\"fa fa-twitter\" aria-hidden=\"true\"/>\r\n                            </a>\r\n                            <a href=\"#\" className=\"login100-form-social-item flex-c-m bg3 m-r-5\" onClick={this.handleSignUp}>\r\n                                <i className=\"fa fa-google\" aria-hidden=\"true\" />\r\n                            </a>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"login100-more\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(CREATE_USER, { name: \"createUserMutation\" })\r\n)(withApollo(Login));\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport default function PrivateRoute({\r\n                                         component: Component,\r\n                                         authenticated,\r\n                                         ...rest\r\n                                     }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                authenticated === true ? (\r\n                    <Component {...props} {...rest} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Table,\r\n    Input,\r\n    Popconfirm,\r\n    Form,\r\n    Statistic,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Layout,\r\n    Card, Icon\r\n} from \"antd\";\r\nimport BudgetFooter from \"../footer/Footer\";\r\nimport SavingsChart from \"../budget/savings/SavingsChart\";\r\nimport SavingTypeChart from \"../budget/savings/SavingsTypeChart\";\r\nimport SavingPaiChart from \"../budget/savings/SavingsPaiChart\";\r\nimport HeaderRes from \"../header/Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport CURRENT_COMPONENT from \"../../reducers/types\";\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\nconst DashBoard = props =>{\r\n\r\n    const [collapsed, onCollapse] = useState(false);\r\n    const inputRef = useRef();\r\n    const dispatch = useDispatch();\r\n    useEffect(\r\n        () => {\r\n            dispatch({\r\n                type: CURRENT_COMPONENT,\r\n                payload: { component: \"dashboard\", sideBarMenuKey: \"dashboard\" }\r\n            });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    {\r\n    return (\r\n      <Layout className=\"app\">\r\n        <HeaderRes user={props.user} />\r\n        <Content className=\"content\">\r\n\r\n            <div className=\"ant-layout\" >\r\n                <div className=\"flex-row\">\r\n                    <div className=\"flex-col\">\r\n                        {\" \"}\r\n                        <Card title=\"Monthly Saving \" bordered={false} headStyle={{background:\"#00a0e9\"}}>\r\n                            <SavingsChart\r\n                                 chartData={props.chartData}\r\n                                month={props.month}\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"flex-col\">\r\n                        {\" \"}\r\n                        <Card title=\"Saving By Category\" bordered={false} headStyle={{background:\"#00a0e9\"}}>\r\n                            <SavingTypeChart  style={{height:\"580\"}}\r\n                                              spendingTypeChartLavel={props.spendingTypeChartLavel}\r\n                                              spendingTypeChartSeries={\r\n                                                  props.spendingTypeChartSeries\r\n                                              }\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"flex-col\">\r\n                        {\" \"}\r\n                        <Card title=\"Saving By Individual \" bordered={false} headStyle={{background:\"#00a0e9\"}}>\r\n                            <SavingPaiChart\r\n                                paiChartData={props.paiChartData}\r\n                                paiChartLabels={props.paiChartLabels}\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-row\">\r\n                    <div className=\"flex-col\">\r\n                        <Card title=\"Total Saving By Individual \" bordered={false} headStyle={{background:\"#00a0e9\"}}>\r\n                            <Statistic\r\n                                title=\"Primary Total Saving\"\r\n                                value={props.primaryTotalSaving}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#00a0e9' }}\r\n                                suffix={<Icon type=\"dollar\" theme=\"twoTone\" />}\r\n                            />\r\n                            <Statistic\r\n                                title=\"Spouse Total Saving\"\r\n                                value={props.spouseTotalSaving}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#00a0e9' }}\r\n                                suffix={<Icon type=\"dollar\" theme=\"twoTone\" />}\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"flex-col\">\r\n                        <Card title=\"Total Extra Retirement Saving By Individual\" bordered={false} headStyle={{background:\"#00a0e9\"}}>\r\n                            <Statistic\r\n                                title=\"Primary Total Extra Retirement Saving\"\r\n                                value={props.primaryExtraTotalSaving}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#28cf20' }}\r\n                                suffix={<Icon type=\"dollar\" theme=\"twoTone\" />}\r\n\r\n                            />\r\n                            <Statistic\r\n                                title=\"Spouse Total Extra Retirement Saving\"\r\n                                value={props.spouseExtraTotalSaving}\r\n                                precision={2}\r\n                                valueStyle={{ color: '#28cf20' }}\r\n                                suffix={<Icon type=\"dollar\"  theme=\"twoTone\"/>}\r\n\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"flex-col\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Content>\r\n          <BudgetFooter />\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default (DashBoard);\r\n","import React from \"react\";\r\nimport { Radio, Icon,  Select, Layout } from \"antd\";\r\nimport \"../../styles/index.css\";\r\nimport { compose, graphql, Query, withApollo } from \"react-apollo\";\r\nimport DashBoard from \"./DashBoard\";\r\nimport { CREATE_SAVING } from \"../../graphql/mutation/savings/SavingsMutation\";\r\nimport { yearEndDate, yearStartDate } from \"../common/Duration\";\r\nimport { USER_ALL_MONTHELY_SAVINGS } from \"../../graphql/queries/savings/SavingsQuery\";\r\nimport { savingChartData} from \"../common/PrepareData\";\r\nimport HeaderRes from \"../header/Header\";\r\nconst { Content } = Layout;\r\n\r\nclass SavingDataForChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      durationView: 0,\r\n      startDate: yearStartDate,\r\n      endDate: yearEndDate\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const durationView = this.state.durationView;\r\n\r\n    return (\r\n      <div className=\"ant-layout\">\r\n        <Layout className=\"app\">\r\n          <HeaderRes user={this.props.user} />\r\n          <Content className=\"content\">\r\n            <Layout style={{ padding: \"0px 0px\" }}>\r\n              <Radio.Group\r\n                defaultValue=\"0\"\r\n                buttonStyle=\"solid\"\r\n                onChange={e => {\r\n                  this.setState({ durationView: e.target.value });\r\n                }}\r\n              >\r\n                <Radio.Button value=\"0\">Annually</Radio.Button>\r\n                <Radio.Button value=\"1\">Quarterly</Radio.Button>\r\n                <Radio.Button value=\"2\">Monthly</Radio.Button>\r\n                <Radio.Button value=\"3\">Weekly</Radio.Button>\r\n                <Radio.Button value=\"4\">Fortnightly</Radio.Button>\r\n              </Radio.Group>\r\n              {\r\n                <Query\r\n                  query={USER_ALL_MONTHELY_SAVINGS}\r\n                  variables={{\r\n                    user_id: this.props.user.email,\r\n                    tranaction_start_date: this.state.endDate,\r\n                    transaction_end_date: this.state.startDate\r\n                  }}\r\n                  fetchPolicy={\"network-only\"}\r\n                >\r\n                  {({ loading, error, data }) => {\r\n                    if (loading)\r\n                      return (\r\n                        <div style={{ align: \"center\" }}>\r\n                          <Icon type=\"loading\" />\r\n                        </div>\r\n                      );\r\n                    if (error) return <div>Error</div>;\r\n\r\n                    if (data != null) {\r\n                      const {\r\n                        chartData12,\r\n                        month,\r\n                        paiChartData,\r\n                        labels,\r\n                        series,\r\n                        paiChartLabels,\r\n                        primaryTotalSaving,spouseTotalSaving ,primaryExtraTotalSaving,spouseExtraTotalSaving\r\n                      } = savingChartData(data, durationView);\r\n\r\n                      return (\r\n                        <DashBoard\r\n                          onRef={ref => (this.child = ref)}\r\n                          chartData={chartData12}\r\n                          month={month}\r\n                          paiChartData={paiChartData}\r\n                          durationView={durationView}\r\n                          spendingTypeChartLavel={labels}\r\n                          spendingTypeChartSeries={series}\r\n                          paiChartLabels={paiChartLabels}\r\n                          primaryTotalSaving={primaryTotalSaving}\r\n                          spouseTotalSaving={spouseTotalSaving} primaryExtraTotalSaving={primaryExtraTotalSaving} spouseExtraTotalSaving={spouseExtraTotalSaving}\r\n                          user={this.props.user}\r\n                        />\r\n                      );\r\n                    }\r\n                  }}\r\n                </Query>\r\n              }\r\n            </Layout>\r\n          </Content>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default compose(\r\n  graphql(CREATE_SAVING, { name: \"createSavingsMutation\" })\r\n)(withApollo(SavingDataForChart));\r\n","import { Select } from \"antd\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport { yearEndDate, yearStartDate,mapView} from \"../common/Duration\";\r\nimport DashBoard from \"../dashboard/DashBoard\";\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nexport const savingChartData = (data,durationView) => {\r\n  let graphData1 = [];\r\n  const savings = data.savings;\r\n  const extraRetirementSavingses = data.extraRetirementSavingses;\r\n  let primaryTotalSaving = 0;\r\n  let spouseTotalSaving = 0;\r\n  let primaryExtraTotalSaving = 0;\r\n  let spouseExtraTotalSaving = 0;\r\n  for (let i in savings) {\r\n    graphData1.push({\r\n      topic: savings[i].saving_type.saving_type,\r\n      month: moment(savings[i].transactionDate).format(\"MMMM\"),\r\n      primarySavings: Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView])),\r\n      spouseSavings: Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView])),\r\n      primaryExtraRetirementSavingses:0,\r\n      spouseExtraRetirementSavingses:0,\r\n      salary_benefit:Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView]))+Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView])),\r\n    });\r\n\r\n\r\n    primaryTotalSaving =\r\n        primaryTotalSaving + Math.round((((savings[i].saving_amount)*mapView[savings[i].duration][savings[i].duration])/mapView[durationView][durationView]));\r\n    spouseTotalSaving =\r\n        spouseTotalSaving + Math.round((((savings[i].spouse_amount)*mapView[savings[i].spouse_duration][savings[i].spouse_duration])/mapView[durationView][durationView]));\r\n  }\r\n  for (let i in extraRetirementSavingses) {\r\n    graphData1.push({\r\n      topic: extraRetirementSavingses[i].extra_retirement_saving_type.extra_retirement_saving_type,\r\n      month: moment(extraRetirementSavingses[i].transactionDate).format(\"MMMM\"),\r\n      primaryExtraRetirementSavingses: Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView])),\r\n      spouseExtraRetirementSavingses: Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView])),\r\n      primarySavings:0,\r\n      spouseSavings:0,\r\n      salary_benefit:Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView]))+Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView])),\r\n    });\r\n\r\n\r\n    primaryExtraTotalSaving =\r\n        primaryExtraTotalSaving + Math.round((((extraRetirementSavingses[i].extra_retirement_saving_amount)*mapView[extraRetirementSavingses[i].duration][extraRetirementSavingses[i].duration])/mapView[durationView][durationView]));\r\n    spouseExtraTotalSaving =\r\n        spouseExtraTotalSaving + Math.round((((extraRetirementSavingses[i].spouse_amount)*mapView[extraRetirementSavingses[i].spouse_duration][extraRetirementSavingses[i].spouse_duration])/mapView[durationView][durationView]));\r\n  }\r\n    const month = [];\r\n    let chartData12=[];\r\n    const result1 = _(graphData1)\r\n      .groupBy('month')\r\n      .map(function(items, month) {\r\n        return {\r\n          month: month,\r\n          name:_.map(items, 'topic'),\r\n          data: _.map(items, 'salary_benefit')\r\n        };\r\n      }).value();\r\n  for(let i in result1){\r\n    month.push(result1[i].month);\r\n    for(let j in result1[i].name){\r\n      let temp12=[...Array(result1.length)].map(x=>0);\r\n      temp12.splice(i,1,result1[i].data[j]);\r\n      chartData12.push({\r\n        name:result1[i].name[j],\r\n        data:temp12\r\n      })\r\n    }\r\n  }\r\n  const labels=[];\r\n  const series=[];\r\n  _(chartData12).groupBy('name').map(function(item,name){\r\n    labels.push(name);\r\n    series.push(item[0].data.reduce((a, b) => a + b, 0));\r\n  }).value();\r\n  let primarySavings = 0;\r\n  let spouseSavings = 0;\r\n  let primaryExtraRetirementSavingses = 0;\r\n  let spouseExtraRetirementSavingses = 0;\r\n\r\n  graphData1.filter(value => {\r\n    primarySavings = primarySavings + value.primarySavings;\r\n    spouseSavings = spouseSavings + value.spouseSavings;\r\n    primaryExtraRetirementSavingses = primaryExtraRetirementSavingses + value.primaryExtraRetirementSavingses;\r\n    spouseExtraRetirementSavingses = spouseExtraRetirementSavingses + value.spouseExtraRetirementSavingses;\r\n\r\n  });\r\n\r\n  let paiChartData = [\r\n    primarySavings,\r\n    spouseSavings,\r\n    primaryExtraRetirementSavingses,\r\n    spouseExtraRetirementSavingses\r\n  ];\r\n  const  paiChartLabels= ['Primary Savings','Spouse Savings','Primary Extra Saving','Spouse Extra Saving',];\r\n  return   {chartData12,month,paiChartData,labels,series , paiChartLabels,primaryTotalSaving,spouseTotalSaving ,primaryExtraTotalSaving,spouseExtraTotalSaving };\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport BudgetSideBar from \"./budget/BudgetSideBar\";\r\nimport PayStubSideBar from \"./paystub/PayStubSideBar\";\r\nimport AdviceSideBar from \"./advice/AdviceSideBar\";\r\nimport GoalsSideBar from \"./goals/GoalsSideBar\";\r\nimport CalculatorSideBar from \"./calculators/CalculatorSideBar\";\r\nimport AccountsSideBar from \"./accounts/AccountsSideBar\";\r\nimport Login from \"./login/Login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport app from \"./base\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport { createHashHistory } from 'history';\r\nimport SavingDataForChart from \"./dashboard/SavingDataForChart\";\r\n\r\nconst history = createHashHistory();\r\n\r\nclass App extends Component {\r\n\r\n    state = { loading: true, authenticated: false, user: null };\r\n\r\n\r\n    componentWillMount() {\r\n        app.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n\r\n                this.setState({\r\n                    authenticated: true,\r\n                    user: user,\r\n                    loading: false\r\n                });\r\n                history.push('/')\r\n            } else {\r\n                this.setState({\r\n                    authenticated: false,\r\n                    user: null,\r\n                    loading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n  render() {\r\n\r\n      const { authenticated, loading,user } = this.state;\r\n\r\n      if (loading) {\r\n          return <p>Loading..</p>;\r\n      }\r\n\r\n\r\n      return (\r\n      <div className=\"app-container cover\">\r\n          <Switch>\r\n              <PrivateRoute exact path=\"/\" component={SavingDataForChart}  authenticated={authenticated} user={user} />\r\n              <PrivateRoute exact path=\"/budget\" component={BudgetSideBar}  authenticated={authenticated} user={user} />\r\n              <Route exact path='/login' component={Login}/>\r\n              <PrivateRoute exact path='/paystub' component={PayStubSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute exact path='/advice' component={AdviceSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute exact path='/goals' component={GoalsSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute exact path=\"/calculator\" component={CalculatorSideBar} authenticated={authenticated} user={user}  />\r\n              <PrivateRoute exatc path=\"/accounts\" component={AccountsSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/budget/budgetspending\" component={BudgetSideBar} authenticated={authenticated} user={user} />\r\n              <PrivateRoute path=\"/budget/trackers\" component={BudgetSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/budget/cashflow\" component={BudgetSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/budget/saving\" component={BudgetSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/budget/income\" component={BudgetSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/paystub/manualentry\" component={PayStubSideBar} authenticated={authenticated} user={user} />\r\n              <PrivateRoute path=\"/paystub/autoscanpdf\" component={PayStubSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/accounts/cash\" component={AccountsSideBar} authenticated={authenticated} user={user}/>\r\n              <PrivateRoute path=\"/budget/budgetEntry\" component={BudgetSideBar} authenticated={authenticated} user={user}/>\r\n          </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (App);\r\n","import CURRENT_COMPONENT from \"./types\";\r\n\r\nconst initialState = {\r\n  currentComponent: \"\",\r\n  sideBarMenuItemKey: \"\",\r\n  sideBarMenuOptionKey:\"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  if (action.type === CURRENT_COMPONENT) {\r\n    return {\r\n      ...state,\r\n      currentComponent: action.payload.component,\r\n      sideBarMenuItemKey: action.payload.sideBarMenuKey,\r\n      sideBarMenuOptionKey:action.payload.sideBarMenuOptionKey\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport currentComponent from \"./currentComponent\";\r\n\r\nexport default combineReducers({\r\n  currentComponetReducer: currentComponent\r\n});\r\n","import { createStore} from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ApolloClient from 'apollo-client';\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport App from \"./components/App\";\r\nimport \"./styles/index.css\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport store from \"./reducers/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\n\r\nconst link = createUploadLink({ uri: \"https://smart-money-server.herokuapp.com/graphql\" });\r\nconst cache = new InMemoryCache();\r\n\r\nconst client = new ApolloClient({ cache, link });\r\n\r\nReactDOM.render(\r\n    <Router>\r\n    <ApolloProvider client={client} >\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </ApolloProvider>\r\n  </Router>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}